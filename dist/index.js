/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/es6-shim/es6-shim.js":
/*!*******************************************!*\
  !*** ./node_modules/es6-shim/es6-shim.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * https://github.com/paulmillr/es6-shim\n * @license es6-shim Copyright 2013-2016 by Paul Miller (http://paulmillr.com)\n *   and contributors,  MIT License\n * es6-shim: v0.35.4\n * see https://github.com/paulmillr/es6-shim/blob/0.35.3/LICENSE\n * Details and documentation:\n * https://github.com/paulmillr/es6-shim/\n */\n\n// UMD (Universal Module Definition)\n// see https://github.com/umdjs/umd/blob/master/returnExports.js\n(function (root, factory) {\n  /*global define */\n  if (true) {\n    // AMD. Register as an anonymous module.\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n}(this, function () {\n  'use strict';\n\n  var _apply = Function.call.bind(Function.apply);\n  var _call = Function.call.bind(Function.call);\n  var isArray = Array.isArray;\n  var keys = Object.keys;\n\n  var not = function notThunker(func) {\n    return function notThunk() {\n      return !_apply(func, this, arguments);\n    };\n  };\n  var throwsError = function (func) {\n    try {\n      func();\n      return false;\n    } catch (e) {\n      return true;\n    }\n  };\n  var valueOrFalseIfThrows = function valueOrFalseIfThrows(func) {\n    try {\n      return func();\n    } catch (e) {\n      return false;\n    }\n  };\n\n  var isCallableWithoutNew = not(throwsError);\n  var arePropertyDescriptorsSupported = function () {\n    // if Object.defineProperty exists but throws, it's IE 8\n    return !throwsError(function () {\n      return Object.defineProperty({}, 'x', { get: function () { } }); // eslint-disable-line getter-return\n    });\n  };\n  var supportsDescriptors = !!Object.defineProperty && arePropertyDescriptorsSupported();\n  var functionsHaveNames = (function foo() {}).name === 'foo';\n\n  var _forEach = Function.call.bind(Array.prototype.forEach);\n  var _reduce = Function.call.bind(Array.prototype.reduce);\n  var _filter = Function.call.bind(Array.prototype.filter);\n  var _some = Function.call.bind(Array.prototype.some);\n\n  var defineProperty = function (object, name, value, force) {\n    if (!force && name in object) { return; }\n    if (supportsDescriptors) {\n      Object.defineProperty(object, name, {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: value\n      });\n    } else {\n      object[name] = value;\n    }\n  };\n\n  // Define configurable, writable and non-enumerable props\n  // if they don’t exist.\n  var defineProperties = function (object, map, forceOverride) {\n    _forEach(keys(map), function (name) {\n      var method = map[name];\n      defineProperty(object, name, method, !!forceOverride);\n    });\n  };\n\n  var _toString = Function.call.bind(Object.prototype.toString);\n  var isCallable =  false ? 0 : function IsCallableFast(x) { return typeof x === 'function'; };\n\n  var Value = {\n    getter: function (object, name, getter) {\n      if (!supportsDescriptors) {\n        throw new TypeError('getters require true ES5 support');\n      }\n      Object.defineProperty(object, name, {\n        configurable: true,\n        enumerable: false,\n        get: getter\n      });\n    },\n    proxy: function (originalObject, key, targetObject) {\n      if (!supportsDescriptors) {\n        throw new TypeError('getters require true ES5 support');\n      }\n      var originalDescriptor = Object.getOwnPropertyDescriptor(originalObject, key);\n      Object.defineProperty(targetObject, key, {\n        configurable: originalDescriptor.configurable,\n        enumerable: originalDescriptor.enumerable,\n        get: function getKey() { return originalObject[key]; },\n        set: function setKey(value) { originalObject[key] = value; }\n      });\n    },\n    redefine: function (object, property, newValue) {\n      if (supportsDescriptors) {\n        var descriptor = Object.getOwnPropertyDescriptor(object, property);\n        descriptor.value = newValue;\n        Object.defineProperty(object, property, descriptor);\n      } else {\n        object[property] = newValue;\n      }\n    },\n    defineByDescriptor: function (object, property, descriptor) {\n      if (supportsDescriptors) {\n        Object.defineProperty(object, property, descriptor);\n      } else if ('value' in descriptor) {\n        object[property] = descriptor.value;\n      }\n    },\n    preserveToString: function (target, source) {\n      if (source && isCallable(source.toString)) {\n        defineProperty(target, 'toString', source.toString.bind(source), true);\n      }\n    }\n  };\n\n  // Simple shim for Object.create on ES3 browsers\n  // (unlike real shim, no attempt to support `prototype === null`)\n  var create = Object.create || function (prototype, properties) {\n    var Prototype = function Prototype() {};\n    Prototype.prototype = prototype;\n    var object = new Prototype();\n    if (typeof properties !== 'undefined') {\n      keys(properties).forEach(function (key) {\n        Value.defineByDescriptor(object, key, properties[key]);\n      });\n    }\n    return object;\n  };\n\n  var supportsSubclassing = function (C, f) {\n    if (!Object.setPrototypeOf) { return false; /* skip test on IE < 11 */ }\n    return valueOrFalseIfThrows(function () {\n      var Sub = function Subclass(arg) {\n        var o = new C(arg);\n        Object.setPrototypeOf(o, Subclass.prototype);\n        return o;\n      };\n      Object.setPrototypeOf(Sub, C);\n      Sub.prototype = create(C.prototype, {\n        constructor: { value: Sub }\n      });\n      return f(Sub);\n    });\n  };\n\n  var getGlobal = function () {\n    /* global self, window */\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof self !== 'undefined') { return self; }\n    if (typeof window !== 'undefined') { return window; }\n    if (typeof __webpack_require__.g !== 'undefined') { return __webpack_require__.g; }\n    throw new Error('unable to locate global object');\n  };\n\n  var globals = getGlobal();\n  var globalIsFinite = globals.isFinite;\n  var _indexOf = Function.call.bind(String.prototype.indexOf);\n  var _arrayIndexOfApply = Function.apply.bind(Array.prototype.indexOf);\n  var _concat = Function.call.bind(Array.prototype.concat);\n  // var _sort = Function.call.bind(Array.prototype.sort);\n  var _strSlice = Function.call.bind(String.prototype.slice);\n  var _push = Function.call.bind(Array.prototype.push);\n  var _pushApply = Function.apply.bind(Array.prototype.push);\n  var _join = Function.call.bind(Array.prototype.join);\n  var _shift = Function.call.bind(Array.prototype.shift);\n  var _max = Math.max;\n  var _min = Math.min;\n  var _floor = Math.floor;\n  var _abs = Math.abs;\n  var _exp = Math.exp;\n  var _log = Math.log;\n  var _sqrt = Math.sqrt;\n  var _hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);\n  var ArrayIterator; // make our implementation private\n  var noop = function () {};\n\n  var OrigMap = globals.Map;\n  var origMapDelete = OrigMap && OrigMap.prototype['delete'];\n  var origMapGet = OrigMap && OrigMap.prototype.get;\n  var origMapHas = OrigMap && OrigMap.prototype.has;\n  var origMapSet = OrigMap && OrigMap.prototype.set;\n\n  var Symbol = globals.Symbol || {};\n  var symbolSpecies = Symbol.species || '@@species';\n\n  var numberIsNaN = Number.isNaN || function isNaN(value) {\n    // NaN !== NaN, but they are identical.\n    // NaNs are the only non-reflexive value, i.e., if x !== x,\n    // then x is NaN.\n    // isNaN is broken: it converts its argument to number, so\n    // isNaN('foo') => true\n    return value !== value;\n  };\n  var numberIsFinite = Number.isFinite || function isFinite(value) {\n    return typeof value === 'number' && globalIsFinite(value);\n  };\n  var _sign = isCallable(Math.sign) ? Math.sign : function sign(value) {\n    var number = Number(value);\n    if (number === 0) { return number; }\n    if (numberIsNaN(number)) { return number; }\n    return number < 0 ? -1 : 1;\n  };\n  var _log1p = function log1p(value) {\n    var x = Number(value);\n    if (x < -1 || numberIsNaN(x)) { return NaN; }\n    if (x === 0 || x === Infinity) { return x; }\n    if (x === -1) { return -Infinity; }\n\n    return (1 + x) - 1 === 0 ? x : x * (_log(1 + x) / ((1 + x) - 1));\n  };\n\n  // taken directly from https://github.com/ljharb/is-arguments/blob/master/index.js\n  // can be replaced with require('is-arguments') if we ever use a build process instead\n  var isStandardArguments = function isArguments(value) {\n    return _toString(value) === '[object Arguments]';\n  };\n  var isLegacyArguments = function isArguments(value) {\n    return value !== null\n      && typeof value === 'object'\n      && typeof value.length === 'number'\n      && value.length >= 0\n      && _toString(value) !== '[object Array]'\n      && _toString(value.callee) === '[object Function]';\n  };\n  var isArguments = isStandardArguments(arguments) ? isStandardArguments : isLegacyArguments;\n\n  var Type = {\n    primitive: function (x) { return x === null || (typeof x !== 'function' && typeof x !== 'object'); },\n    string: function (x) { return _toString(x) === '[object String]'; },\n    regex: function (x) { return _toString(x) === '[object RegExp]'; },\n    symbol: function (x) {\n      return typeof globals.Symbol === 'function' && typeof x === 'symbol';\n    }\n  };\n\n  var overrideNative = function overrideNative(object, property, replacement) {\n    var original = object[property];\n    defineProperty(object, property, replacement, true);\n    Value.preserveToString(object[property], original);\n  };\n\n  // eslint-disable-next-line no-restricted-properties\n  var hasSymbols = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' && Type.symbol(Symbol());\n\n  // This is a private name in the es6 spec, equal to '[Symbol.iterator]'\n  // we're going to use an arbitrary _-prefixed name to make our shims\n  // work properly with each other, even though we don't have full Iterator\n  // support.  That is, `Array.from(map.keys())` will work, but we don't\n  // pretend to export a \"real\" Iterator interface.\n  var $iterator$ = Type.symbol(Symbol.iterator) ? Symbol.iterator : '_es6-shim iterator_';\n  // Firefox ships a partial implementation using the name @@iterator.\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=907077#c14\n  // So use that name if we detect it.\n  if (globals.Set && typeof new globals.Set()['@@iterator'] === 'function') {\n    $iterator$ = '@@iterator';\n  }\n\n  // Reflect\n  if (!globals.Reflect) {\n    defineProperty(globals, 'Reflect', {}, true);\n  }\n  var Reflect = globals.Reflect;\n\n  var $String = String;\n\n  /* global document */\n  var domAll = (typeof document === 'undefined' || !document) ? null : document.all;\n  var isNullOrUndefined = domAll == null ? function isNullOrUndefined(x) {\n    return x == null;\n  } : function isNullOrUndefinedAndNotDocumentAll(x) {\n    return x == null && x !== domAll;\n  };\n\n  var ES = {\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-call\n    Call: function Call(F, V) {\n      var args = arguments.length > 2 ? arguments[2] : [];\n      if (!ES.IsCallable(F)) {\n        throw new TypeError(F + ' is not a function');\n      }\n      return _apply(F, V, args);\n    },\n\n    RequireObjectCoercible: function (x, optMessage) {\n      if (isNullOrUndefined(x)) {\n        throw new TypeError(optMessage || 'Cannot call method on ' + x);\n      }\n      return x;\n    },\n\n    // This might miss the \"(non-standard exotic and does not implement\n    // [[Call]])\" case from\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-typeof-operator-runtime-semantics-evaluation\n    // but we can't find any evidence these objects exist in practice.\n    // If we find some in the future, you could test `Object(x) === x`,\n    // which is reliable according to\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toobject\n    // but is not well optimized by runtimes and creates an object\n    // whenever it returns false, and thus is very slow.\n    TypeIsObject: function (x) {\n      if (x === void 0 || x === null || x === true || x === false) {\n        return false;\n      }\n      return typeof x === 'function' || typeof x === 'object' || x === domAll;\n    },\n\n    ToObject: function (o, optMessage) {\n      return Object(ES.RequireObjectCoercible(o, optMessage));\n    },\n\n    IsCallable: isCallable,\n\n    IsConstructor: function (x) {\n      // We can't tell callables from constructors in ES5\n      return ES.IsCallable(x);\n    },\n\n    ToInt32: function (x) {\n      return ES.ToNumber(x) >> 0;\n    },\n\n    ToUint32: function (x) {\n      return ES.ToNumber(x) >>> 0;\n    },\n\n    ToNumber: function (value) {\n      if (hasSymbols && _toString(value) === '[object Symbol]') {\n        throw new TypeError('Cannot convert a Symbol value to a number');\n      }\n      return +value;\n    },\n\n    ToInteger: function (value) {\n      var number = ES.ToNumber(value);\n      if (numberIsNaN(number)) { return 0; }\n      if (number === 0 || !numberIsFinite(number)) { return number; }\n      return (number > 0 ? 1 : -1) * _floor(_abs(number));\n    },\n\n    ToLength: function (value) {\n      var len = ES.ToInteger(value);\n      if (len <= 0) { return 0; } // includes converting -0 to +0\n      if (len > Number.MAX_SAFE_INTEGER) { return Number.MAX_SAFE_INTEGER; }\n      return len;\n    },\n\n    SameValue: function (a, b) {\n      if (a === b) {\n        // 0 === -0, but they are not identical.\n        if (a === 0) { return 1 / a === 1 / b; }\n        return true;\n      }\n      return numberIsNaN(a) && numberIsNaN(b);\n    },\n\n    SameValueZero: function (a, b) {\n      // same as SameValue except for SameValueZero(+0, -0) == true\n      return (a === b) || (numberIsNaN(a) && numberIsNaN(b));\n    },\n\n    GetIterator: function (o) {\n      if (isArguments(o)) {\n        // special case support for `arguments`\n        return new ArrayIterator(o, 'value');\n      }\n      var itFn = ES.GetMethod(o, $iterator$);\n      if (!ES.IsCallable(itFn)) {\n        // Better diagnostics if itFn is null or undefined\n        throw new TypeError('value is not an iterable');\n      }\n      var it = ES.Call(itFn, o);\n      if (!ES.TypeIsObject(it)) {\n        throw new TypeError('bad iterator');\n      }\n      return it;\n    },\n\n    GetMethod: function (o, p) {\n      var func = ES.ToObject(o)[p];\n      if (isNullOrUndefined(func)) {\n        return void 0;\n      }\n      if (!ES.IsCallable(func)) {\n        throw new TypeError('Method not callable: ' + p);\n      }\n      return func;\n    },\n\n    IteratorComplete: function (iterResult) {\n      return !!iterResult.done;\n    },\n\n    IteratorClose: function (iterator, completionIsThrow) {\n      var returnMethod = ES.GetMethod(iterator, 'return');\n      if (returnMethod === void 0) {\n        return;\n      }\n      var innerResult, innerException;\n      try {\n        innerResult = ES.Call(returnMethod, iterator);\n      } catch (e) {\n        innerException = e;\n      }\n      if (completionIsThrow) {\n        return;\n      }\n      if (innerException) {\n        throw innerException;\n      }\n      if (!ES.TypeIsObject(innerResult)) {\n        throw new TypeError(\"Iterator's return method returned a non-object.\");\n      }\n    },\n\n    IteratorNext: function (it) {\n      var result = arguments.length > 1 ? it.next(arguments[1]) : it.next();\n      if (!ES.TypeIsObject(result)) {\n        throw new TypeError('bad iterator');\n      }\n      return result;\n    },\n\n    IteratorStep: function (it) {\n      var result = ES.IteratorNext(it);\n      var done = ES.IteratorComplete(result);\n      return done ? false : result;\n    },\n\n    Construct: function (C, args, newTarget, isES6internal) {\n      var target = typeof newTarget === 'undefined' ? C : newTarget;\n\n      if (!isES6internal && Reflect.construct) {\n        // Try to use Reflect.construct if available\n        return Reflect.construct(C, args, target);\n      }\n      // OK, we have to fake it.  This will only work if the\n      // C.[[ConstructorKind]] == \"base\" -- but that's the only\n      // kind we can make in ES5 code anyway.\n\n      // OrdinaryCreateFromConstructor(target, \"%ObjectPrototype%\")\n      var proto = target.prototype;\n      if (!ES.TypeIsObject(proto)) {\n        proto = Object.prototype;\n      }\n      var obj = create(proto);\n      // Call the constructor.\n      var result = ES.Call(C, obj, args);\n      return ES.TypeIsObject(result) ? result : obj;\n    },\n\n    SpeciesConstructor: function (O, defaultConstructor) {\n      var C = O.constructor;\n      if (C === void 0) {\n        return defaultConstructor;\n      }\n      if (!ES.TypeIsObject(C)) {\n        throw new TypeError('Bad constructor');\n      }\n      var S = C[symbolSpecies];\n      if (isNullOrUndefined(S)) {\n        return defaultConstructor;\n      }\n      if (!ES.IsConstructor(S)) {\n        throw new TypeError('Bad @@species');\n      }\n      return S;\n    },\n\n    CreateHTML: function (string, tag, attribute, value) {\n      var S = ES.ToString(string);\n      var p1 = '<' + tag;\n      if (attribute !== '') {\n        var V = ES.ToString(value);\n        var escapedV = V.replace(/\"/g, '&quot;');\n        p1 += ' ' + attribute + '=\"' + escapedV + '\"';\n      }\n      var p2 = p1 + '>';\n      var p3 = p2 + S;\n      return p3 + '</' + tag + '>';\n    },\n\n    IsRegExp: function IsRegExp(argument) {\n      if (!ES.TypeIsObject(argument)) {\n        return false;\n      }\n      var isRegExp = argument[Symbol.match];\n      if (typeof isRegExp !== 'undefined') {\n        return !!isRegExp;\n      }\n      return Type.regex(argument);\n    },\n\n    ToString: function ToString(string) {\n      if (hasSymbols && _toString(string) === '[object Symbol]') {\n        throw new TypeError('Cannot convert a Symbol value to a number');\n      }\n      return $String(string);\n    }\n  };\n\n  // Well-known Symbol shims\n  if (supportsDescriptors && hasSymbols) {\n    var defineWellKnownSymbol = function defineWellKnownSymbol(name) {\n      if (Type.symbol(Symbol[name])) {\n        return Symbol[name];\n      }\n      // eslint-disable-next-line no-restricted-properties\n      var sym = Symbol['for']('Symbol.' + name);\n      Object.defineProperty(Symbol, name, {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: sym\n      });\n      return sym;\n    };\n    if (!Type.symbol(Symbol.search)) {\n      var symbolSearch = defineWellKnownSymbol('search');\n      var originalSearch = String.prototype.search;\n      defineProperty(RegExp.prototype, symbolSearch, function search(string) {\n        return ES.Call(originalSearch, string, [this]);\n      });\n      var searchShim = function search(regexp) {\n        var O = ES.RequireObjectCoercible(this);\n        if (!isNullOrUndefined(regexp)) {\n          var searcher = ES.GetMethod(regexp, symbolSearch);\n          if (typeof searcher !== 'undefined') {\n            return ES.Call(searcher, regexp, [O]);\n          }\n        }\n        return ES.Call(originalSearch, O, [ES.ToString(regexp)]);\n      };\n      overrideNative(String.prototype, 'search', searchShim);\n    }\n    if (!Type.symbol(Symbol.replace)) {\n      var symbolReplace = defineWellKnownSymbol('replace');\n      var originalReplace = String.prototype.replace;\n      defineProperty(RegExp.prototype, symbolReplace, function replace(string, replaceValue) {\n        return ES.Call(originalReplace, string, [this, replaceValue]);\n      });\n      var replaceShim = function replace(searchValue, replaceValue) {\n        var O = ES.RequireObjectCoercible(this);\n        if (!isNullOrUndefined(searchValue)) {\n          var replacer = ES.GetMethod(searchValue, symbolReplace);\n          if (typeof replacer !== 'undefined') {\n            return ES.Call(replacer, searchValue, [O, replaceValue]);\n          }\n        }\n        return ES.Call(originalReplace, O, [ES.ToString(searchValue), replaceValue]);\n      };\n      overrideNative(String.prototype, 'replace', replaceShim);\n    }\n    if (!Type.symbol(Symbol.split)) {\n      var symbolSplit = defineWellKnownSymbol('split');\n      var originalSplit = String.prototype.split;\n      defineProperty(RegExp.prototype, symbolSplit, function split(string, limit) {\n        return ES.Call(originalSplit, string, [this, limit]);\n      });\n      var splitShim = function split(separator, limit) {\n        var O = ES.RequireObjectCoercible(this);\n        if (!isNullOrUndefined(separator)) {\n          var splitter = ES.GetMethod(separator, symbolSplit);\n          if (typeof splitter !== 'undefined') {\n            return ES.Call(splitter, separator, [O, limit]);\n          }\n        }\n        return ES.Call(originalSplit, O, [ES.ToString(separator), limit]);\n      };\n      overrideNative(String.prototype, 'split', splitShim);\n    }\n    var symbolMatchExists = Type.symbol(Symbol.match);\n    var stringMatchIgnoresSymbolMatch = symbolMatchExists && (function () {\n      // Firefox 41, through Nightly 45 has Symbol.match, but String#match ignores it.\n      // Firefox 40 and below have Symbol.match but String#match works fine.\n      var o = {};\n      o[Symbol.match] = function () { return 42; };\n      return 'a'.match(o) !== 42;\n    }());\n    if (!symbolMatchExists || stringMatchIgnoresSymbolMatch) {\n      var symbolMatch = defineWellKnownSymbol('match');\n\n      var originalMatch = String.prototype.match;\n      defineProperty(RegExp.prototype, symbolMatch, function match(string) {\n        return ES.Call(originalMatch, string, [this]);\n      });\n\n      var matchShim = function match(regexp) {\n        var O = ES.RequireObjectCoercible(this);\n        if (!isNullOrUndefined(regexp)) {\n          var matcher = ES.GetMethod(regexp, symbolMatch);\n          if (typeof matcher !== 'undefined') {\n            return ES.Call(matcher, regexp, [O]);\n          }\n        }\n        return ES.Call(originalMatch, O, [ES.ToString(regexp)]);\n      };\n      overrideNative(String.prototype, 'match', matchShim);\n    }\n  }\n\n  var wrapConstructor = function wrapConstructor(original, replacement, keysToSkip) {\n    Value.preserveToString(replacement, original);\n    if (Object.setPrototypeOf) {\n      // sets up proper prototype chain where possible\n      Object.setPrototypeOf(original, replacement);\n    }\n    if (supportsDescriptors) {\n      _forEach(Object.getOwnPropertyNames(original), function (key) {\n        if (key in noop || keysToSkip[key]) { return; }\n        Value.proxy(original, key, replacement);\n      });\n    } else {\n      _forEach(Object.keys(original), function (key) {\n        if (key in noop || keysToSkip[key]) { return; }\n        replacement[key] = original[key];\n      });\n    }\n    replacement.prototype = original.prototype;\n    Value.redefine(original.prototype, 'constructor', replacement);\n  };\n\n  var defaultSpeciesGetter = function () { return this; };\n  var addDefaultSpecies = function (C) {\n    if (supportsDescriptors && !_hasOwnProperty(C, symbolSpecies)) {\n      Value.getter(C, symbolSpecies, defaultSpeciesGetter);\n    }\n  };\n\n  var addIterator = function (prototype, impl) {\n    var implementation = impl || function iterator() { return this; };\n    defineProperty(prototype, $iterator$, implementation);\n    if (!prototype[$iterator$] && Type.symbol($iterator$)) {\n      // implementations are buggy when $iterator$ is a Symbol\n      prototype[$iterator$] = implementation;\n    }\n  };\n\n  var createDataProperty = function createDataProperty(object, name, value) {\n    if (supportsDescriptors) {\n      Object.defineProperty(object, name, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: value\n      });\n    } else {\n      object[name] = value;\n    }\n  };\n  var createDataPropertyOrThrow = function createDataPropertyOrThrow(object, name, value) {\n    createDataProperty(object, name, value);\n    if (!ES.SameValue(object[name], value)) {\n      throw new TypeError('property is nonconfigurable');\n    }\n  };\n\n  var emulateES6construct = function (o, defaultNewTarget, defaultProto, slots) {\n    // This is an es5 approximation to es6 construct semantics.  in es6,\n    // 'new Foo' invokes Foo.[[Construct]] which (for almost all objects)\n    // just sets the internal variable NewTarget (in es6 syntax `new.target`)\n    // to Foo and then returns Foo().\n\n    // Many ES6 object then have constructors of the form:\n    // 1. If NewTarget is undefined, throw a TypeError exception\n    // 2. Let xxx by OrdinaryCreateFromConstructor(NewTarget, yyy, zzz)\n\n    // So we're going to emulate those first two steps.\n    if (!ES.TypeIsObject(o)) {\n      throw new TypeError('Constructor requires `new`: ' + defaultNewTarget.name);\n    }\n    var proto = defaultNewTarget.prototype;\n    if (!ES.TypeIsObject(proto)) {\n      proto = defaultProto;\n    }\n    var obj = create(proto);\n    for (var name in slots) {\n      if (_hasOwnProperty(slots, name)) {\n        var value = slots[name];\n        defineProperty(obj, name, value, true);\n      }\n    }\n    return obj;\n  };\n\n  // Firefox 31 reports this function's length as 0\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1062484\n  if (String.fromCodePoint && String.fromCodePoint.length !== 1) {\n    var originalFromCodePoint = String.fromCodePoint;\n    overrideNative(String, 'fromCodePoint', function fromCodePoint(codePoints) {\n      return ES.Call(originalFromCodePoint, this, arguments);\n    });\n  }\n\n  var StringShims = {\n    fromCodePoint: function fromCodePoint(codePoints) {\n      var result = [];\n      var next;\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        next = Number(arguments[i]);\n        if (!ES.SameValue(next, ES.ToInteger(next)) || next < 0 || next > 0x10FFFF) {\n          throw new RangeError('Invalid code point ' + next);\n        }\n\n        if (next < 0x10000) {\n          _push(result, String.fromCharCode(next));\n        } else {\n          next -= 0x10000;\n          _push(result, String.fromCharCode((next >> 10) + 0xD800));\n          _push(result, String.fromCharCode((next % 0x400) + 0xDC00));\n        }\n      }\n      return _join(result, '');\n    },\n\n    raw: function raw(template) {\n      var numberOfSubstitutions = arguments.length - 1;\n      var cooked = ES.ToObject(template, 'bad template');\n      var raw = ES.ToObject(cooked.raw, 'bad raw value');\n      var len = raw.length;\n      var literalSegments = ES.ToLength(len);\n      if (literalSegments <= 0) {\n        return '';\n      }\n\n      var stringElements = [];\n      var nextIndex = 0;\n      var nextKey, next, nextSeg, nextSub;\n      while (nextIndex < literalSegments) {\n        nextKey = ES.ToString(nextIndex);\n        nextSeg = ES.ToString(raw[nextKey]);\n        _push(stringElements, nextSeg);\n        if (nextIndex + 1 >= literalSegments) {\n          break;\n        }\n        next = nextIndex + 1 < arguments.length ? arguments[nextIndex + 1] : '';\n        nextSub = ES.ToString(next);\n        _push(stringElements, nextSub);\n        nextIndex += 1;\n      }\n      return _join(stringElements, '');\n    }\n  };\n  if (String.raw && String.raw({ raw: { 0: 'x', 1: 'y', length: 2 } }) !== 'xy') {\n    // IE 11 TP has a broken String.raw implementation\n    overrideNative(String, 'raw', StringShims.raw);\n  }\n  defineProperties(String, StringShims);\n\n  // Fast repeat, uses the `Exponentiation by squaring` algorithm.\n  // Perf: http://jsperf.com/string-repeat2/2\n  var stringRepeat = function repeat(s, times) {\n    if (times < 1) { return ''; }\n    if (times % 2) { return repeat(s, times - 1) + s; }\n    var half = repeat(s, times / 2);\n    return half + half;\n  };\n  var stringMaxLength = Infinity;\n\n  var StringPrototypeShims = {\n    repeat: function repeat(times) {\n      var thisStr = ES.ToString(ES.RequireObjectCoercible(this));\n      var numTimes = ES.ToInteger(times);\n      if (numTimes < 0 || numTimes >= stringMaxLength) {\n        throw new RangeError('repeat count must be less than infinity and not overflow maximum string size');\n      }\n      return stringRepeat(thisStr, numTimes);\n    },\n\n    startsWith: function startsWith(searchString) {\n      var S = ES.ToString(ES.RequireObjectCoercible(this));\n      if (ES.IsRegExp(searchString)) {\n        throw new TypeError('Cannot call method \"startsWith\" with a regex');\n      }\n      var searchStr = ES.ToString(searchString);\n      var position;\n      if (arguments.length > 1) {\n        position = arguments[1];\n      }\n      var start = _max(ES.ToInteger(position), 0);\n      return _strSlice(S, start, start + searchStr.length) === searchStr;\n    },\n\n    endsWith: function endsWith(searchString) {\n      var S = ES.ToString(ES.RequireObjectCoercible(this));\n      if (ES.IsRegExp(searchString)) {\n        throw new TypeError('Cannot call method \"endsWith\" with a regex');\n      }\n      var searchStr = ES.ToString(searchString);\n      var len = S.length;\n      var endPosition;\n      if (arguments.length > 1) {\n        endPosition = arguments[1];\n      }\n      var pos = typeof endPosition === 'undefined' ? len : ES.ToInteger(endPosition);\n      var end = _min(_max(pos, 0), len);\n      return _strSlice(S, end - searchStr.length, end) === searchStr;\n    },\n\n    includes: function includes(searchString) {\n      if (ES.IsRegExp(searchString)) {\n        throw new TypeError('\"includes\" does not accept a RegExp');\n      }\n      var searchStr = ES.ToString(searchString);\n      var position;\n      if (arguments.length > 1) {\n        position = arguments[1];\n      }\n      // Somehow this trick makes method 100% compat with the spec.\n      return _indexOf(this, searchStr, position) !== -1;\n    },\n\n    codePointAt: function codePointAt(pos) {\n      var thisStr = ES.ToString(ES.RequireObjectCoercible(this));\n      var position = ES.ToInteger(pos);\n      var length = thisStr.length;\n      if (position >= 0 && position < length) {\n        var first = thisStr.charCodeAt(position);\n        var isEnd = position + 1 === length;\n        if (first < 0xD800 || first > 0xDBFF || isEnd) { return first; }\n        var second = thisStr.charCodeAt(position + 1);\n        if (second < 0xDC00 || second > 0xDFFF) { return first; }\n        return ((first - 0xD800) * 1024) + (second - 0xDC00) + 0x10000;\n      }\n    }\n  };\n  if (String.prototype.includes && 'a'.includes('a', Infinity) !== false) {\n    overrideNative(String.prototype, 'includes', StringPrototypeShims.includes);\n  }\n\n  if (String.prototype.startsWith && String.prototype.endsWith) {\n    var startsWithRejectsRegex = throwsError(function () {\n      /* throws if spec-compliant */\n      return '/a/'.startsWith(/a/);\n    });\n    var startsWithHandlesInfinity = valueOrFalseIfThrows(function () {\n      return 'abc'.startsWith('a', Infinity) === false;\n    });\n    if (!startsWithRejectsRegex || !startsWithHandlesInfinity) {\n      // Firefox (< 37?) and IE 11 TP have a noncompliant startsWith implementation\n      overrideNative(String.prototype, 'startsWith', StringPrototypeShims.startsWith);\n      overrideNative(String.prototype, 'endsWith', StringPrototypeShims.endsWith);\n    }\n  }\n  if (hasSymbols) {\n    var startsWithSupportsSymbolMatch = valueOrFalseIfThrows(function () {\n      var re = /a/;\n      re[Symbol.match] = false;\n      return '/a/'.startsWith(re);\n    });\n    if (!startsWithSupportsSymbolMatch) {\n      overrideNative(String.prototype, 'startsWith', StringPrototypeShims.startsWith);\n    }\n    var endsWithSupportsSymbolMatch = valueOrFalseIfThrows(function () {\n      var re = /a/;\n      re[Symbol.match] = false;\n      return '/a/'.endsWith(re);\n    });\n    if (!endsWithSupportsSymbolMatch) {\n      overrideNative(String.prototype, 'endsWith', StringPrototypeShims.endsWith);\n    }\n    var includesSupportsSymbolMatch = valueOrFalseIfThrows(function () {\n      var re = /a/;\n      re[Symbol.match] = false;\n      return '/a/'.includes(re);\n    });\n    if (!includesSupportsSymbolMatch) {\n      overrideNative(String.prototype, 'includes', StringPrototypeShims.includes);\n    }\n  }\n\n  defineProperties(String.prototype, StringPrototypeShims);\n\n  // whitespace from: http://es5.github.io/#x15.5.4.20\n  // implementation from https://github.com/es-shims/es5-shim/blob/v3.4.0/es5-shim.js#L1304-L1324\n  var ws = [\n    '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003',\n    '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028',\n    '\\u2029\\uFEFF'\n  ].join('');\n  var trimRegexp = new RegExp('(^[' + ws + ']+)|([' + ws + ']+$)', 'g');\n  var trimShim = function trim() {\n    return ES.ToString(ES.RequireObjectCoercible(this)).replace(trimRegexp, '');\n  };\n  var nonWS = ['\\u0085', '\\u200b', '\\ufffe'].join('');\n  var nonWSregex = new RegExp('[' + nonWS + ']', 'g');\n  var isBadHexRegex = /^[-+]0x[0-9a-f]+$/i;\n  var hasStringTrimBug = nonWS.trim().length !== nonWS.length;\n  defineProperty(String.prototype, 'trim', trimShim, hasStringTrimBug);\n\n  // Given an argument x, it will return an IteratorResult object,\n  // with value set to x and done to false.\n  // Given no arguments, it will return an iterator completion object.\n  var iteratorResult = function (x) {\n    return { value: x, done: arguments.length === 0 };\n  };\n\n  // see http://www.ecma-international.org/ecma-262/6.0/#sec-string.prototype-@@iterator\n  var StringIterator = function (s) {\n    ES.RequireObjectCoercible(s);\n    defineProperty(this, '_s', ES.ToString(s));\n    defineProperty(this, '_i', 0);\n  };\n  StringIterator.prototype.next = function () {\n    var s = this._s;\n    var i = this._i;\n    if (typeof s === 'undefined' || i >= s.length) {\n      this._s = void 0;\n      return iteratorResult();\n    }\n    var first = s.charCodeAt(i);\n    var second, len;\n    if (first < 0xD800 || first > 0xDBFF || (i + 1) === s.length) {\n      len = 1;\n    } else {\n      second = s.charCodeAt(i + 1);\n      len = (second < 0xDC00 || second > 0xDFFF) ? 1 : 2;\n    }\n    this._i = i + len;\n    return iteratorResult(s.substr(i, len));\n  };\n  addIterator(StringIterator.prototype);\n  addIterator(String.prototype, function () {\n    return new StringIterator(this);\n  });\n\n  var ArrayShims = {\n    from: function from(items) {\n      var C = this;\n      var mapFn;\n      if (arguments.length > 1) {\n        mapFn = arguments[1];\n      }\n      var mapping, T;\n      if (typeof mapFn === 'undefined') {\n        mapping = false;\n      } else {\n        if (!ES.IsCallable(mapFn)) {\n          throw new TypeError('Array.from: when provided, the second argument must be a function');\n        }\n        if (arguments.length > 2) {\n          T = arguments[2];\n        }\n        mapping = true;\n      }\n\n      // Note that that Arrays will use ArrayIterator:\n      // https://bugs.ecmascript.org/show_bug.cgi?id=2416\n      var usingIterator = typeof (isArguments(items) || ES.GetMethod(items, $iterator$)) !== 'undefined';\n\n      var length, result, i;\n      if (usingIterator) {\n        result = ES.IsConstructor(C) ? Object(new C()) : [];\n        var iterator = ES.GetIterator(items);\n        var next, nextValue;\n\n        i = 0;\n        while (true) {\n          next = ES.IteratorStep(iterator);\n          if (next === false) {\n            break;\n          }\n          nextValue = next.value;\n          try {\n            if (mapping) {\n              nextValue = typeof T === 'undefined' ? mapFn(nextValue, i) : _call(mapFn, T, nextValue, i);\n            }\n            result[i] = nextValue;\n          } catch (e) {\n            ES.IteratorClose(iterator, true);\n            throw e;\n          }\n          i += 1;\n        }\n        length = i;\n      } else {\n        var arrayLike = ES.ToObject(items);\n        length = ES.ToLength(arrayLike.length);\n        result = ES.IsConstructor(C) ? Object(new C(length)) : new Array(length);\n        var value;\n        for (i = 0; i < length; ++i) {\n          value = arrayLike[i];\n          if (mapping) {\n            value = typeof T === 'undefined' ? mapFn(value, i) : _call(mapFn, T, value, i);\n          }\n          createDataPropertyOrThrow(result, i, value);\n        }\n      }\n\n      result.length = length;\n      return result;\n    },\n\n    of: function of() {\n      var len = arguments.length;\n      var C = this;\n      var A = isArray(C) || !ES.IsCallable(C) ? new Array(len) : ES.Construct(C, [len]);\n      for (var k = 0; k < len; ++k) {\n        createDataPropertyOrThrow(A, k, arguments[k]);\n      }\n      A.length = len;\n      return A;\n    }\n  };\n  defineProperties(Array, ArrayShims);\n  addDefaultSpecies(Array);\n\n  // Our ArrayIterator is private; see\n  // https://github.com/paulmillr/es6-shim/issues/252\n  ArrayIterator = function (array, kind) {\n    defineProperty(this, 'i', 0);\n    defineProperty(this, 'array', array);\n    defineProperty(this, 'kind', kind);\n  };\n\n  defineProperties(ArrayIterator.prototype, {\n    next: function () {\n      var i = this.i;\n      var array = this.array;\n      if (!(this instanceof ArrayIterator)) {\n        throw new TypeError('Not an ArrayIterator');\n      }\n      if (typeof array !== 'undefined') {\n        var len = ES.ToLength(array.length);\n        if (i < len) {\n        //for (; i < len; i++) {\n          var kind = this.kind;\n          var retval;\n          if (kind === 'key') {\n            retval = i;\n          } else if (kind === 'value') {\n            retval = array[i];\n          } else if (kind === 'entry') {\n            retval = [i, array[i]];\n          }\n          this.i = i + 1;\n          return iteratorResult(retval);\n        }\n      }\n      this.array = void 0;\n      return iteratorResult();\n    }\n  });\n  addIterator(ArrayIterator.prototype);\n\n  /*\n  var orderKeys = function orderKeys(a, b) {\n    var aNumeric = String(ES.ToInteger(a)) === a;\n    var bNumeric = String(ES.ToInteger(b)) === b;\n    if (aNumeric && bNumeric) {\n      return b - a;\n    } else if (aNumeric && !bNumeric) {\n      return -1;\n    } else if (!aNumeric && bNumeric) {\n      return 1;\n    } else {\n      return a.localeCompare(b);\n    }\n  };\n\n  var getAllKeys = function getAllKeys(object) {\n    var ownKeys = [];\n    var keys = [];\n\n    for (var key in object) {\n      _push(_hasOwnProperty(object, key) ? ownKeys : keys, key);\n    }\n    _sort(ownKeys, orderKeys);\n    _sort(keys, orderKeys);\n\n    return _concat(ownKeys, keys);\n  };\n  */\n\n  // note: this is positioned here because it depends on ArrayIterator\n  var arrayOfSupportsSubclassing = Array.of === ArrayShims.of || (function () {\n    // Detects a bug in Webkit nightly r181886\n    var Foo = function Foo(len) { this.length = len; };\n    Foo.prototype = [];\n    var fooArr = Array.of.apply(Foo, [1, 2]);\n    return fooArr instanceof Foo && fooArr.length === 2;\n  }());\n  if (!arrayOfSupportsSubclassing) {\n    overrideNative(Array, 'of', ArrayShims.of);\n  }\n\n  var ArrayPrototypeShims = {\n    copyWithin: function copyWithin(target, start) {\n      var o = ES.ToObject(this);\n      var len = ES.ToLength(o.length);\n      var relativeTarget = ES.ToInteger(target);\n      var relativeStart = ES.ToInteger(start);\n      var to = relativeTarget < 0 ? _max(len + relativeTarget, 0) : _min(relativeTarget, len);\n      var from = relativeStart < 0 ? _max(len + relativeStart, 0) : _min(relativeStart, len);\n      var end;\n      if (arguments.length > 2) {\n        end = arguments[2];\n      }\n      var relativeEnd = typeof end === 'undefined' ? len : ES.ToInteger(end);\n      var finalItem = relativeEnd < 0 ? _max(len + relativeEnd, 0) : _min(relativeEnd, len);\n      var count = _min(finalItem - from, len - to);\n      var direction = 1;\n      if (from < to && to < (from + count)) {\n        direction = -1;\n        from += count - 1;\n        to += count - 1;\n      }\n      while (count > 0) {\n        if (from in o) {\n          o[to] = o[from];\n        } else {\n          delete o[to];\n        }\n        from += direction;\n        to += direction;\n        count -= 1;\n      }\n      return o;\n    },\n\n    fill: function fill(value) {\n      var start;\n      if (arguments.length > 1) {\n        start = arguments[1];\n      }\n      var end;\n      if (arguments.length > 2) {\n        end = arguments[2];\n      }\n      var O = ES.ToObject(this);\n      var len = ES.ToLength(O.length);\n      start = ES.ToInteger(typeof start === 'undefined' ? 0 : start);\n      end = ES.ToInteger(typeof end === 'undefined' ? len : end);\n\n      var relativeStart = start < 0 ? _max(len + start, 0) : _min(start, len);\n      var relativeEnd = end < 0 ? len + end : end;\n\n      for (var i = relativeStart; i < len && i < relativeEnd; ++i) {\n        O[i] = value;\n      }\n      return O;\n    },\n\n    find: function find(predicate) {\n      var list = ES.ToObject(this);\n      var length = ES.ToLength(list.length);\n      if (!ES.IsCallable(predicate)) {\n        throw new TypeError('Array#find: predicate must be a function');\n      }\n      var thisArg = arguments.length > 1 ? arguments[1] : null;\n      for (var i = 0, value; i < length; i++) {\n        value = list[i];\n        if (thisArg) {\n          if (_call(predicate, thisArg, value, i, list)) {\n            return value;\n          }\n        } else if (predicate(value, i, list)) {\n          return value;\n        }\n      }\n    },\n\n    findIndex: function findIndex(predicate) {\n      var list = ES.ToObject(this);\n      var length = ES.ToLength(list.length);\n      if (!ES.IsCallable(predicate)) {\n        throw new TypeError('Array#findIndex: predicate must be a function');\n      }\n      var thisArg = arguments.length > 1 ? arguments[1] : null;\n      for (var i = 0; i < length; i++) {\n        if (thisArg) {\n          if (_call(predicate, thisArg, list[i], i, list)) {\n            return i;\n          }\n        } else if (predicate(list[i], i, list)) {\n          return i;\n        }\n      }\n      return -1;\n    },\n\n    keys: function keys() {\n      return new ArrayIterator(this, 'key');\n    },\n\n    values: function values() {\n      return new ArrayIterator(this, 'value');\n    },\n\n    entries: function entries() {\n      return new ArrayIterator(this, 'entry');\n    }\n  };\n  // Safari 7.1 defines Array#keys and Array#entries natively,\n  // but the resulting ArrayIterator objects don't have a \"next\" method.\n  if (Array.prototype.keys && !ES.IsCallable([1].keys().next)) {\n    delete Array.prototype.keys;\n  }\n  if (Array.prototype.entries && !ES.IsCallable([1].entries().next)) {\n    delete Array.prototype.entries;\n  }\n\n  // Chrome 38 defines Array#keys and Array#entries, and Array#@@iterator, but not Array#values\n  if (Array.prototype.keys && Array.prototype.entries && !Array.prototype.values && Array.prototype[$iterator$]) {\n    defineProperties(Array.prototype, {\n      values: Array.prototype[$iterator$]\n    });\n    if (Type.symbol(Symbol.unscopables)) {\n      Array.prototype[Symbol.unscopables].values = true;\n    }\n  }\n  // Chrome 40 defines Array#values with the incorrect name, although Array#{keys,entries} have the correct name\n  if (functionsHaveNames && Array.prototype.values && Array.prototype.values.name !== 'values') {\n    var originalArrayPrototypeValues = Array.prototype.values;\n    overrideNative(Array.prototype, 'values', function values() { return ES.Call(originalArrayPrototypeValues, this, arguments); });\n    defineProperty(Array.prototype, $iterator$, Array.prototype.values, true);\n  }\n  defineProperties(Array.prototype, ArrayPrototypeShims);\n\n  if (1 / [true].indexOf(true, -0) < 0) {\n    // indexOf when given a position arg of -0 should return +0.\n    // https://github.com/tc39/ecma262/pull/316\n    defineProperty(Array.prototype, 'indexOf', function indexOf(searchElement) {\n      var value = _arrayIndexOfApply(this, arguments);\n      if (value === 0 && (1 / value) < 0) {\n        return 0;\n      }\n      return value;\n    }, true);\n  }\n\n  addIterator(Array.prototype, function () { return this.values(); });\n  // Chrome defines keys/values/entries on Array, but doesn't give us\n  // any way to identify its iterator.  So add our own shimmed field.\n  if (Object.getPrototypeOf) {\n    var ChromeArrayIterator = Object.getPrototypeOf([].values());\n    if (ChromeArrayIterator) { // in WSH, this is `undefined`\n      addIterator(ChromeArrayIterator);\n    }\n  }\n\n  // note: this is positioned here because it relies on Array#entries\n  var arrayFromSwallowsNegativeLengths = (function () {\n    // Detects a Firefox bug in v32\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1063993\n    return valueOrFalseIfThrows(function () {\n      return Array.from({ length: -1 }).length === 0;\n    });\n  }());\n  var arrayFromHandlesIterables = (function () {\n    // Detects a bug in Webkit nightly r181886\n    var arr = Array.from([0].entries());\n    return arr.length === 1 && isArray(arr[0]) && arr[0][0] === 0 && arr[0][1] === 0;\n  }());\n  if (!arrayFromSwallowsNegativeLengths || !arrayFromHandlesIterables) {\n    overrideNative(Array, 'from', ArrayShims.from);\n  }\n  var arrayFromHandlesUndefinedMapFunction = (function () {\n    // Microsoft Edge v0.11 throws if the mapFn argument is *provided* but undefined,\n    // but the spec doesn't care if it's provided or not - undefined doesn't throw.\n    return valueOrFalseIfThrows(function () {\n      return Array.from([0], void 0);\n    });\n  }());\n  if (!arrayFromHandlesUndefinedMapFunction) {\n    var origArrayFrom = Array.from;\n    overrideNative(Array, 'from', function from(items) {\n      if (arguments.length > 1 && typeof arguments[1] !== 'undefined') {\n        return ES.Call(origArrayFrom, this, arguments);\n      }\n      return _call(origArrayFrom, this, items);\n\n    });\n  }\n\n  var int32sAsOne = -(Math.pow(2, 32) - 1);\n  var toLengthsCorrectly = function (method, reversed) {\n    var obj = { length: int32sAsOne };\n    obj[reversed ? (obj.length >>> 0) - 1 : 0] = true;\n    return valueOrFalseIfThrows(function () {\n      _call(method, obj, function () {\n        // note: in nonconforming browsers, this will be called\n        // -1 >>> 0 times, which is 4294967295, so the throw matters.\n        throw new RangeError('should not reach here');\n      }, []);\n      return true;\n    });\n  };\n  if (!toLengthsCorrectly(Array.prototype.forEach)) {\n    var originalForEach = Array.prototype.forEach;\n    overrideNative(Array.prototype, 'forEach', function forEach(callbackFn) {\n      return ES.Call(originalForEach, this.length >= 0 ? this : [], arguments);\n    });\n  }\n  if (!toLengthsCorrectly(Array.prototype.map)) {\n    var originalMap = Array.prototype.map;\n    overrideNative(Array.prototype, 'map', function map(callbackFn) {\n      return ES.Call(originalMap, this.length >= 0 ? this : [], arguments);\n    });\n  }\n  if (!toLengthsCorrectly(Array.prototype.filter)) {\n    var originalFilter = Array.prototype.filter;\n    overrideNative(Array.prototype, 'filter', function filter(callbackFn) {\n      return ES.Call(originalFilter, this.length >= 0 ? this : [], arguments);\n    });\n  }\n  if (!toLengthsCorrectly(Array.prototype.some)) {\n    var originalSome = Array.prototype.some;\n    overrideNative(Array.prototype, 'some', function some(callbackFn) {\n      return ES.Call(originalSome, this.length >= 0 ? this : [], arguments);\n    });\n  }\n  if (!toLengthsCorrectly(Array.prototype.every)) {\n    var originalEvery = Array.prototype.every;\n    overrideNative(Array.prototype, 'every', function every(callbackFn) {\n      return ES.Call(originalEvery, this.length >= 0 ? this : [], arguments);\n    });\n  }\n  if (!toLengthsCorrectly(Array.prototype.reduce)) {\n    var originalReduce = Array.prototype.reduce;\n    overrideNative(Array.prototype, 'reduce', function reduce(callbackFn) {\n      return ES.Call(originalReduce, this.length >= 0 ? this : [], arguments);\n    });\n  }\n  if (!toLengthsCorrectly(Array.prototype.reduceRight, true)) {\n    var originalReduceRight = Array.prototype.reduceRight;\n    overrideNative(Array.prototype, 'reduceRight', function reduceRight(callbackFn) {\n      return ES.Call(originalReduceRight, this.length >= 0 ? this : [], arguments);\n    });\n  }\n\n  var lacksOctalSupport = Number('0o10') !== 8;\n  var lacksBinarySupport = Number('0b10') !== 2;\n  var trimsNonWhitespace = _some(nonWS, function (c) {\n    return Number(c + 0 + c) === 0;\n  });\n  if (lacksOctalSupport || lacksBinarySupport || trimsNonWhitespace) {\n    var OrigNumber = Number;\n    var binaryRegex = /^0b[01]+$/i;\n    var octalRegex = /^0o[0-7]+$/i;\n    // Note that in IE 8, RegExp.prototype.test doesn't seem to exist: ie, \"test\" is an own property of regexes. wtf.\n    var isBinary = binaryRegex.test.bind(binaryRegex);\n    var isOctal = octalRegex.test.bind(octalRegex);\n    var toPrimitive = function (O, hint) { // need to replace this with `es-to-primitive/es6`\n      var result;\n      if (typeof O.valueOf === 'function') {\n        result = O.valueOf();\n        if (Type.primitive(result)) {\n          return result;\n        }\n      }\n      if (typeof O.toString === 'function') {\n        result = O.toString();\n        if (Type.primitive(result)) {\n          return result;\n        }\n      }\n      throw new TypeError('No default value');\n    };\n    var hasNonWS = nonWSregex.test.bind(nonWSregex);\n    var isBadHex = isBadHexRegex.test.bind(isBadHexRegex);\n    var NumberShim = (function () {\n      // this is wrapped in an IIFE because of IE 6-8's wacky scoping issues with named function expressions.\n      var NumberShim = function Number(value) {\n        var primValue;\n        if (arguments.length > 0) {\n          primValue = Type.primitive(value) ? value : toPrimitive(value, 'number');\n        } else {\n          primValue = 0;\n        }\n        if (typeof primValue === 'string') {\n          primValue = ES.Call(trimShim, primValue);\n          if (isBinary(primValue)) {\n            primValue = parseInt(_strSlice(primValue, 2), 2);\n          } else if (isOctal(primValue)) {\n            primValue = parseInt(_strSlice(primValue, 2), 8);\n          } else if (hasNonWS(primValue) || isBadHex(primValue)) {\n            primValue = NaN;\n          }\n        }\n        var receiver = this;\n        var valueOfSucceeds = valueOrFalseIfThrows(function () {\n          OrigNumber.prototype.valueOf.call(receiver);\n          return true;\n        });\n        if (receiver instanceof NumberShim && !valueOfSucceeds) {\n          return new OrigNumber(primValue);\n        }\n        return OrigNumber(primValue);\n      };\n      return NumberShim;\n    }());\n    wrapConstructor(OrigNumber, NumberShim, {});\n    // this is necessary for ES3 browsers, where these properties are non-enumerable.\n    defineProperties(NumberShim, {\n      NaN: OrigNumber.NaN,\n      MAX_VALUE: OrigNumber.MAX_VALUE,\n      MIN_VALUE: OrigNumber.MIN_VALUE,\n      NEGATIVE_INFINITY: OrigNumber.NEGATIVE_INFINITY,\n      POSITIVE_INFINITY: OrigNumber.POSITIVE_INFINITY\n    });\n    Number = NumberShim; // eslint-disable-line no-global-assign\n    Value.redefine(globals, 'Number', NumberShim);\n  }\n\n  var maxSafeInteger = Math.pow(2, 53) - 1;\n  defineProperties(Number, {\n    MAX_SAFE_INTEGER: maxSafeInteger,\n    MIN_SAFE_INTEGER: -maxSafeInteger,\n    EPSILON: 2.220446049250313e-16,\n\n    parseInt: globals.parseInt,\n    parseFloat: globals.parseFloat,\n\n    isFinite: numberIsFinite,\n\n    isInteger: function isInteger(value) {\n      return numberIsFinite(value) && ES.ToInteger(value) === value;\n    },\n\n    isSafeInteger: function isSafeInteger(value) {\n      return Number.isInteger(value) && _abs(value) <= Number.MAX_SAFE_INTEGER;\n    },\n\n    isNaN: numberIsNaN\n  });\n  // Firefox 37 has a conforming Number.parseInt, but it's not === to the global parseInt (fixed in v40)\n  defineProperty(Number, 'parseInt', globals.parseInt, Number.parseInt !== globals.parseInt);\n\n  // Work around bugs in Array#find and Array#findIndex -- early\n  // implementations skipped holes in sparse arrays. (Note that the\n  // implementations of find/findIndex indirectly use shimmed\n  // methods of Number, so this test has to happen down here.)\n  /* eslint-disable no-sparse-arrays */\n  if ([, 1].find(function () { return true; }) === 1) {\n    overrideNative(Array.prototype, 'find', ArrayPrototypeShims.find);\n  }\n  if ([, 1].findIndex(function () { return true; }) !== 0) {\n    overrideNative(Array.prototype, 'findIndex', ArrayPrototypeShims.findIndex);\n  }\n  /* eslint-enable no-sparse-arrays */\n\n  var isEnumerableOn = Function.bind.call(Function.bind, Object.prototype.propertyIsEnumerable);\n  var ensureEnumerable = function ensureEnumerable(obj, prop) {\n    if (supportsDescriptors && isEnumerableOn(obj, prop)) {\n      Object.defineProperty(obj, prop, { enumerable: false });\n    }\n  };\n  var sliceArgs = function sliceArgs() {\n    // per https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n    // and https://gist.github.com/WebReflection/4327762cb87a8c634a29\n    var initial = Number(this);\n    var len = arguments.length;\n    var desiredArgCount = len - initial;\n    var args = new Array(desiredArgCount < 0 ? 0 : desiredArgCount);\n    for (var i = initial; i < len; ++i) {\n      args[i - initial] = arguments[i];\n    }\n    return args;\n  };\n  var assignTo = function assignTo(source) {\n    return function assignToSource(target, key) {\n      target[key] = source[key];\n      return target;\n    };\n  };\n  var assignReducer = function (target, source) {\n    var sourceKeys = keys(Object(source));\n    var symbols;\n    if (ES.IsCallable(Object.getOwnPropertySymbols)) {\n      symbols = _filter(Object.getOwnPropertySymbols(Object(source)), isEnumerableOn(source));\n    }\n    return _reduce(_concat(sourceKeys, symbols || []), assignTo(source), target);\n  };\n\n  var ObjectShims = {\n    // 19.1.3.1\n    assign: function (target, source) {\n      var to = ES.ToObject(target, 'Cannot convert undefined or null to object');\n      return _reduce(ES.Call(sliceArgs, 1, arguments), assignReducer, to);\n    },\n\n    // Added in WebKit in https://bugs.webkit.org/show_bug.cgi?id=143865\n    is: function is(a, b) {\n      return ES.SameValue(a, b);\n    }\n  };\n  var assignHasPendingExceptions = Object.assign && Object.preventExtensions && (function () {\n    // Firefox 37 still has \"pending exception\" logic in its Object.assign implementation,\n    // which is 72% slower than our shim, and Firefox 40's native implementation.\n    var thrower = Object.preventExtensions({ 1: 2 });\n    try {\n      Object.assign(thrower, 'xy');\n    } catch (e) {\n      return thrower[1] === 'y';\n    }\n  }());\n  if (assignHasPendingExceptions) {\n    overrideNative(Object, 'assign', ObjectShims.assign);\n  }\n  defineProperties(Object, ObjectShims);\n\n  if (supportsDescriptors) {\n    var ES5ObjectShims = {\n      // 19.1.3.9\n      // shim from https://gist.github.com/WebReflection/5593554\n      setPrototypeOf: (function (Object, magic) {\n        var set;\n\n        var checkArgs = function (O, proto) {\n          if (!ES.TypeIsObject(O)) {\n            throw new TypeError('cannot set prototype on a non-object');\n          }\n          if (!(proto === null || ES.TypeIsObject(proto))) {\n            throw new TypeError('can only set prototype to an object or null' + proto);\n          }\n        };\n\n        var setPrototypeOf = function (O, proto) {\n          checkArgs(O, proto);\n          _call(set, O, proto);\n          return O;\n        };\n\n        try {\n          // this works already in Firefox and Safari\n          set = Object.getOwnPropertyDescriptor(Object.prototype, magic).set;\n          _call(set, {}, null);\n        } catch (e) {\n          if (Object.prototype !== {}[magic]) {\n            // IE < 11 cannot be shimmed\n            return;\n          }\n          // probably Chrome or some old Mobile stock browser\n          set = function (proto) {\n            this[magic] = proto;\n          };\n          // please note that this will **not** work\n          // in those browsers that do not inherit\n          // __proto__ by mistake from Object.prototype\n          // in these cases we should probably throw an error\n          // or at least be informed about the issue\n          setPrototypeOf.polyfill = setPrototypeOf(\n            setPrototypeOf({}, null),\n            Object.prototype\n          ) instanceof Object;\n          // setPrototypeOf.polyfill === true means it works as meant\n          // setPrototypeOf.polyfill === false means it's not 100% reliable\n          // setPrototypeOf.polyfill === undefined\n          // or\n          // setPrototypeOf.polyfill ==  null means it's not a polyfill\n          // which means it works as expected\n          // we can even delete Object.prototype.__proto__;\n        }\n        return setPrototypeOf;\n      }(Object, '__proto__'))\n    };\n\n    defineProperties(Object, ES5ObjectShims);\n  }\n\n  // Workaround bug in Opera 12 where setPrototypeOf(x, null) doesn't work,\n  // but Object.create(null) does.\n  if (\n    Object.setPrototypeOf\n    && Object.getPrototypeOf\n    && Object.getPrototypeOf(Object.setPrototypeOf({}, null)) !== null\n    && Object.getPrototypeOf(Object.create(null)) === null\n  ) {\n    (function () {\n      var FAKENULL = Object.create(null);\n      var gpo = Object.getPrototypeOf;\n      var spo = Object.setPrototypeOf;\n      Object.getPrototypeOf = function (o) {\n        var result = gpo(o);\n        return result === FAKENULL ? null : result;\n      };\n      Object.setPrototypeOf = function (o, p) {\n        var proto = p === null ? FAKENULL : p;\n        return spo(o, proto);\n      };\n      Object.setPrototypeOf.polyfill = false;\n    }());\n  }\n\n  var objectKeysAcceptsPrimitives = !throwsError(function () { return Object.keys('foo'); });\n  if (!objectKeysAcceptsPrimitives) {\n    var originalObjectKeys = Object.keys;\n    overrideNative(Object, 'keys', function keys(value) {\n      return originalObjectKeys(ES.ToObject(value));\n    });\n    keys = Object.keys;\n  }\n  var objectKeysRejectsRegex = throwsError(function () { return Object.keys(/a/g); });\n  if (objectKeysRejectsRegex) {\n    var regexRejectingObjectKeys = Object.keys;\n    overrideNative(Object, 'keys', function keys(value) {\n      if (Type.regex(value)) {\n        var regexKeys = [];\n        for (var k in value) {\n          if (_hasOwnProperty(value, k)) {\n            _push(regexKeys, k);\n          }\n        }\n        return regexKeys;\n      }\n      return regexRejectingObjectKeys(value);\n    });\n    keys = Object.keys;\n  }\n\n  if (Object.getOwnPropertyNames) {\n    var objectGOPNAcceptsPrimitives = !throwsError(function () { return Object.getOwnPropertyNames('foo'); });\n    if (!objectGOPNAcceptsPrimitives) {\n      var cachedWindowNames = typeof window === 'object' ? Object.getOwnPropertyNames(window) : [];\n      var originalObjectGetOwnPropertyNames = Object.getOwnPropertyNames;\n      overrideNative(Object, 'getOwnPropertyNames', function getOwnPropertyNames(value) {\n        var val = ES.ToObject(value);\n        if (_toString(val) === '[object Window]') {\n          try {\n            return originalObjectGetOwnPropertyNames(val);\n          } catch (e) {\n            // IE bug where layout engine calls userland gOPN for cross-domain `window` objects\n            return _concat([], cachedWindowNames);\n          }\n        }\n        return originalObjectGetOwnPropertyNames(val);\n      });\n    }\n  }\n  if (Object.getOwnPropertyDescriptor) {\n    var objectGOPDAcceptsPrimitives = !throwsError(function () { return Object.getOwnPropertyDescriptor('foo', 'bar'); });\n    if (!objectGOPDAcceptsPrimitives) {\n      var originalObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n      overrideNative(Object, 'getOwnPropertyDescriptor', function getOwnPropertyDescriptor(value, property) {\n        return originalObjectGetOwnPropertyDescriptor(ES.ToObject(value), property);\n      });\n    }\n  }\n  if (Object.seal) {\n    var objectSealAcceptsPrimitives = !throwsError(function () { return Object.seal('foo'); });\n    if (!objectSealAcceptsPrimitives) {\n      var originalObjectSeal = Object.seal;\n      overrideNative(Object, 'seal', function seal(value) {\n        if (!ES.TypeIsObject(value)) { return value; }\n        return originalObjectSeal(value);\n      });\n    }\n  }\n  if (Object.isSealed) {\n    var objectIsSealedAcceptsPrimitives = !throwsError(function () { return Object.isSealed('foo'); });\n    if (!objectIsSealedAcceptsPrimitives) {\n      var originalObjectIsSealed = Object.isSealed;\n      overrideNative(Object, 'isSealed', function isSealed(value) {\n        if (!ES.TypeIsObject(value)) { return true; }\n        return originalObjectIsSealed(value);\n      });\n    }\n  }\n  if (Object.freeze) {\n    var objectFreezeAcceptsPrimitives = !throwsError(function () { return Object.freeze('foo'); });\n    if (!objectFreezeAcceptsPrimitives) {\n      var originalObjectFreeze = Object.freeze;\n      overrideNative(Object, 'freeze', function freeze(value) {\n        if (!ES.TypeIsObject(value)) { return value; }\n        return originalObjectFreeze(value);\n      });\n    }\n  }\n  if (Object.isFrozen) {\n    var objectIsFrozenAcceptsPrimitives = !throwsError(function () { return Object.isFrozen('foo'); });\n    if (!objectIsFrozenAcceptsPrimitives) {\n      var originalObjectIsFrozen = Object.isFrozen;\n      overrideNative(Object, 'isFrozen', function isFrozen(value) {\n        if (!ES.TypeIsObject(value)) { return true; }\n        return originalObjectIsFrozen(value);\n      });\n    }\n  }\n  if (Object.preventExtensions) {\n    var objectPreventExtensionsAcceptsPrimitives = !throwsError(function () { return Object.preventExtensions('foo'); });\n    if (!objectPreventExtensionsAcceptsPrimitives) {\n      var originalObjectPreventExtensions = Object.preventExtensions;\n      overrideNative(Object, 'preventExtensions', function preventExtensions(value) {\n        if (!ES.TypeIsObject(value)) { return value; }\n        return originalObjectPreventExtensions(value);\n      });\n    }\n  }\n  if (Object.isExtensible) {\n    var objectIsExtensibleAcceptsPrimitives = !throwsError(function () { return Object.isExtensible('foo'); });\n    if (!objectIsExtensibleAcceptsPrimitives) {\n      var originalObjectIsExtensible = Object.isExtensible;\n      overrideNative(Object, 'isExtensible', function isExtensible(value) {\n        if (!ES.TypeIsObject(value)) { return false; }\n        return originalObjectIsExtensible(value);\n      });\n    }\n  }\n  if (Object.getPrototypeOf) {\n    var objectGetProtoAcceptsPrimitives = !throwsError(function () { return Object.getPrototypeOf('foo'); });\n    if (!objectGetProtoAcceptsPrimitives) {\n      var originalGetProto = Object.getPrototypeOf;\n      overrideNative(Object, 'getPrototypeOf', function getPrototypeOf(value) {\n        return originalGetProto(ES.ToObject(value));\n      });\n    }\n  }\n\n  var hasFlags = supportsDescriptors && (function () {\n    var desc = Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags');\n    return desc && ES.IsCallable(desc.get);\n  }());\n  if (supportsDescriptors && !hasFlags) {\n    var regExpFlagsGetter = function flags() {\n      if (!ES.TypeIsObject(this)) {\n        throw new TypeError('Method called on incompatible type: must be an object.');\n      }\n      var result = '';\n      if (this.global) {\n        result += 'g';\n      }\n      if (this.ignoreCase) {\n        result += 'i';\n      }\n      if (this.multiline) {\n        result += 'm';\n      }\n      if (this.unicode) {\n        result += 'u';\n      }\n      if (this.sticky) {\n        result += 'y';\n      }\n      return result;\n    };\n\n    Value.getter(RegExp.prototype, 'flags', regExpFlagsGetter);\n  }\n\n  var regExpSupportsFlagsWithRegex = supportsDescriptors && valueOrFalseIfThrows(function () {\n    return String(new RegExp(/a/g, 'i')) === '/a/i';\n  });\n  var regExpNeedsToSupportSymbolMatch = hasSymbols && supportsDescriptors && (function () {\n    // Edge 0.12 supports flags fully, but does not support Symbol.match\n    var regex = /./;\n    regex[Symbol.match] = false;\n    return RegExp(regex) === regex;\n  }());\n\n  var regexToStringIsGeneric = valueOrFalseIfThrows(function () {\n    return RegExp.prototype.toString.call({ source: 'abc' }) === '/abc/';\n  });\n  var regexToStringSupportsGenericFlags = regexToStringIsGeneric && valueOrFalseIfThrows(function () {\n    return RegExp.prototype.toString.call({ source: 'a', flags: 'b' }) === '/a/b';\n  });\n  if (!regexToStringIsGeneric || !regexToStringSupportsGenericFlags) {\n    var origRegExpToString = RegExp.prototype.toString;\n    defineProperty(RegExp.prototype, 'toString', function toString() {\n      var R = ES.RequireObjectCoercible(this);\n      if (Type.regex(R)) {\n        return _call(origRegExpToString, R);\n      }\n      var pattern = $String(R.source);\n      var flags = $String(R.flags);\n      return '/' + pattern + '/' + flags;\n    }, true);\n    Value.preserveToString(RegExp.prototype.toString, origRegExpToString);\n  }\n\n  if (supportsDescriptors && (!regExpSupportsFlagsWithRegex || regExpNeedsToSupportSymbolMatch)) {\n    var flagsGetter = Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags').get;\n    var sourceDesc = Object.getOwnPropertyDescriptor(RegExp.prototype, 'source') || {};\n    var legacySourceGetter = function () {\n      // prior to it being a getter, it's own + nonconfigurable\n      return this.source;\n    };\n    var sourceGetter = ES.IsCallable(sourceDesc.get) ? sourceDesc.get : legacySourceGetter;\n\n    var OrigRegExp = RegExp;\n    var RegExpShim = (function () {\n      return function RegExp(pattern, flags) {\n        var patternIsRegExp = ES.IsRegExp(pattern);\n        var calledWithNew = this instanceof RegExp;\n        if (!calledWithNew && patternIsRegExp && typeof flags === 'undefined' && pattern.constructor === RegExp) {\n          return pattern;\n        }\n\n        var P = pattern;\n        var F = flags;\n        if (Type.regex(pattern)) {\n          P = ES.Call(sourceGetter, pattern);\n          F = typeof flags === 'undefined' ? ES.Call(flagsGetter, pattern) : flags;\n          return new RegExp(P, F);\n        } else if (patternIsRegExp) {\n          P = pattern.source;\n          F = typeof flags === 'undefined' ? pattern.flags : flags;\n        }\n        return new OrigRegExp(pattern, flags);\n      };\n    }());\n    wrapConstructor(OrigRegExp, RegExpShim, {\n      $input: true // Chrome < v39 & Opera < 26 have a nonstandard \"$input\" property\n    });\n    RegExp = RegExpShim; // eslint-disable-line no-global-assign\n    Value.redefine(globals, 'RegExp', RegExpShim);\n  }\n\n  if (supportsDescriptors) {\n    var regexGlobals = {\n      input: '$_',\n      lastMatch: '$&',\n      lastParen: '$+',\n      leftContext: '$`',\n      rightContext: '$\\''\n    };\n    _forEach(keys(regexGlobals), function (prop) {\n      if (prop in RegExp && !(regexGlobals[prop] in RegExp)) {\n        Value.getter(RegExp, regexGlobals[prop], function get() {\n          return RegExp[prop];\n        });\n      }\n    });\n  }\n  addDefaultSpecies(RegExp);\n\n  var inverseEpsilon = 1 / Number.EPSILON;\n  var roundTiesToEven = function roundTiesToEven(n) {\n    // Even though this reduces down to `return n`, it takes advantage of built-in rounding.\n    return (n + inverseEpsilon) - inverseEpsilon;\n  };\n  var BINARY_32_EPSILON = Math.pow(2, -23);\n  var BINARY_32_MAX_VALUE = Math.pow(2, 127) * (2 - BINARY_32_EPSILON);\n  var BINARY_32_MIN_VALUE = Math.pow(2, -126);\n  var E = Math.E;\n  var LOG2E = Math.LOG2E;\n  var LOG10E = Math.LOG10E;\n  var numberCLZ = Number.prototype.clz;\n  delete Number.prototype.clz; // Safari 8 has Number#clz\n\n  var MathShims = {\n    acosh: function acosh(value) {\n      var x = Number(value);\n      if (numberIsNaN(x) || value < 1) { return NaN; }\n      if (x === 1) { return 0; }\n      if (x === Infinity) { return x; }\n\n      var xInvSquared = 1 / (x * x);\n      if (x < 2) {\n        return _log1p(x - 1 + (_sqrt(1 - xInvSquared) * x));\n      }\n      var halfX = x / 2;\n      return _log1p(halfX + (_sqrt(1 - xInvSquared) * halfX) - 1) + (1 / LOG2E);\n    },\n\n    asinh: function asinh(value) {\n      var x = Number(value);\n      if (x === 0 || !globalIsFinite(x)) {\n        return x;\n      }\n\n      var a = _abs(x);\n      var aSquared = a * a;\n      var s = _sign(x);\n      if (a < 1) {\n        return s * _log1p(a + (aSquared / (_sqrt(aSquared + 1) + 1)));\n      }\n      return s * (_log1p((a / 2) + (_sqrt(1 + (1 / aSquared)) * a / 2) - 1) + (1 / LOG2E));\n    },\n\n    atanh: function atanh(value) {\n      var x = Number(value);\n\n      if (x === 0) { return x; }\n      if (x === -1) { return -Infinity; }\n      if (x === 1) { return Infinity; }\n      if (numberIsNaN(x) || x < -1 || x > 1) {\n        return NaN;\n      }\n\n      var a = _abs(x);\n      return _sign(x) * _log1p(2 * a / (1 - a)) / 2;\n    },\n\n    cbrt: function cbrt(value) {\n      var x = Number(value);\n      if (x === 0) { return x; }\n      var negate = x < 0;\n      var result;\n      if (negate) { x = -x; }\n      if (x === Infinity) {\n        result = Infinity;\n      } else {\n        result = _exp(_log(x) / 3);\n        // from http://en.wikipedia.org/wiki/Cube_root#Numerical_methods\n        result = ((x / (result * result)) + (2 * result)) / 3;\n      }\n      return negate ? -result : result;\n    },\n\n    clz32: function clz32(value) {\n      // See https://bugs.ecmascript.org/show_bug.cgi?id=2465\n      var x = Number(value);\n      var number = ES.ToUint32(x);\n      if (number === 0) {\n        return 32;\n      }\n      return numberCLZ ? ES.Call(numberCLZ, number) : 31 - _floor(_log(number + 0.5) * LOG2E);\n    },\n\n    cosh: function cosh(value) {\n      var x = Number(value);\n      if (x === 0) { return 1; } // +0 or -0\n      if (numberIsNaN(x)) { return NaN; }\n      if (!globalIsFinite(x)) { return Infinity; }\n\n      var t = _exp(_abs(x) - 1);\n      return (t + (1 / (t * E * E))) * (E / 2);\n    },\n\n    expm1: function expm1(value) {\n      var x = Number(value);\n      if (x === -Infinity) { return -1; }\n      if (!globalIsFinite(x) || x === 0) { return x; }\n      if (_abs(x) > 0.5) {\n        return _exp(x) - 1;\n      }\n      // A more precise approximation using Taylor series expansion\n      // from https://github.com/paulmillr/es6-shim/issues/314#issuecomment-70293986\n      var t = x;\n      var sum = 0;\n      var n = 1;\n      while (sum + t !== sum) {\n        sum += t;\n        n += 1;\n        t *= x / n;\n      }\n      return sum;\n    },\n\n    hypot: function hypot(x, y) {\n      var result = 0;\n      var largest = 0;\n      for (var i = 0; i < arguments.length; ++i) {\n        var value = _abs(Number(arguments[i]));\n        if (largest < value) {\n          result *= (largest / value) * (largest / value);\n          result += 1;\n          largest = value;\n        } else {\n          result += value > 0 ? (value / largest) * (value / largest) : value;\n        }\n      }\n      return largest === Infinity ? Infinity : largest * _sqrt(result);\n    },\n\n    log2: function log2(value) {\n      return _log(value) * LOG2E;\n    },\n\n    log10: function log10(value) {\n      return _log(value) * LOG10E;\n    },\n\n    log1p: _log1p,\n\n    sign: _sign,\n\n    sinh: function sinh(value) {\n      var x = Number(value);\n      if (!globalIsFinite(x) || x === 0) { return x; }\n\n      var a = _abs(x);\n      if (a < 1) {\n        var u = Math.expm1(a);\n        return _sign(x) * u * (1 + (1 / (u + 1))) / 2;\n      }\n      var t = _exp(a - 1);\n      return _sign(x) * (t - (1 / (t * E * E))) * (E / 2);\n    },\n\n    tanh: function tanh(value) {\n      var x = Number(value);\n      if (numberIsNaN(x) || x === 0) { return x; }\n      // can exit early at +-20 as JS loses precision for true value at this integer\n      if (x >= 20) { return 1; }\n      if (x <= -20) { return -1; }\n\n      return (Math.expm1(x) - Math.expm1(-x)) / (_exp(x) + _exp(-x));\n    },\n\n    trunc: function trunc(value) {\n      var x = Number(value);\n      return x < 0 ? -_floor(-x) : _floor(x);\n    },\n\n    imul: function imul(x, y) {\n      // taken from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n      var a = ES.ToUint32(x);\n      var b = ES.ToUint32(y);\n      var ah = (a >>> 16) & 0xffff;\n      var al = a & 0xffff;\n      var bh = (b >>> 16) & 0xffff;\n      var bl = b & 0xffff;\n      // the shift by 0 fixes the sign on the high part\n      // the final |0 converts the unsigned value into a signed value\n      return (al * bl) + ((((ah * bl) + (al * bh)) << 16) >>> 0) | 0;\n    },\n\n    fround: function fround(x) {\n      var v = Number(x);\n      if (v === 0 || v === Infinity || v === -Infinity || numberIsNaN(v)) {\n        return v;\n      }\n      var sign = _sign(v);\n      var abs = _abs(v);\n      if (abs < BINARY_32_MIN_VALUE) {\n        return sign * roundTiesToEven(abs / BINARY_32_MIN_VALUE / BINARY_32_EPSILON) * BINARY_32_MIN_VALUE * BINARY_32_EPSILON;\n      }\n      // Veltkamp's splitting (?)\n      var a = (1 + (BINARY_32_EPSILON / Number.EPSILON)) * abs;\n      var result = a - (a - abs);\n      if (result > BINARY_32_MAX_VALUE || numberIsNaN(result)) {\n        return sign * Infinity;\n      }\n      return sign * result;\n    }\n  };\n\n  var withinULPDistance = function withinULPDistance(result, expected, distance) {\n    return _abs(1 - (result / expected)) / Number.EPSILON < (distance || 8);\n  };\n\n  defineProperties(Math, MathShims);\n  // Chrome < 40 sinh returns ∞ for large numbers\n  defineProperty(Math, 'sinh', MathShims.sinh, Math.sinh(710) === Infinity);\n  // Chrome < 40 cosh returns ∞ for large numbers\n  defineProperty(Math, 'cosh', MathShims.cosh, Math.cosh(710) === Infinity);\n  // IE 11 TP has an imprecise log1p: reports Math.log1p(-1e-17) as 0\n  defineProperty(Math, 'log1p', MathShims.log1p, Math.log1p(-1e-17) !== -1e-17);\n  // IE 11 TP has an imprecise asinh: reports Math.asinh(-1e7) as not exactly equal to -Math.asinh(1e7)\n  defineProperty(Math, 'asinh', MathShims.asinh, Math.asinh(-1e7) !== -Math.asinh(1e7));\n  // Chrome < 54 asinh returns ∞ for large numbers and should not\n  defineProperty(Math, 'asinh', MathShims.asinh, Math.asinh(1e+300) === Infinity);\n  // Chrome < 54 atanh incorrectly returns 0 for large numbers\n  defineProperty(Math, 'atanh', MathShims.atanh, Math.atanh(1e-300) === 0);\n  // Chrome 40 has an imprecise Math.tanh with very small numbers\n  defineProperty(Math, 'tanh', MathShims.tanh, Math.tanh(-2e-17) !== -2e-17);\n  // Chrome 40 loses Math.acosh precision with high numbers\n  defineProperty(Math, 'acosh', MathShims.acosh, Math.acosh(Number.MAX_VALUE) === Infinity);\n  // Chrome < 54 has an inaccurate acosh for EPSILON deltas\n  defineProperty(Math, 'acosh', MathShims.acosh, !withinULPDistance(Math.acosh(1 + Number.EPSILON), Math.sqrt(2 * Number.EPSILON)));\n  // Firefox 38 on Windows\n  defineProperty(Math, 'cbrt', MathShims.cbrt, !withinULPDistance(Math.cbrt(1e-300), 1e-100));\n  // node 0.11 has an imprecise Math.sinh with very small numbers\n  defineProperty(Math, 'sinh', MathShims.sinh, Math.sinh(-2e-17) !== -2e-17);\n  // FF 35 on Linux reports 22025.465794806725 for Math.expm1(10)\n  var expm1OfTen = Math.expm1(10);\n  defineProperty(Math, 'expm1', MathShims.expm1, expm1OfTen > 22025.465794806719 || expm1OfTen < 22025.4657948067165168);\n  // node v12.11 - v12.15 report NaN\n  defineProperty(Math, 'hypot', MathShims.hypot, Math.hypot(Infinity, NaN) !== Infinity);\n\n  var origMathRound = Math.round;\n  // breaks in e.g. Safari 8, Internet Explorer 11, Opera 12\n  var roundHandlesBoundaryConditions = Math.round(0.5 - (Number.EPSILON / 4)) === 0\n    && Math.round(-0.5 + (Number.EPSILON / 3.99)) === 1;\n\n  // When engines use Math.floor(x + 0.5) internally, Math.round can be buggy for large integers.\n  // This behavior should be governed by \"round to nearest, ties to even mode\"\n  // see http://www.ecma-international.org/ecma-262/6.0/#sec-terms-and-definitions-number-type\n  // These are the boundary cases where it breaks.\n  var smallestPositiveNumberWhereRoundBreaks = inverseEpsilon + 1;\n  var largestPositiveNumberWhereRoundBreaks = (2 * inverseEpsilon) - 1;\n  var roundDoesNotIncreaseIntegers = [\n    smallestPositiveNumberWhereRoundBreaks,\n    largestPositiveNumberWhereRoundBreaks\n  ].every(function (num) {\n    return Math.round(num) === num;\n  });\n  defineProperty(Math, 'round', function round(x) {\n    var floor = _floor(x);\n    var ceil = floor === -1 ? -0 : floor + 1;\n    return x - floor < 0.5 ? floor : ceil;\n  }, !roundHandlesBoundaryConditions || !roundDoesNotIncreaseIntegers);\n  Value.preserveToString(Math.round, origMathRound);\n\n  var origImul = Math.imul;\n  if (Math.imul(0xffffffff, 5) !== -5) {\n    // Safari 6.1, at least, reports \"0\" for this value\n    Math.imul = MathShims.imul;\n    Value.preserveToString(Math.imul, origImul);\n  }\n  if (Math.imul.length !== 2) {\n    // Safari 8.0.4 has a length of 1\n    // fixed in https://bugs.webkit.org/show_bug.cgi?id=143658\n    overrideNative(Math, 'imul', function imul(x, y) {\n      return ES.Call(origImul, Math, arguments);\n    });\n  }\n\n  // Promises\n  // Simplest possible implementation; use a 3rd-party library if you\n  // want the best possible speed and/or long stack traces.\n  var PromiseShim = (function () {\n    var setTimeout = globals.setTimeout;\n    // some environments don't have setTimeout - no way to shim here.\n    if (typeof setTimeout !== 'function' && typeof setTimeout !== 'object') { return; }\n\n    ES.IsPromise = function (promise) {\n      if (!ES.TypeIsObject(promise)) {\n        return false;\n      }\n      if (typeof promise._promise === 'undefined') {\n        return false; // uninitialized, or missing our hidden field.\n      }\n      return true;\n    };\n\n    // \"PromiseCapability\" in the spec is what most promise implementations\n    // call a \"deferred\".\n    var PromiseCapability = function (C) {\n      if (!ES.IsConstructor(C)) {\n        throw new TypeError('Bad promise constructor');\n      }\n      var capability = this;\n      var resolver = function (resolve, reject) {\n        if (capability.resolve !== void 0 || capability.reject !== void 0) {\n          throw new TypeError('Bad Promise implementation!');\n        }\n        capability.resolve = resolve;\n        capability.reject = reject;\n      };\n      // Initialize fields to inform optimizers about the object shape.\n      capability.resolve = void 0;\n      capability.reject = void 0;\n      capability.promise = new C(resolver);\n      if (!(ES.IsCallable(capability.resolve) && ES.IsCallable(capability.reject))) {\n        throw new TypeError('Bad promise constructor');\n      }\n    };\n\n    // find an appropriate setImmediate-alike\n    var makeZeroTimeout;\n    if (typeof window !== 'undefined' && ES.IsCallable(window.postMessage)) {\n      makeZeroTimeout = function () {\n        // from http://dbaron.org/log/20100309-faster-timeouts\n        var timeouts = [];\n        var messageName = 'zero-timeout-message';\n        var setZeroTimeout = function (fn) {\n          _push(timeouts, fn);\n          window.postMessage(messageName, '*');\n        };\n        var handleMessage = function (event) {\n          if (event.source === window && event.data === messageName) {\n            event.stopPropagation();\n            if (timeouts.length === 0) { return; }\n            var fn = _shift(timeouts);\n            fn();\n          }\n        };\n        window.addEventListener('message', handleMessage, true);\n        return setZeroTimeout;\n      };\n    }\n    var makePromiseAsap = function () {\n      // An efficient task-scheduler based on a pre-existing Promise\n      // implementation, which we can use even if we override the\n      // global Promise below (in order to workaround bugs)\n      // https://github.com/Raynos/observ-hash/issues/2#issuecomment-35857671\n      var P = globals.Promise;\n      var pr = P && P.resolve && P.resolve();\n      return pr && function (task) {\n        return pr.then(task);\n      };\n    };\n    var enqueue = ES.IsCallable(globals.setImmediate)\n      ? globals.setImmediate\n      : (\n        typeof process === 'object' && process.nextTick\n          ? process.nextTick\n          : makePromiseAsap() || (ES.IsCallable(makeZeroTimeout) ? makeZeroTimeout() : function (task) { setTimeout(task, 0); })\n      ); // fallback\n\n    // Constants for Promise implementation\n    var PROMISE_IDENTITY = function (x) { return x; };\n    var PROMISE_THROWER = function (e) { throw e; };\n    var PROMISE_PENDING = 0;\n    var PROMISE_FULFILLED = 1;\n    var PROMISE_REJECTED = 2;\n    // We store fulfill/reject handlers and capabilities in a single array.\n    var PROMISE_FULFILL_OFFSET = 0;\n    var PROMISE_REJECT_OFFSET = 1;\n    var PROMISE_CAPABILITY_OFFSET = 2;\n    // This is used in an optimization for chaining promises via then.\n    var PROMISE_FAKE_CAPABILITY = {};\n\n    var enqueuePromiseReactionJob = function (handler, capability, argument) {\n      enqueue(function () {\n        promiseReactionJob(handler, capability, argument);\n      });\n    };\n\n    var promiseReactionJob = function (handler, promiseCapability, argument) {\n      var handlerResult, f;\n      if (promiseCapability === PROMISE_FAKE_CAPABILITY) {\n        // Fast case, when we don't actually need to chain through to a\n        // (real) promiseCapability.\n        return handler(argument);\n      }\n      try {\n        handlerResult = handler(argument);\n        f = promiseCapability.resolve;\n      } catch (e) {\n        handlerResult = e;\n        f = promiseCapability.reject;\n      }\n      f(handlerResult);\n    };\n\n    var fulfillPromise = function (promise, value) {\n      var _promise = promise._promise;\n      var length = _promise.reactionLength;\n      if (length > 0) {\n        enqueuePromiseReactionJob(\n          _promise.fulfillReactionHandler0,\n          _promise.reactionCapability0,\n          value\n        );\n        _promise.fulfillReactionHandler0 = void 0;\n        _promise.rejectReactions0 = void 0;\n        _promise.reactionCapability0 = void 0;\n        if (length > 1) {\n          for (var i = 1, idx = 0; i < length; i++, idx += 3) {\n            enqueuePromiseReactionJob(\n              _promise[idx + PROMISE_FULFILL_OFFSET],\n              _promise[idx + PROMISE_CAPABILITY_OFFSET],\n              value\n            );\n            promise[idx + PROMISE_FULFILL_OFFSET] = void 0;\n            promise[idx + PROMISE_REJECT_OFFSET] = void 0;\n            promise[idx + PROMISE_CAPABILITY_OFFSET] = void 0;\n          }\n        }\n      }\n      _promise.result = value;\n      _promise.state = PROMISE_FULFILLED;\n      _promise.reactionLength = 0;\n    };\n\n    var rejectPromise = function (promise, reason) {\n      var _promise = promise._promise;\n      var length = _promise.reactionLength;\n      if (length > 0) {\n        enqueuePromiseReactionJob(\n          _promise.rejectReactionHandler0,\n          _promise.reactionCapability0,\n          reason\n        );\n        _promise.fulfillReactionHandler0 = void 0;\n        _promise.rejectReactions0 = void 0;\n        _promise.reactionCapability0 = void 0;\n        if (length > 1) {\n          for (var i = 1, idx = 0; i < length; i++, idx += 3) {\n            enqueuePromiseReactionJob(\n              _promise[idx + PROMISE_REJECT_OFFSET],\n              _promise[idx + PROMISE_CAPABILITY_OFFSET],\n              reason\n            );\n            promise[idx + PROMISE_FULFILL_OFFSET] = void 0;\n            promise[idx + PROMISE_REJECT_OFFSET] = void 0;\n            promise[idx + PROMISE_CAPABILITY_OFFSET] = void 0;\n          }\n        }\n      }\n      _promise.result = reason;\n      _promise.state = PROMISE_REJECTED;\n      _promise.reactionLength = 0;\n    };\n\n    var createResolvingFunctions = function (promise) {\n      var alreadyResolved = false;\n      var resolve = function (resolution) {\n        var then;\n        if (alreadyResolved) { return; }\n        alreadyResolved = true;\n        if (resolution === promise) {\n          return rejectPromise(promise, new TypeError('Self resolution'));\n        }\n        if (!ES.TypeIsObject(resolution)) {\n          return fulfillPromise(promise, resolution);\n        }\n        try {\n          then = resolution.then;\n        } catch (e) {\n          return rejectPromise(promise, e);\n        }\n        if (!ES.IsCallable(then)) {\n          return fulfillPromise(promise, resolution);\n        }\n        enqueue(function () {\n          promiseResolveThenableJob(promise, resolution, then);\n        });\n      };\n      var reject = function (reason) {\n        if (alreadyResolved) { return; }\n        alreadyResolved = true;\n        return rejectPromise(promise, reason);\n      };\n      return { resolve: resolve, reject: reject };\n    };\n\n    var optimizedThen = function (then, thenable, resolve, reject) {\n      // Optimization: since we discard the result, we can pass our\n      // own then implementation a special hint to let it know it\n      // doesn't have to create it.  (The PROMISE_FAKE_CAPABILITY\n      // object is local to this implementation and unforgeable outside.)\n      if (then === Promise$prototype$then) {\n        _call(then, thenable, resolve, reject, PROMISE_FAKE_CAPABILITY);\n      } else {\n        _call(then, thenable, resolve, reject);\n      }\n    };\n    var promiseResolveThenableJob = function (promise, thenable, then) {\n      var resolvingFunctions = createResolvingFunctions(promise);\n      var resolve = resolvingFunctions.resolve;\n      var reject = resolvingFunctions.reject;\n      try {\n        optimizedThen(then, thenable, resolve, reject);\n      } catch (e) {\n        reject(e);\n      }\n    };\n\n    var Promise$prototype, Promise$prototype$then;\n    var Promise = (function () {\n      var PromiseShim = function Promise(resolver) {\n        if (!(this instanceof PromiseShim)) {\n          throw new TypeError('Constructor Promise requires \"new\"');\n        }\n        if (this && this._promise) {\n          throw new TypeError('Bad construction');\n        }\n        // see https://bugs.ecmascript.org/show_bug.cgi?id=2482\n        if (!ES.IsCallable(resolver)) {\n          throw new TypeError('not a valid resolver');\n        }\n        var promise = emulateES6construct(this, PromiseShim, Promise$prototype, {\n          _promise: {\n            result: void 0,\n            state: PROMISE_PENDING,\n            // The first member of the \"reactions\" array is inlined here,\n            // since most promises only have one reaction.\n            // We've also exploded the 'reaction' object to inline the\n            // \"handler\" and \"capability\" fields, since both fulfill and\n            // reject reactions share the same capability.\n            reactionLength: 0,\n            fulfillReactionHandler0: void 0,\n            rejectReactionHandler0: void 0,\n            reactionCapability0: void 0\n          }\n        });\n        var resolvingFunctions = createResolvingFunctions(promise);\n        var reject = resolvingFunctions.reject;\n        try {\n          resolver(resolvingFunctions.resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        return promise;\n      };\n      return PromiseShim;\n    }());\n    Promise$prototype = Promise.prototype;\n\n    var _promiseAllResolver = function (index, values, capability, remaining) {\n      var alreadyCalled = false;\n      return function (x) {\n        if (alreadyCalled) { return; }\n        alreadyCalled = true;\n        values[index] = x;\n        if ((--remaining.count) === 0) {\n          var resolve = capability.resolve;\n          resolve(values); // call w/ this===undefined\n        }\n      };\n    };\n\n    var performPromiseAll = function (iteratorRecord, C, resultCapability) {\n      var it = iteratorRecord.iterator;\n      var values = [];\n      var remaining = { count: 1 };\n      var next, nextValue;\n      var index = 0;\n      while (true) {\n        try {\n          next = ES.IteratorStep(it);\n          if (next === false) {\n            iteratorRecord.done = true;\n            break;\n          }\n          nextValue = next.value;\n        } catch (e) {\n          iteratorRecord.done = true;\n          throw e;\n        }\n        values[index] = void 0;\n        var nextPromise = C.resolve(nextValue);\n        var resolveElement = _promiseAllResolver(\n          index,\n          values,\n          resultCapability,\n          remaining\n        );\n        remaining.count += 1;\n        optimizedThen(nextPromise.then, nextPromise, resolveElement, resultCapability.reject);\n        index += 1;\n      }\n      if ((--remaining.count) === 0) {\n        var resolve = resultCapability.resolve;\n        resolve(values); // call w/ this===undefined\n      }\n      return resultCapability.promise;\n    };\n\n    var performPromiseRace = function (iteratorRecord, C, resultCapability) {\n      var it = iteratorRecord.iterator;\n      var next, nextValue, nextPromise;\n      while (true) {\n        try {\n          next = ES.IteratorStep(it);\n          if (next === false) {\n            // NOTE: If iterable has no items, resulting promise will never\n            // resolve; see:\n            // https://github.com/domenic/promises-unwrapping/issues/75\n            // https://bugs.ecmascript.org/show_bug.cgi?id=2515\n            iteratorRecord.done = true;\n            break;\n          }\n          nextValue = next.value;\n        } catch (e) {\n          iteratorRecord.done = true;\n          throw e;\n        }\n        nextPromise = C.resolve(nextValue);\n        optimizedThen(nextPromise.then, nextPromise, resultCapability.resolve, resultCapability.reject);\n      }\n      return resultCapability.promise;\n    };\n\n    defineProperties(Promise, {\n      all: function all(iterable) {\n        var C = this;\n        if (!ES.TypeIsObject(C)) {\n          throw new TypeError('Promise is not object');\n        }\n        var capability = new PromiseCapability(C);\n        var iterator, iteratorRecord;\n        try {\n          iterator = ES.GetIterator(iterable);\n          iteratorRecord = { iterator: iterator, done: false };\n          return performPromiseAll(iteratorRecord, C, capability);\n        } catch (e) {\n          var exception = e;\n          if (iteratorRecord && !iteratorRecord.done) {\n            try {\n              ES.IteratorClose(iterator, true);\n            } catch (ee) {\n              exception = ee;\n            }\n          }\n          var reject = capability.reject;\n          reject(exception);\n          return capability.promise;\n        }\n      },\n\n      race: function race(iterable) {\n        var C = this;\n        if (!ES.TypeIsObject(C)) {\n          throw new TypeError('Promise is not object');\n        }\n        var capability = new PromiseCapability(C);\n        var iterator, iteratorRecord;\n        try {\n          iterator = ES.GetIterator(iterable);\n          iteratorRecord = { iterator: iterator, done: false };\n          return performPromiseRace(iteratorRecord, C, capability);\n        } catch (e) {\n          var exception = e;\n          if (iteratorRecord && !iteratorRecord.done) {\n            try {\n              ES.IteratorClose(iterator, true);\n            } catch (ee) {\n              exception = ee;\n            }\n          }\n          var reject = capability.reject;\n          reject(exception);\n          return capability.promise;\n        }\n      },\n\n      reject: function reject(reason) {\n        var C = this;\n        if (!ES.TypeIsObject(C)) {\n          throw new TypeError('Bad promise constructor');\n        }\n        var capability = new PromiseCapability(C);\n        var rejectFunc = capability.reject;\n        rejectFunc(reason); // call with this===undefined\n        return capability.promise;\n      },\n\n      resolve: function resolve(v) {\n        // See https://esdiscuss.org/topic/fixing-promise-resolve for spec\n        var C = this;\n        if (!ES.TypeIsObject(C)) {\n          throw new TypeError('Bad promise constructor');\n        }\n        if (ES.IsPromise(v)) {\n          var constructor = v.constructor;\n          if (constructor === C) {\n            return v;\n          }\n        }\n        var capability = new PromiseCapability(C);\n        var resolveFunc = capability.resolve;\n        resolveFunc(v); // call with this===undefined\n        return capability.promise;\n      }\n    });\n\n    defineProperties(Promise$prototype, {\n      'catch': function (onRejected) {\n        return this.then(null, onRejected);\n      },\n\n      then: function then(onFulfilled, onRejected) {\n        var promise = this;\n        if (!ES.IsPromise(promise)) { throw new TypeError('not a promise'); }\n        var C = ES.SpeciesConstructor(promise, Promise);\n        var resultCapability;\n        var returnValueIsIgnored = arguments.length > 2 && arguments[2] === PROMISE_FAKE_CAPABILITY;\n        if (returnValueIsIgnored && C === Promise) {\n          resultCapability = PROMISE_FAKE_CAPABILITY;\n        } else {\n          resultCapability = new PromiseCapability(C);\n        }\n        // PerformPromiseThen(promise, onFulfilled, onRejected, resultCapability)\n        // Note that we've split the 'reaction' object into its two\n        // components, \"capabilities\" and \"handler\"\n        // \"capabilities\" is always equal to `resultCapability`\n        var fulfillReactionHandler = ES.IsCallable(onFulfilled) ? onFulfilled : PROMISE_IDENTITY;\n        var rejectReactionHandler = ES.IsCallable(onRejected) ? onRejected : PROMISE_THROWER;\n        var _promise = promise._promise;\n        var value;\n        if (_promise.state === PROMISE_PENDING) {\n          if (_promise.reactionLength === 0) {\n            _promise.fulfillReactionHandler0 = fulfillReactionHandler;\n            _promise.rejectReactionHandler0 = rejectReactionHandler;\n            _promise.reactionCapability0 = resultCapability;\n          } else {\n            var idx = 3 * (_promise.reactionLength - 1);\n            _promise[idx + PROMISE_FULFILL_OFFSET] = fulfillReactionHandler;\n            _promise[idx + PROMISE_REJECT_OFFSET] = rejectReactionHandler;\n            _promise[idx + PROMISE_CAPABILITY_OFFSET] = resultCapability;\n          }\n          _promise.reactionLength += 1;\n        } else if (_promise.state === PROMISE_FULFILLED) {\n          value = _promise.result;\n          enqueuePromiseReactionJob(\n            fulfillReactionHandler,\n            resultCapability,\n            value\n          );\n        } else if (_promise.state === PROMISE_REJECTED) {\n          value = _promise.result;\n          enqueuePromiseReactionJob(\n            rejectReactionHandler,\n            resultCapability,\n            value\n          );\n        } else {\n          throw new TypeError('unexpected Promise state');\n        }\n        return resultCapability.promise;\n      }\n    });\n    // This helps the optimizer by ensuring that methods which take\n    // capabilities aren't polymorphic.\n    PROMISE_FAKE_CAPABILITY = new PromiseCapability(Promise);\n    Promise$prototype$then = Promise$prototype.then;\n\n    return Promise;\n  }());\n\n  // Chrome's native Promise has extra methods that it shouldn't have. Let's remove them.\n  if (globals.Promise) {\n    delete globals.Promise.accept;\n    delete globals.Promise.defer;\n    delete globals.Promise.prototype.chain;\n  }\n\n  if (typeof PromiseShim === 'function') {\n    // export the Promise constructor.\n    defineProperties(globals, { Promise: PromiseShim });\n    // In Chrome 33 (and thereabouts) Promise is defined, but the\n    // implementation is buggy in a number of ways.  Let's check subclassing\n    // support to see if we have a buggy implementation.\n    var promiseSupportsSubclassing = supportsSubclassing(globals.Promise, function (S) {\n      return S.resolve(42).then(function () {}) instanceof S;\n    });\n    var promiseIgnoresNonFunctionThenCallbacks = !throwsError(function () {\n      return globals.Promise.reject(42).then(null, 5).then(null, noop);\n    });\n    var promiseRequiresObjectContext = throwsError(function () { return globals.Promise.call(3, noop); });\n    // Promise.resolve() was errata'ed late in the ES6 process.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1170742\n    //      https://code.google.com/p/v8/issues/detail?id=4161\n    // It serves as a proxy for a number of other bugs in early Promise\n    // implementations.\n    var promiseResolveBroken = (function (Promise) {\n      var p = Promise.resolve(5);\n      p.constructor = {};\n      var p2 = Promise.resolve(p);\n      try {\n        p2.then(null, noop).then(null, noop); // avoid \"uncaught rejection\" warnings in console\n      } catch (e) {\n        return true; // v8 native Promises break here https://code.google.com/p/chromium/issues/detail?id=575314\n      }\n      return p === p2; // This *should* be false!\n    }(globals.Promise));\n\n    // Chrome 46 (probably older too) does not retrieve a thenable's .then synchronously\n    var getsThenSynchronously = supportsDescriptors && (function () {\n      var count = 0;\n      // eslint-disable-next-line getter-return\n      var thenable = Object.defineProperty({}, 'then', { get: function () { count += 1; } });\n      Promise.resolve(thenable);\n      return count === 1;\n    }());\n\n    var BadResolverPromise = function BadResolverPromise(executor) {\n      var p = new Promise(executor);\n      executor(3, function () {});\n      this.then = p.then;\n      this.constructor = BadResolverPromise;\n    };\n    BadResolverPromise.prototype = Promise.prototype;\n    BadResolverPromise.all = Promise.all;\n    // Chrome Canary 49 (probably older too) has some implementation bugs\n    var hasBadResolverPromise = valueOrFalseIfThrows(function () {\n      return !!BadResolverPromise.all([1, 2]);\n    });\n\n    if (\n      !promiseSupportsSubclassing\n      || !promiseIgnoresNonFunctionThenCallbacks\n      || !promiseRequiresObjectContext\n      || promiseResolveBroken\n      || !getsThenSynchronously\n      || hasBadResolverPromise\n    ) {\n      Promise = PromiseShim; // eslint-disable-line no-global-assign\n      overrideNative(globals, 'Promise', PromiseShim);\n    }\n    if (Promise.all.length !== 1) {\n      var origAll = Promise.all;\n      overrideNative(Promise, 'all', function all(iterable) {\n        return ES.Call(origAll, this, arguments);\n      });\n    }\n    if (Promise.race.length !== 1) {\n      var origRace = Promise.race;\n      overrideNative(Promise, 'race', function race(iterable) {\n        return ES.Call(origRace, this, arguments);\n      });\n    }\n    if (Promise.resolve.length !== 1) {\n      var origResolve = Promise.resolve;\n      overrideNative(Promise, 'resolve', function resolve(x) {\n        return ES.Call(origResolve, this, arguments);\n      });\n    }\n    if (Promise.reject.length !== 1) {\n      var origReject = Promise.reject;\n      overrideNative(Promise, 'reject', function reject(r) {\n        return ES.Call(origReject, this, arguments);\n      });\n    }\n    ensureEnumerable(Promise, 'all');\n    ensureEnumerable(Promise, 'race');\n    ensureEnumerable(Promise, 'resolve');\n    ensureEnumerable(Promise, 'reject');\n    addDefaultSpecies(Promise);\n  }\n\n  // Map and Set require a true ES5 environment\n  // Their fast path also requires that the environment preserve\n  // property insertion order, which is not guaranteed by the spec.\n  var testOrder = function (a) {\n    var b = keys(_reduce(a, function (o, k) {\n      o[k] = true;\n      return o;\n    }, {}));\n    return a.join(':') === b.join(':');\n  };\n  var preservesInsertionOrder = testOrder(['z', 'a', 'bb']);\n  // some engines (eg, Chrome) only preserve insertion order for string keys\n  var preservesNumericInsertionOrder = testOrder(['z', 1, 'a', '3', 2]);\n\n  if (supportsDescriptors) {\n\n    var fastkey = function fastkey(key, skipInsertionOrderCheck) {\n      if (!skipInsertionOrderCheck && !preservesInsertionOrder) {\n        return null;\n      }\n      if (isNullOrUndefined(key)) {\n        return '^' + ES.ToString(key);\n      } else if (typeof key === 'string') {\n        return '$' + key;\n      } else if (typeof key === 'number') {\n        // note that -0 will get coerced to \"0\" when used as a property key\n        if (!preservesNumericInsertionOrder) {\n          return 'n' + key;\n        }\n        return key;\n      } else if (typeof key === 'boolean') {\n        return 'b' + key;\n      }\n      return null;\n    };\n\n    var emptyObject = function emptyObject() {\n      // accomodate some older not-quite-ES5 browsers\n      return Object.create ? Object.create(null) : {};\n    };\n\n    var addIterableToMap = function addIterableToMap(MapConstructor, map, iterable) {\n      if (isArray(iterable) || Type.string(iterable)) {\n        _forEach(iterable, function (entry) {\n          if (!ES.TypeIsObject(entry)) {\n            throw new TypeError('Iterator value ' + entry + ' is not an entry object');\n          }\n          map.set(entry[0], entry[1]);\n        });\n      } else if (iterable instanceof MapConstructor) {\n        _call(MapConstructor.prototype.forEach, iterable, function (value, key) {\n          map.set(key, value);\n        });\n      } else {\n        var iter, adder;\n        if (!isNullOrUndefined(iterable)) {\n          adder = map.set;\n          if (!ES.IsCallable(adder)) { throw new TypeError('bad map'); }\n          iter = ES.GetIterator(iterable);\n        }\n        if (typeof iter !== 'undefined') {\n          while (true) {\n            var next = ES.IteratorStep(iter);\n            if (next === false) { break; }\n            var nextItem = next.value;\n            try {\n              if (!ES.TypeIsObject(nextItem)) {\n                throw new TypeError('Iterator value ' + nextItem + ' is not an entry object');\n              }\n              _call(adder, map, nextItem[0], nextItem[1]);\n            } catch (e) {\n              ES.IteratorClose(iter, true);\n              throw e;\n            }\n          }\n        }\n      }\n    };\n    var addIterableToSet = function addIterableToSet(SetConstructor, set, iterable) {\n      if (isArray(iterable) || Type.string(iterable)) {\n        _forEach(iterable, function (value) {\n          set.add(value);\n        });\n      } else if (iterable instanceof SetConstructor) {\n        _call(SetConstructor.prototype.forEach, iterable, function (value) {\n          set.add(value);\n        });\n      } else {\n        var iter, adder;\n        if (!isNullOrUndefined(iterable)) {\n          adder = set.add;\n          if (!ES.IsCallable(adder)) { throw new TypeError('bad set'); }\n          iter = ES.GetIterator(iterable);\n        }\n        if (typeof iter !== 'undefined') {\n          while (true) {\n            var next = ES.IteratorStep(iter);\n            if (next === false) { break; }\n            var nextValue = next.value;\n            try {\n              _call(adder, set, nextValue);\n            } catch (e) {\n              ES.IteratorClose(iter, true);\n              throw e;\n            }\n          }\n        }\n      }\n    };\n\n    var collectionShims = {\n      Map: (function () {\n\n        var empty = {};\n\n        var MapEntry = function MapEntry(key, value) {\n          this.key = key;\n          this.value = value;\n          this.next = null;\n          this.prev = null;\n        };\n\n        MapEntry.prototype.isRemoved = function isRemoved() {\n          return this.key === empty;\n        };\n\n        var isMap = function isMap(map) {\n          return !!map._es6map;\n        };\n\n        var requireMapSlot = function requireMapSlot(map, method) {\n          if (!ES.TypeIsObject(map) || !isMap(map)) {\n            throw new TypeError('Method Map.prototype.' + method + ' called on incompatible receiver ' + ES.ToString(map));\n          }\n        };\n\n        var MapIterator = function MapIterator(map, kind) {\n          requireMapSlot(map, '[[MapIterator]]');\n          defineProperty(this, 'head', map._head);\n          defineProperty(this, 'i', this.head);\n          defineProperty(this, 'kind', kind);\n        };\n\n        MapIterator.prototype = {\n          isMapIterator: true,\n          next: function next() {\n            if (!this.isMapIterator) {\n              throw new TypeError('Not a MapIterator');\n            }\n            var i = this.i;\n            var kind = this.kind;\n            var head = this.head;\n            if (typeof this.i === 'undefined') {\n              return iteratorResult();\n            }\n            while (i.isRemoved() && i !== head) {\n              // back up off of removed entries\n              i = i.prev;\n            }\n            // advance to next unreturned element.\n            var result;\n            while (i.next !== head) {\n              i = i.next;\n              if (!i.isRemoved()) {\n                if (kind === 'key') {\n                  result = i.key;\n                } else if (kind === 'value') {\n                  result = i.value;\n                } else {\n                  result = [i.key, i.value];\n                }\n                this.i = i;\n                return iteratorResult(result);\n              }\n            }\n            // once the iterator is done, it is done forever.\n            this.i = void 0;\n            return iteratorResult();\n          }\n        };\n        addIterator(MapIterator.prototype);\n\n        var Map$prototype;\n        var MapShim = function Map() {\n          if (!(this instanceof Map)) {\n            throw new TypeError('Constructor Map requires \"new\"');\n          }\n          if (this && this._es6map) {\n            throw new TypeError('Bad construction');\n          }\n          var map = emulateES6construct(this, Map, Map$prototype, {\n            _es6map: true,\n            _head: null,\n            _map: OrigMap ? new OrigMap() : null,\n            _size: 0,\n            _storage: emptyObject()\n          });\n\n          var head = new MapEntry(null, null);\n          // circular doubly-linked list.\n          /* eslint no-multi-assign: 1 */\n          head.next = head.prev = head;\n          map._head = head;\n\n          // Optionally initialize map from iterable\n          if (arguments.length > 0) {\n            addIterableToMap(Map, map, arguments[0]);\n          }\n          return map;\n        };\n        Map$prototype = MapShim.prototype;\n\n        Value.getter(Map$prototype, 'size', function () {\n          if (typeof this._size === 'undefined') {\n            throw new TypeError('size method called on incompatible Map');\n          }\n          return this._size;\n        });\n\n        defineProperties(Map$prototype, {\n          get: function get(key) {\n            requireMapSlot(this, 'get');\n            var entry;\n            var fkey = fastkey(key, true);\n            if (fkey !== null) {\n              // fast O(1) path\n              entry = this._storage[fkey];\n              if (entry) {\n                return entry.value;\n              }\n              return;\n\n            }\n            if (this._map) {\n              // fast object key path\n              entry = origMapGet.call(this._map, key);\n              if (entry) {\n                return entry.value;\n              }\n              return;\n\n            }\n            var head = this._head;\n            var i = head;\n            while ((i = i.next) !== head) {\n              if (ES.SameValueZero(i.key, key)) {\n                return i.value;\n              }\n            }\n          },\n\n          has: function has(key) {\n            requireMapSlot(this, 'has');\n            var fkey = fastkey(key, true);\n            if (fkey !== null) {\n              // fast O(1) path\n              return typeof this._storage[fkey] !== 'undefined';\n            }\n            if (this._map) {\n              // fast object key path\n              return origMapHas.call(this._map, key);\n            }\n            var head = this._head;\n            var i = head;\n            while ((i = i.next) !== head) {\n              if (ES.SameValueZero(i.key, key)) {\n                return true;\n              }\n            }\n            return false;\n          },\n\n          set: function set(key, value) {\n            requireMapSlot(this, 'set');\n            var head = this._head;\n            var i = head;\n            var entry;\n            var fkey = fastkey(key, true);\n            if (fkey !== null) {\n              // fast O(1) path\n              if (typeof this._storage[fkey] !== 'undefined') {\n                this._storage[fkey].value = value;\n                return this;\n              }\n              entry = this._storage[fkey] = new MapEntry(key, value); /* eslint no-multi-assign: 1 */\n              i = head.prev;\n              // fall through\n\n            } else if (this._map) {\n              // fast object key path\n              if (origMapHas.call(this._map, key)) {\n                origMapGet.call(this._map, key).value = value;\n              } else {\n                entry = new MapEntry(key, value);\n                origMapSet.call(this._map, key, entry);\n                i = head.prev;\n                // fall through\n              }\n            }\n            while ((i = i.next) !== head) {\n              if (ES.SameValueZero(i.key, key)) {\n                i.value = value;\n                return this;\n              }\n            }\n            entry = entry || new MapEntry(key, value);\n            if (ES.SameValue(-0, key)) {\n              entry.key = +0; // coerce -0 to +0 in entry\n            }\n            entry.next = this._head;\n            entry.prev = this._head.prev;\n            entry.prev.next = entry;\n            entry.next.prev = entry;\n            this._size += 1;\n            return this;\n          },\n\n          'delete': function (key) {\n            requireMapSlot(this, 'delete');\n            var head = this._head;\n            var i = head;\n            var fkey = fastkey(key, true);\n            if (fkey !== null) {\n              // fast O(1) path\n              if (typeof this._storage[fkey] === 'undefined') {\n                return false;\n              }\n              i = this._storage[fkey].prev;\n              delete this._storage[fkey];\n              // fall through\n            } else if (this._map) {\n              // fast object key path\n              if (!origMapHas.call(this._map, key)) {\n                return false;\n              }\n              i = origMapGet.call(this._map, key).prev;\n              origMapDelete.call(this._map, key);\n              // fall through\n            }\n            while ((i = i.next) !== head) {\n              if (ES.SameValueZero(i.key, key)) {\n                i.key = empty;\n                i.value = empty;\n                i.prev.next = i.next;\n                i.next.prev = i.prev;\n                this._size -= 1;\n                return true;\n              }\n            }\n            return false;\n          },\n\n          clear: function clear() {\n            /* eslint no-multi-assign: 1 */\n            requireMapSlot(this, 'clear');\n            this._map = OrigMap ? new OrigMap() : null;\n            this._size = 0;\n            this._storage = emptyObject();\n            var head = this._head;\n            var i = head;\n            var p = i.next;\n            while ((i = p) !== head) {\n              i.key = empty;\n              i.value = empty;\n              p = i.next;\n              i.next = i.prev = head;\n            }\n            head.next = head.prev = head;\n          },\n\n          keys: function keys() {\n            requireMapSlot(this, 'keys');\n            return new MapIterator(this, 'key');\n          },\n\n          values: function values() {\n            requireMapSlot(this, 'values');\n            return new MapIterator(this, 'value');\n          },\n\n          entries: function entries() {\n            requireMapSlot(this, 'entries');\n            return new MapIterator(this, 'key+value');\n          },\n\n          forEach: function forEach(callback) {\n            requireMapSlot(this, 'forEach');\n            var context = arguments.length > 1 ? arguments[1] : null;\n            var it = this.entries();\n            for (var entry = it.next(); !entry.done; entry = it.next()) {\n              if (context) {\n                _call(callback, context, entry.value[1], entry.value[0], this);\n              } else {\n                callback(entry.value[1], entry.value[0], this);\n              }\n            }\n          }\n        });\n        addIterator(Map$prototype, Map$prototype.entries);\n\n        return MapShim;\n      }()),\n\n      Set: (function () {\n        var isSet = function isSet(set) {\n          return set._es6set && typeof set._storage !== 'undefined';\n        };\n        var requireSetSlot = function requireSetSlot(set, method) {\n          if (!ES.TypeIsObject(set) || !isSet(set)) {\n            // https://github.com/paulmillr/es6-shim/issues/176\n            throw new TypeError('Set.prototype.' + method + ' called on incompatible receiver ' + ES.ToString(set));\n          }\n        };\n\n        // Creating a Map is expensive.  To speed up the common case of\n        // Sets containing only string or numeric keys, we use an object\n        // as backing storage and lazily create a full Map only when\n        // required.\n        var Set$prototype;\n        var SetShim = function Set() {\n          if (!(this instanceof Set)) {\n            throw new TypeError('Constructor Set requires \"new\"');\n          }\n          if (this && this._es6set) {\n            throw new TypeError('Bad construction');\n          }\n          var set = emulateES6construct(this, Set, Set$prototype, {\n            _es6set: true,\n            '[[SetData]]': null,\n            _storage: emptyObject()\n          });\n          if (!set._es6set) {\n            throw new TypeError('bad set');\n          }\n\n          // Optionally initialize Set from iterable\n          if (arguments.length > 0) {\n            addIterableToSet(Set, set, arguments[0]);\n          }\n          return set;\n        };\n        Set$prototype = SetShim.prototype;\n\n        var decodeKey = function (key) {\n          var k = key;\n          if (k === '^null') {\n            return null;\n          } else if (k === '^undefined') {\n            return void 0;\n          }\n          var first = k.charAt(0);\n          if (first === '$') {\n            return _strSlice(k, 1);\n          } else if (first === 'n') {\n            return +_strSlice(k, 1);\n          } else if (first === 'b') {\n            return k === 'btrue';\n          }\n\n          return +k;\n        };\n        // Switch from the object backing storage to a full Map.\n        var ensureMap = function ensureMap(set) {\n          if (!set['[[SetData]]']) {\n            var m = new collectionShims.Map();\n            set['[[SetData]]'] = m;\n            _forEach(keys(set._storage), function (key) {\n              var k = decodeKey(key);\n              m.set(k, k);\n            });\n            set['[[SetData]]'] = m;\n          }\n          set._storage = null; // free old backing storage\n        };\n\n        Value.getter(SetShim.prototype, 'size', function () {\n          requireSetSlot(this, 'size');\n          if (this._storage) {\n            return keys(this._storage).length;\n          }\n          ensureMap(this);\n          return this['[[SetData]]'].size;\n        });\n\n        defineProperties(SetShim.prototype, {\n          has: function has(key) {\n            requireSetSlot(this, 'has');\n            var fkey;\n            if (this._storage && (fkey = fastkey(key)) !== null) {\n              return !!this._storage[fkey];\n            }\n            ensureMap(this);\n            return this['[[SetData]]'].has(key);\n          },\n\n          add: function add(key) {\n            requireSetSlot(this, 'add');\n            var fkey;\n            if (this._storage && (fkey = fastkey(key)) !== null) {\n              this._storage[fkey] = true;\n              return this;\n            }\n            ensureMap(this);\n            this['[[SetData]]'].set(key, key);\n            return this;\n          },\n\n          'delete': function (key) {\n            requireSetSlot(this, 'delete');\n            var fkey;\n            if (this._storage && (fkey = fastkey(key)) !== null) {\n              var hasFKey = _hasOwnProperty(this._storage, fkey);\n              return (delete this._storage[fkey]) && hasFKey;\n            }\n            ensureMap(this);\n            return this['[[SetData]]']['delete'](key);\n          },\n\n          clear: function clear() {\n            requireSetSlot(this, 'clear');\n            if (this._storage) {\n              this._storage = emptyObject();\n            }\n            if (this['[[SetData]]']) {\n              this['[[SetData]]'].clear();\n            }\n          },\n\n          values: function values() {\n            requireSetSlot(this, 'values');\n            ensureMap(this);\n            return new SetIterator(this['[[SetData]]'].values());\n          },\n\n          entries: function entries() {\n            requireSetSlot(this, 'entries');\n            ensureMap(this);\n            return new SetIterator(this['[[SetData]]'].entries());\n          },\n\n          forEach: function forEach(callback) {\n            requireSetSlot(this, 'forEach');\n            var context = arguments.length > 1 ? arguments[1] : null;\n            var entireSet = this;\n            ensureMap(entireSet);\n            this['[[SetData]]'].forEach(function (value, key) {\n              if (context) {\n                _call(callback, context, key, key, entireSet);\n              } else {\n                callback(key, key, entireSet);\n              }\n            });\n          }\n        });\n        defineProperty(SetShim.prototype, 'keys', SetShim.prototype.values, true);\n        addIterator(SetShim.prototype, SetShim.prototype.values);\n\n        var SetIterator = function SetIterator(it) {\n          defineProperty(this, 'it', it);\n        };\n        SetIterator.prototype = {\n          isSetIterator: true,\n          next: function next() {\n            if (!this.isSetIterator) {\n              throw new TypeError('Not a SetIterator');\n            }\n            return this.it.next();\n          }\n        };\n        addIterator(SetIterator.prototype);\n\n        return SetShim;\n      }())\n    };\n\n    var isGoogleTranslate = globals.Set && !Set.prototype['delete'] && Set.prototype.remove && Set.prototype.items && Set.prototype.map && Array.isArray(new Set().keys);\n    if (isGoogleTranslate) {\n      // special-case force removal of wildly invalid Set implementation in Google Translate iframes\n      // see https://github.com/paulmillr/es6-shim/issues/438 / https://twitter.com/ljharb/status/849335573114363904\n      globals.Set = collectionShims.Set;\n    }\n    if (globals.Map || globals.Set) {\n      // Safari 8, for example, doesn't accept an iterable.\n      var mapAcceptsArguments = valueOrFalseIfThrows(function () { return new Map([[1, 2]]).get(1) === 2; });\n      if (!mapAcceptsArguments) {\n        globals.Map = function Map() {\n          if (!(this instanceof Map)) {\n            throw new TypeError('Constructor Map requires \"new\"');\n          }\n          var m = new OrigMap();\n          if (arguments.length > 0) {\n            addIterableToMap(Map, m, arguments[0]);\n          }\n          delete m.constructor;\n          Object.setPrototypeOf(m, globals.Map.prototype);\n          return m;\n        };\n        globals.Map.prototype = create(OrigMap.prototype);\n        defineProperty(globals.Map.prototype, 'constructor', globals.Map, true);\n        Value.preserveToString(globals.Map, OrigMap);\n      }\n      var testMap = new Map();\n      var mapUsesSameValueZero = (function () {\n        // Chrome 38-42, node 0.11/0.12, iojs 1/2 also have a bug when the Map has a size > 4\n        var m = new Map([[1, 0], [2, 0], [3, 0], [4, 0]]);\n        m.set(-0, m);\n        return m.get(0) === m && m.get(-0) === m && m.has(0) && m.has(-0);\n      }());\n      var mapSupportsChaining = testMap.set(1, 2) === testMap;\n      if (!mapUsesSameValueZero || !mapSupportsChaining) {\n        overrideNative(Map.prototype, 'set', function set(k, v) {\n          _call(origMapSet, this, k === 0 ? 0 : k, v);\n          return this;\n        });\n      }\n      if (!mapUsesSameValueZero) {\n        defineProperties(Map.prototype, {\n          get: function get(k) {\n            return _call(origMapGet, this, k === 0 ? 0 : k);\n          },\n          has: function has(k) {\n            return _call(origMapHas, this, k === 0 ? 0 : k);\n          }\n        }, true);\n        Value.preserveToString(Map.prototype.get, origMapGet);\n        Value.preserveToString(Map.prototype.has, origMapHas);\n      }\n      var testSet = new Set();\n      var setUsesSameValueZero = Set.prototype['delete'] && Set.prototype.add && Set.prototype.has && (function (s) {\n        s['delete'](0);\n        s.add(-0);\n        return !s.has(0);\n      }(testSet));\n      var setSupportsChaining = testSet.add(1) === testSet;\n      if (!setUsesSameValueZero || !setSupportsChaining) {\n        var origSetAdd = Set.prototype.add;\n        Set.prototype.add = function add(v) {\n          _call(origSetAdd, this, v === 0 ? 0 : v);\n          return this;\n        };\n        Value.preserveToString(Set.prototype.add, origSetAdd);\n      }\n      if (!setUsesSameValueZero) {\n        var origSetHas = Set.prototype.has;\n        Set.prototype.has = function has(v) {\n          return _call(origSetHas, this, v === 0 ? 0 : v);\n        };\n        Value.preserveToString(Set.prototype.has, origSetHas);\n        var origSetDel = Set.prototype['delete'];\n        Set.prototype['delete'] = function SetDelete(v) {\n          return _call(origSetDel, this, v === 0 ? 0 : v);\n        };\n        Value.preserveToString(Set.prototype['delete'], origSetDel);\n      }\n      var mapSupportsSubclassing = supportsSubclassing(globals.Map, function (M) {\n        var m = new M([]);\n        // Firefox 32 is ok with the instantiating the subclass but will\n        // throw when the map is used.\n        m.set(42, 42);\n        return m instanceof M;\n      });\n      // without Object.setPrototypeOf, subclassing is not possible\n      var mapFailsToSupportSubclassing = Object.setPrototypeOf && !mapSupportsSubclassing;\n      var mapRequiresNew = (function () {\n        try {\n          return !(globals.Map() instanceof globals.Map);\n        } catch (e) {\n          return e instanceof TypeError;\n        }\n      }());\n      if (globals.Map.length !== 0 || mapFailsToSupportSubclassing || !mapRequiresNew) {\n        globals.Map = function Map() {\n          if (!(this instanceof Map)) {\n            throw new TypeError('Constructor Map requires \"new\"');\n          }\n          var m = new OrigMap();\n          if (arguments.length > 0) {\n            addIterableToMap(Map, m, arguments[0]);\n          }\n          delete m.constructor;\n          Object.setPrototypeOf(m, Map.prototype);\n          return m;\n        };\n        globals.Map.prototype = OrigMap.prototype;\n        defineProperty(globals.Map.prototype, 'constructor', globals.Map, true);\n        Value.preserveToString(globals.Map, OrigMap);\n      }\n      var setSupportsSubclassing = supportsSubclassing(globals.Set, function (S) {\n        var s = new S([]);\n        s.add(42, 42);\n        return s instanceof S;\n      });\n      // without Object.setPrototypeOf, subclassing is not possible\n      var setFailsToSupportSubclassing = Object.setPrototypeOf && !setSupportsSubclassing;\n      var setRequiresNew = (function () {\n        try {\n          return !(globals.Set() instanceof globals.Set);\n        } catch (e) {\n          return e instanceof TypeError;\n        }\n      }());\n      if (globals.Set.length !== 0 || setFailsToSupportSubclassing || !setRequiresNew) {\n        var OrigSet = globals.Set;\n        globals.Set = function Set() {\n          if (!(this instanceof Set)) {\n            throw new TypeError('Constructor Set requires \"new\"');\n          }\n          var s = new OrigSet();\n          if (arguments.length > 0) {\n            addIterableToSet(Set, s, arguments[0]);\n          }\n          delete s.constructor;\n          Object.setPrototypeOf(s, Set.prototype);\n          return s;\n        };\n        globals.Set.prototype = OrigSet.prototype;\n        defineProperty(globals.Set.prototype, 'constructor', globals.Set, true);\n        Value.preserveToString(globals.Set, OrigSet);\n      }\n      var newMap = new globals.Map();\n      var mapIterationThrowsStopIterator = !valueOrFalseIfThrows(function () {\n        return newMap.keys().next().done;\n      });\n      /*\n        - In Firefox < 23, Map#size is a function.\n        - In all current Firefox, Set#entries/keys/values & Map#clear do not exist\n        - https://bugzilla.mozilla.org/show_bug.cgi?id=869996\n        - In Firefox 24, Map and Set do not implement forEach\n        - In Firefox 25 at least, Map and Set are callable without \"new\"\n      */\n      if (\n        typeof globals.Map.prototype.clear !== 'function'\n        || new globals.Set().size !== 0\n        || newMap.size !== 0\n        || typeof globals.Map.prototype.keys !== 'function'\n        || typeof globals.Set.prototype.keys !== 'function'\n        || typeof globals.Map.prototype.forEach !== 'function'\n        || typeof globals.Set.prototype.forEach !== 'function'\n        || isCallableWithoutNew(globals.Map)\n        || isCallableWithoutNew(globals.Set)\n        || typeof newMap.keys().next !== 'function' // Safari 8\n        || mapIterationThrowsStopIterator // Firefox 25\n        || !mapSupportsSubclassing\n      ) {\n        defineProperties(globals, {\n          Map: collectionShims.Map,\n          Set: collectionShims.Set\n        }, true);\n      }\n\n      if (globals.Set.prototype.keys !== globals.Set.prototype.values) {\n        // Fixed in WebKit with https://bugs.webkit.org/show_bug.cgi?id=144190\n        defineProperty(globals.Set.prototype, 'keys', globals.Set.prototype.values, true);\n      }\n\n      // Shim incomplete iterator implementations.\n      addIterator(Object.getPrototypeOf((new globals.Map()).keys()));\n      addIterator(Object.getPrototypeOf((new globals.Set()).keys()));\n\n      if (functionsHaveNames && globals.Set.prototype.has.name !== 'has') {\n        // Microsoft Edge v0.11.10074.0 is missing a name on Set#has\n        var anonymousSetHas = globals.Set.prototype.has;\n        overrideNative(globals.Set.prototype, 'has', function has(key) {\n          return _call(anonymousSetHas, this, key);\n        });\n      }\n    }\n    defineProperties(globals, collectionShims);\n    addDefaultSpecies(globals.Map);\n    addDefaultSpecies(globals.Set);\n  }\n\n  var throwUnlessTargetIsObject = function throwUnlessTargetIsObject(target) {\n    if (!ES.TypeIsObject(target)) {\n      throw new TypeError('target must be an object');\n    }\n  };\n\n  // Some Reflect methods are basically the same as\n  // those on the Object global, except that a TypeError is thrown if\n  // target isn't an object. As well as returning a boolean indicating\n  // the success of the operation.\n  var ReflectShims = {\n    // Apply method in a functional form.\n    apply: function apply() {\n      return ES.Call(ES.Call, null, arguments);\n    },\n\n    // New operator in a functional form.\n    construct: function construct(constructor, args) {\n      if (!ES.IsConstructor(constructor)) {\n        throw new TypeError('First argument must be a constructor.');\n      }\n      var newTarget = arguments.length > 2 ? arguments[2] : constructor;\n      if (!ES.IsConstructor(newTarget)) {\n        throw new TypeError('new.target must be a constructor.');\n      }\n      return ES.Construct(constructor, args, newTarget, 'internal');\n    },\n\n    // When deleting a non-existent or configurable property,\n    // true is returned.\n    // When attempting to delete a non-configurable property,\n    // it will return false.\n    deleteProperty: function deleteProperty(target, key) {\n      throwUnlessTargetIsObject(target);\n      if (supportsDescriptors) {\n        var desc = Object.getOwnPropertyDescriptor(target, key);\n\n        if (desc && !desc.configurable) {\n          return false;\n        }\n      }\n\n      // Will return true.\n      return delete target[key];\n    },\n\n    has: function has(target, key) {\n      throwUnlessTargetIsObject(target);\n      return key in target;\n    }\n  };\n\n  if (Object.getOwnPropertyNames) {\n    Object.assign(ReflectShims, {\n      // Basically the result of calling the internal [[OwnPropertyKeys]].\n      // Concatenating propertyNames and propertySymbols should do the trick.\n      // This should continue to work together with a Symbol shim\n      // which overrides Object.getOwnPropertyNames and implements\n      // Object.getOwnPropertySymbols.\n      ownKeys: function ownKeys(target) {\n        throwUnlessTargetIsObject(target);\n        var keys = Object.getOwnPropertyNames(target);\n\n        if (ES.IsCallable(Object.getOwnPropertySymbols)) {\n          _pushApply(keys, Object.getOwnPropertySymbols(target));\n        }\n\n        return keys;\n      }\n    });\n  }\n\n  var callAndCatchException = function ConvertExceptionToBoolean(func) {\n    return !throwsError(func);\n  };\n\n  if (Object.preventExtensions) {\n    Object.assign(ReflectShims, {\n      isExtensible: function isExtensible(target) {\n        throwUnlessTargetIsObject(target);\n        return Object.isExtensible(target);\n      },\n      preventExtensions: function preventExtensions(target) {\n        throwUnlessTargetIsObject(target);\n        return callAndCatchException(function () {\n          return Object.preventExtensions(target);\n        });\n      }\n    });\n  }\n\n  if (supportsDescriptors) {\n    var internalGet = function get(target, key, receiver) {\n      var desc = Object.getOwnPropertyDescriptor(target, key);\n\n      if (!desc) {\n        var parent = Object.getPrototypeOf(target);\n\n        if (parent === null) {\n          return void 0;\n        }\n\n        return internalGet(parent, key, receiver);\n      }\n\n      if ('value' in desc) {\n        return desc.value;\n      }\n\n      if (desc.get) {\n        return ES.Call(desc.get, receiver);\n      }\n\n      return void 0;\n    };\n\n    var internalSet = function set(target, key, value, receiver) {\n      var desc = Object.getOwnPropertyDescriptor(target, key);\n\n      if (!desc) {\n        var parent = Object.getPrototypeOf(target);\n\n        if (parent !== null) {\n          return internalSet(parent, key, value, receiver);\n        }\n\n        desc = {\n          value: void 0,\n          writable: true,\n          enumerable: true,\n          configurable: true\n        };\n      }\n\n      if ('value' in desc) {\n        if (!desc.writable) {\n          return false;\n        }\n\n        if (!ES.TypeIsObject(receiver)) {\n          return false;\n        }\n\n        var existingDesc = Object.getOwnPropertyDescriptor(receiver, key);\n\n        if (existingDesc) {\n          return Reflect.defineProperty(receiver, key, {\n            value: value\n          });\n        }\n        return Reflect.defineProperty(receiver, key, {\n          value: value,\n          writable: true,\n          enumerable: true,\n          configurable: true\n        });\n\n      }\n\n      if (desc.set) {\n        _call(desc.set, receiver, value);\n        return true;\n      }\n\n      return false;\n    };\n\n    Object.assign(ReflectShims, {\n      defineProperty: function defineProperty(target, propertyKey, attributes) {\n        throwUnlessTargetIsObject(target);\n        return callAndCatchException(function () {\n          return Object.defineProperty(target, propertyKey, attributes);\n        });\n      },\n\n      getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {\n        throwUnlessTargetIsObject(target);\n        return Object.getOwnPropertyDescriptor(target, propertyKey);\n      },\n\n      // Syntax in a functional form.\n      get: function get(target, key) {\n        throwUnlessTargetIsObject(target);\n        var receiver = arguments.length > 2 ? arguments[2] : target;\n\n        return internalGet(target, key, receiver);\n      },\n\n      set: function set(target, key, value) {\n        throwUnlessTargetIsObject(target);\n        var receiver = arguments.length > 3 ? arguments[3] : target;\n\n        return internalSet(target, key, value, receiver);\n      }\n    });\n  }\n\n  if (Object.getPrototypeOf) {\n    var objectDotGetPrototypeOf = Object.getPrototypeOf;\n    ReflectShims.getPrototypeOf = function getPrototypeOf(target) {\n      throwUnlessTargetIsObject(target);\n      return objectDotGetPrototypeOf(target);\n    };\n  }\n\n  if (Object.setPrototypeOf && ReflectShims.getPrototypeOf) {\n    var willCreateCircularPrototype = function (object, lastProto) {\n      var proto = lastProto;\n      while (proto) {\n        if (object === proto) {\n          return true;\n        }\n        proto = ReflectShims.getPrototypeOf(proto);\n      }\n      return false;\n    };\n\n    Object.assign(ReflectShims, {\n      // Sets the prototype of the given object.\n      // Returns true on success, otherwise false.\n      setPrototypeOf: function setPrototypeOf(object, proto) {\n        throwUnlessTargetIsObject(object);\n        if (proto !== null && !ES.TypeIsObject(proto)) {\n          throw new TypeError('proto must be an object or null');\n        }\n\n        // If they already are the same, we're done.\n        if (proto === Reflect.getPrototypeOf(object)) {\n          return true;\n        }\n\n        // Cannot alter prototype if object not extensible.\n        if (Reflect.isExtensible && !Reflect.isExtensible(object)) {\n          return false;\n        }\n\n        // Ensure that we do not create a circular prototype chain.\n        if (willCreateCircularPrototype(object, proto)) {\n          return false;\n        }\n\n        Object.setPrototypeOf(object, proto);\n\n        return true;\n      }\n    });\n  }\n  var defineOrOverrideReflectProperty = function (key, shim) {\n    if (!ES.IsCallable(globals.Reflect[key])) {\n      defineProperty(globals.Reflect, key, shim);\n    } else {\n      var acceptsPrimitives = valueOrFalseIfThrows(function () {\n        globals.Reflect[key](1);\n        globals.Reflect[key](NaN);\n        globals.Reflect[key](true);\n        return true;\n      });\n      if (acceptsPrimitives) {\n        overrideNative(globals.Reflect, key, shim);\n      }\n    }\n  };\n  Object.keys(ReflectShims).forEach(function (key) {\n    defineOrOverrideReflectProperty(key, ReflectShims[key]);\n  });\n  var originalReflectGetProto = globals.Reflect.getPrototypeOf;\n  if (functionsHaveNames && originalReflectGetProto && originalReflectGetProto.name !== 'getPrototypeOf') {\n    overrideNative(globals.Reflect, 'getPrototypeOf', function getPrototypeOf(target) {\n      return _call(originalReflectGetProto, globals.Reflect, target);\n    });\n  }\n  if (globals.Reflect.setPrototypeOf) {\n    if (valueOrFalseIfThrows(function () {\n      globals.Reflect.setPrototypeOf(1, {});\n      return true;\n    })) {\n      overrideNative(globals.Reflect, 'setPrototypeOf', ReflectShims.setPrototypeOf);\n    }\n  }\n  if (globals.Reflect.defineProperty) {\n    if (!valueOrFalseIfThrows(function () {\n      var basic = !globals.Reflect.defineProperty(1, 'test', { value: 1 });\n      // \"extensible\" fails on Edge 0.12\n      var extensible = typeof Object.preventExtensions !== 'function' || !globals.Reflect.defineProperty(Object.preventExtensions({}), 'test', {});\n      return basic && extensible;\n    })) {\n      overrideNative(globals.Reflect, 'defineProperty', ReflectShims.defineProperty);\n    }\n  }\n  if (globals.Reflect.construct) {\n    if (!valueOrFalseIfThrows(function () {\n      var F = function F() {};\n      return globals.Reflect.construct(function () {}, [], F) instanceof F;\n    })) {\n      overrideNative(globals.Reflect, 'construct', ReflectShims.construct);\n    }\n  }\n\n  if (String(new Date(NaN)) !== 'Invalid Date') {\n    var dateToString = Date.prototype.toString;\n    var shimmedDateToString = function toString() {\n      var valueOf = +this;\n      if (valueOf !== valueOf) {\n        return 'Invalid Date';\n      }\n      return ES.Call(dateToString, this);\n    };\n    overrideNative(Date.prototype, 'toString', shimmedDateToString);\n  }\n\n  // Annex B HTML methods\n  // http://www.ecma-international.org/ecma-262/6.0/#sec-additional-properties-of-the-string.prototype-object\n  var stringHTMLshims = {\n    anchor: function anchor(name) { return ES.CreateHTML(this, 'a', 'name', name); },\n    big: function big() { return ES.CreateHTML(this, 'big', '', ''); },\n    blink: function blink() { return ES.CreateHTML(this, 'blink', '', ''); },\n    bold: function bold() { return ES.CreateHTML(this, 'b', '', ''); },\n    fixed: function fixed() { return ES.CreateHTML(this, 'tt', '', ''); },\n    fontcolor: function fontcolor(color) { return ES.CreateHTML(this, 'font', 'color', color); },\n    fontsize: function fontsize(size) { return ES.CreateHTML(this, 'font', 'size', size); },\n    italics: function italics() { return ES.CreateHTML(this, 'i', '', ''); },\n    link: function link(url) { return ES.CreateHTML(this, 'a', 'href', url); },\n    small: function small() { return ES.CreateHTML(this, 'small', '', ''); },\n    strike: function strike() { return ES.CreateHTML(this, 'strike', '', ''); },\n    sub: function sub() { return ES.CreateHTML(this, 'sub', '', ''); },\n    sup: function sub() { return ES.CreateHTML(this, 'sup', '', ''); }\n  };\n  _forEach(Object.keys(stringHTMLshims), function (key) {\n    var method = String.prototype[key];\n    var shouldOverwrite = false;\n    if (ES.IsCallable(method)) {\n      var output = _call(method, '', ' \" ');\n      var quotesCount = _concat([], output.match(/\"/g)).length;\n      shouldOverwrite = output !== output.toLowerCase() || quotesCount > 2;\n    } else {\n      shouldOverwrite = true;\n    }\n    if (shouldOverwrite) {\n      overrideNative(String.prototype, key, stringHTMLshims[key]);\n    }\n  });\n\n  var JSONstringifiesSymbols = (function () {\n    // Microsoft Edge v0.12 stringifies Symbols incorrectly\n    if (!hasSymbols) { return false; } // Symbols are not supported\n    var stringify = typeof JSON === 'object' && typeof JSON.stringify === 'function' ? JSON.stringify : null;\n    if (!stringify) { return false; } // JSON.stringify is not supported\n    if (typeof stringify(Symbol()) !== 'undefined') { return true; } // Symbols should become `undefined`\n    if (stringify([Symbol()]) !== '[null]') { return true; } // Symbols in arrays should become `null`\n    var obj = { a: Symbol() };\n    obj[Symbol()] = true;\n    if (stringify(obj) !== '{}') { return true; } // Symbol-valued keys *and* Symbol-valued properties should be omitted\n    return false;\n  }());\n  var JSONstringifyAcceptsObjectSymbol = valueOrFalseIfThrows(function () {\n    // Chrome 45 throws on stringifying object symbols\n    if (!hasSymbols) { return true; } // Symbols are not supported\n    return JSON.stringify(Object(Symbol())) === '{}' && JSON.stringify([Object(Symbol())]) === '[{}]';\n  });\n  if (JSONstringifiesSymbols || !JSONstringifyAcceptsObjectSymbol) {\n    var origStringify = JSON.stringify;\n    overrideNative(JSON, 'stringify', function stringify(value) {\n      if (typeof value === 'symbol') { return; }\n      var replacer;\n      if (arguments.length > 1) {\n        replacer = arguments[1];\n      }\n      var args = [value];\n      if (!isArray(replacer)) {\n        var replaceFn = ES.IsCallable(replacer) ? replacer : null;\n        var wrappedReplacer = function (key, val) {\n          var parsedValue = replaceFn ? _call(replaceFn, this, key, val) : val;\n          if (typeof parsedValue !== 'symbol') {\n            if (Type.symbol(parsedValue)) {\n              return assignTo({})(parsedValue);\n            }\n            return parsedValue;\n\n          }\n        };\n        args.push(wrappedReplacer);\n      } else {\n        // create wrapped replacer that handles an array replacer?\n        args.push(replacer);\n      }\n      if (arguments.length > 2) {\n        args.push(arguments[2]);\n      }\n      return origStringify.apply(this, args);\n    });\n  }\n\n  return globals;\n}));\n\n\n//# sourceURL=webpack://gomoku/./node_modules/es6-shim/es6-shim.js?");

/***/ }),

/***/ "./node_modules/linq-es5/lib/iterators.js":
/*!************************************************!*\
  !*** ./node_modules/linq-es5/lib/iterators.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\r\n///////////////////////////////////////////////////////////////////////////////\r\n/** Copyright (c) ENikS.  All rights reserved.                               */\r\n//\r\n// Licensed under the Apache License, Version 2.0  ( the  \"License\" );  you may \r\n// not use this file except in compliance with the License.  You may  obtain  a \r\n// copy of the License at\r\n//\r\n//   http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required  by  applicable  law  or  agreed  to  in  writing,  software \r\n// distributed under the License is distributed on an \"AS  IS\"  BASIS,  WITHOUT\r\n// WARRANTIES OR CONDITIONS  OF  ANY  KIND, either express or implied.  See the \r\n// License for the specific  language  governing  permissions  and  limitations \r\n// under the License.\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//-----------------------------------------------------------------------------\r\n//  CSharp Enumerator implementation\r\n//-----------------------------------------------------------------------------\r\n//  Gets Iterator and turns it into CSharpEnumerator \r\nvar CSharpEnumerator = /** @class */ (function () {\r\n    function CSharpEnumerator(sourceIterator) {\r\n        this._iterator = sourceIterator;\r\n    }\r\n    Object.defineProperty(CSharpEnumerator.prototype, \"Current\", {\r\n        /** Gets the current element in the collection. */\r\n        get: function () {\r\n            return this._result.value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** Advances the enumerator to the next element of the collection.*/\r\n    CSharpEnumerator.prototype.MoveNext = function () {\r\n        this._result = this._iterator.next();\r\n        return !this._result.done;\r\n    };\r\n    /** Sets the enumerator to its initial position, which is before the first\r\n    * element in the collection. */\r\n    CSharpEnumerator.prototype.Reset = function () {\r\n        throw \"JavaScript iterators could not be Reset\";\r\n    };\r\n    return CSharpEnumerator;\r\n}());\r\nexports.CSharpEnumerator = CSharpEnumerator;\r\n//-----------------------------------------------------------------------------\r\n//  Iterators implementation\r\n//-----------------------------------------------------------------------------\r\nvar ArrayIterator = /** @class */ (function () {\r\n    function ArrayIterator(_source, _current, _done, _increment) {\r\n        if (_increment === void 0) { _increment = 1; }\r\n        this._source = _source;\r\n        this._current = _current;\r\n        this._done = _done;\r\n        this._increment = _increment;\r\n    }\r\n    ArrayIterator.prototype.next = function (value) {\r\n        var result = { value: this._source[this._current], done: this._done(this._current) };\r\n        this._current += this._increment;\r\n        return result;\r\n    };\r\n    return ArrayIterator;\r\n}());\r\nexports.ArrayIterator = ArrayIterator;\r\nvar IteratorBase = /** @class */ (function () {\r\n    function IteratorBase(_iterator) {\r\n        this._iterator = _iterator;\r\n        this._done = { value: undefined, done: true };\r\n    }\r\n    return IteratorBase;\r\n}());\r\nexports.IteratorBase = IteratorBase;\r\nvar Intersect = /** @class */ (function (_super) {\r\n    __extends(Intersect, _super);\r\n    function Intersect(iterator, _set, _switch, _keySelector) {\r\n        if (_keySelector === void 0) { _keySelector = function (o) { return o; }; }\r\n        var _this = _super.call(this, iterator) || this;\r\n        _this._set = _set;\r\n        _this._switch = _switch;\r\n        _this._keySelector = _keySelector;\r\n        return _this;\r\n    }\r\n    Intersect.prototype.next = function (value) {\r\n        var result;\r\n        while (!(result = this._iterator.next()).done && (this._switch == this._set.has(this._keySelector(result.value)))) { }\r\n        if (!result.done && !this._switch)\r\n            this._set.add(this._keySelector(result.value));\r\n        return result;\r\n    };\r\n    return Intersect;\r\n}(IteratorBase));\r\nexports.Intersect = Intersect;\r\nvar Generator = /** @class */ (function (_super) {\r\n    __extends(Generator, _super);\r\n    function Generator(_current, _count, _increment) {\r\n        if (_increment === void 0) { _increment = false; }\r\n        var _this = _super.call(this, null) || this;\r\n        _this._current = _current;\r\n        _this._count = _count;\r\n        _this._increment = _increment;\r\n        return _this;\r\n    }\r\n    Generator.prototype.next = function (value) {\r\n        var result = (0 < this._count) ? { value: this._current, done: 0 >= this._count-- } : this._done;\r\n        if (this._increment)\r\n            this._current++;\r\n        return result;\r\n    };\r\n    return Generator;\r\n}(IteratorBase));\r\nexports.Generator = Generator;\r\nvar Repeat = /** @class */ (function (_super) {\r\n    __extends(Repeat, _super);\r\n    function Repeat(_current, _count) {\r\n        var _this = _super.call(this, null) || this;\r\n        _this._current = _current;\r\n        _this._count = _count;\r\n        return _this;\r\n    }\r\n    Repeat.prototype.next = function (value) {\r\n        var result = (0 < this._count) ? { value: this._current, done: 0 >= this._count-- } : this._done;\r\n        return result;\r\n    };\r\n    return Repeat;\r\n}(IteratorBase));\r\nexports.Repeat = Repeat;\r\nvar DefaultIfEmpty = /** @class */ (function (_super) {\r\n    __extends(DefaultIfEmpty, _super);\r\n    function DefaultIfEmpty(sourceIterator, _default) {\r\n        var _this = _super.call(this, sourceIterator) || this;\r\n        _this._default = _default;\r\n        return _this;\r\n    }\r\n    DefaultIfEmpty.prototype.next = function (value) {\r\n        return this.check(this._iterator.next());\r\n    };\r\n    DefaultIfEmpty.prototype.check = function (result) {\r\n        if (result.done) {\r\n            result.value = this._default;\r\n        }\r\n        else {\r\n            this.check = function (a) { return a; };\r\n        }\r\n        return result;\r\n    };\r\n    return DefaultIfEmpty;\r\n}(IteratorBase));\r\nexports.DefaultIfEmpty = DefaultIfEmpty;\r\nvar ChunkBy = /** @class */ (function (_super) {\r\n    __extends(ChunkBy, _super);\r\n    function ChunkBy(target, keySelect, elementSelector, resultSelector) {\r\n        var _this = _super.call(this, target) || this;\r\n        _this.keySelect = keySelect;\r\n        _this.elementSelector = elementSelector;\r\n        _this.resultSelector = resultSelector;\r\n        _this.index = 0;\r\n        return _this;\r\n    }\r\n    ;\r\n    ChunkBy.prototype.next = function (value) {\r\n        var result;\r\n        do {\r\n            result = this._iterator.next();\r\n            if (result.done) {\r\n                if (this.box) {\r\n                    result.done = false;\r\n                    result.value = this.box;\r\n                    this.box = undefined;\r\n                    return result;\r\n                }\r\n                else\r\n                    return this._done;\r\n            }\r\n            var newKey = this.keySelect(result.value, this.index++);\r\n            if (this.key !== newKey && this.box) {\r\n                var ret = { done: false, value: this.resultSelector(this.key, this.box) };\r\n                this.key = newKey;\r\n                this.box = new Array();\r\n                this.box.push(this.elementSelector(result.value));\r\n                return ret;\r\n            }\r\n            if (!this.box) {\r\n                this.box = new Array();\r\n            }\r\n            this.key = newKey;\r\n            this.box.push(this.elementSelector(result.value));\r\n        } while (!result.done);\r\n        return this._done;\r\n    };\r\n    return ChunkBy;\r\n}(IteratorBase));\r\nexports.ChunkBy = ChunkBy;\r\nvar OfType = /** @class */ (function (_super) {\r\n    __extends(OfType, _super);\r\n    function OfType(target, obj) {\r\n        var _this = _super.call(this, target) || this;\r\n        _this.obj = obj;\r\n        return _this;\r\n    }\r\n    OfType.prototype.next = function (value) {\r\n        var result;\r\n        do {\r\n            result = this._iterator.next();\r\n        } while (!result.done && !(result.value instanceof this.obj));\r\n        return result;\r\n    };\r\n    return OfType;\r\n}(IteratorBase));\r\nexports.OfType = OfType;\r\nvar OfValueType = /** @class */ (function (_super) {\r\n    __extends(OfValueType, _super);\r\n    function OfValueType(target, obj, typeName) {\r\n        var _this = _super.call(this, target, obj) || this;\r\n        _this.typeName = typeName;\r\n        return _this;\r\n    }\r\n    OfValueType.prototype.next = function (value) {\r\n        var result;\r\n        do {\r\n            result = this._iterator.next();\r\n        } while (!result.done &&\r\n            this.typeName !== typeof (result.value) &&\r\n            !(result.value instanceof this.obj));\r\n        return result;\r\n    };\r\n    return OfValueType;\r\n}(OfType));\r\nexports.OfValueType = OfValueType;\r\nvar MethodIteratror = /** @class */ (function (_super) {\r\n    __extends(MethodIteratror, _super);\r\n    function MethodIteratror(iterator, _method, _index) {\r\n        if (_method === void 0) { _method = null; }\r\n        if (_index === void 0) { _index = 0; }\r\n        var _this = _super.call(this, iterator) || this;\r\n        _this._method = _method;\r\n        _this._index = _index;\r\n        return _this;\r\n    }\r\n    return MethodIteratror;\r\n}(IteratorBase));\r\nexports.MethodIteratror = MethodIteratror;\r\nvar Distinct = /** @class */ (function (_super) {\r\n    __extends(Distinct, _super);\r\n    function Distinct() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._set = new Set();\r\n        return _this;\r\n    }\r\n    Distinct.prototype.next = function (value) {\r\n        var result, key;\r\n        while (!(result = this._iterator.next()).done) {\r\n            key = this._method(result.value);\r\n            if (!this._set.has(key))\r\n                break;\r\n        }\r\n        this._set.add(key);\r\n        return result;\r\n    };\r\n    return Distinct;\r\n}(MethodIteratror));\r\nexports.Distinct = Distinct;\r\nvar Where = /** @class */ (function (_super) {\r\n    __extends(Where, _super);\r\n    function Where() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Where.prototype.next = function (value) {\r\n        var result;\r\n        do {\r\n            result = this._iterator.next();\r\n        } while (!result.done && !this._method(result.value, this._index++));\r\n        return result;\r\n    };\r\n    return Where;\r\n}(MethodIteratror));\r\nexports.Where = Where;\r\nvar Skip = /** @class */ (function (_super) {\r\n    __extends(Skip, _super);\r\n    function Skip() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._hasSkipped = false;\r\n        return _this;\r\n    }\r\n    Skip.prototype.next = function (value) {\r\n        var result;\r\n        if (this._hasSkipped)\r\n            return this._iterator.next();\r\n        while (!(result = this._iterator.next()).done && this._method(result.value, this._index++)) { }\r\n        this._hasSkipped = true;\r\n        return result;\r\n    };\r\n    return Skip;\r\n}(MethodIteratror));\r\nexports.Skip = Skip;\r\nvar Take = /** @class */ (function (_super) {\r\n    __extends(Take, _super);\r\n    function Take() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Take.prototype.next = function (value) {\r\n        var result = this._iterator.next();\r\n        if (result.done || !this._method(result.value, this._index++)) {\r\n            return this._done;\r\n        }\r\n        return result;\r\n    };\r\n    return Take;\r\n}(MethodIteratror));\r\nexports.Take = Take;\r\nvar Zip = /** @class */ (function (_super) {\r\n    __extends(Zip, _super);\r\n    function Zip(first, _second, func) {\r\n        var _this = _super.call(this, first, func) || this;\r\n        _this._second = _second;\r\n        return _this;\r\n    }\r\n    Zip.prototype.next = function (value) {\r\n        var first = this._iterator.next();\r\n        var second = this._second.next();\r\n        if (first.done || second.done) {\r\n            return this._done;\r\n        }\r\n        return { done: false, value: this._method(first.value, second.value) };\r\n    };\r\n    return Zip;\r\n}(MethodIteratror));\r\nexports.Zip = Zip;\r\nvar Select = /** @class */ (function (_super) {\r\n    __extends(Select, _super);\r\n    function Select() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Select.prototype.next = function (value) {\r\n        var result = this._iterator.next();\r\n        if (result.done)\r\n            return result;\r\n        result.value = this._method(result.value, this._index++);\r\n        return result;\r\n    };\r\n    return Select;\r\n}(MethodIteratror));\r\nexports.Select = Select;\r\nvar SelectMany = /** @class */ (function (_super) {\r\n    __extends(SelectMany, _super);\r\n    function SelectMany(sourceIterator, selector, transform) {\r\n        if (transform === void 0) { transform = function (t, s) { return s; }; }\r\n        var _this = _super.call(this, sourceIterator, selector) || this;\r\n        _this._collectionState = _this._done;\r\n        _this._resultState = _this._done;\r\n        _this._resultSelector = transform;\r\n        return _this;\r\n    }\r\n    SelectMany.prototype.next = function (value) {\r\n        do {\r\n            if (this._resultState.done) {\r\n                this._collectionState = this._iterator.next();\r\n                if (this._collectionState.done)\r\n                    return this._done;\r\n                this._collection = this._method(this._collectionState.value, this._index++)[Symbol.iterator]();\r\n            }\r\n            this._resultState = this._collection.next();\r\n            if (!this._resultState.done) {\r\n                this._resultState.value = this._resultSelector(this._collectionState.value, this._resultState.value);\r\n            }\r\n        } while (this._resultState.done);\r\n        return this._resultState;\r\n    };\r\n    return SelectMany;\r\n}(MethodIteratror));\r\nexports.SelectMany = SelectMany;\r\nvar Join = /** @class */ (function (_super) {\r\n    __extends(Join, _super);\r\n    function Join(outer, inner, oKeySelect, iKeySelect, transform) {\r\n        var _this = _super.call(this, outer, null) || this;\r\n        _this._method = oKeySelect;\r\n        var result;\r\n        _this._map = new Map();\r\n        while (!(result = inner.next()).done) {\r\n            var key = iKeySelect(result.value);\r\n            var group = _this._map.get(key);\r\n            if ('undefined' === typeof group) {\r\n                group = [];\r\n                _this._map.set(key, group);\r\n            }\r\n            group.push(result.value);\r\n        }\r\n        _this._resultSelector = transform;\r\n        return _this;\r\n    }\r\n    Join.prototype.next = function (value) {\r\n        do {\r\n            if (this._resultState.done) {\r\n                this._collectionState = this._iterator.next();\r\n                if (this._collectionState.done)\r\n                    return this._done;\r\n                var key = this._method(this._collectionState.value);\r\n                var innerSet = this._map.get(key);\r\n                if ('undefined' === typeof innerSet)\r\n                    continue;\r\n                this._collection = innerSet[Symbol.iterator]();\r\n            }\r\n            this._resultState = this._collection.next();\r\n            if (!this._resultState.done) {\r\n                this._resultState.value = this._resultSelector(this._collectionState.value, this._resultState.value);\r\n            }\r\n        } while (this._resultState.done);\r\n        return this._resultState;\r\n    };\r\n    return Join;\r\n}(SelectMany));\r\nexports.Join = Join;\r\nvar Union = /** @class */ (function (_super) {\r\n    __extends(Union, _super);\r\n    function Union(sourceIterator, _keySelector) {\r\n        var _this = _super.call(this, sourceIterator, function (o) { return o; }) || this;\r\n        _this._keySelector = _keySelector;\r\n        _this._set = new Set();\r\n        return _this;\r\n    }\r\n    Union.prototype.next = function (value) {\r\n        var result, key;\r\n        while (!(result = _super.prototype.next.call(this)).done) {\r\n            key = this._keySelector(result.value);\r\n            if (!this._set.has(key))\r\n                break;\r\n        }\r\n        this._set.add(key);\r\n        return result;\r\n    };\r\n    return Union;\r\n}(SelectMany));\r\nexports.Union = Union;\r\nvar GroupBy = /** @class */ (function (_super) {\r\n    __extends(GroupBy, _super);\r\n    function GroupBy(iterator, resultSelect, _map) {\r\n        var _this = _super.call(this, iterator, resultSelect) || this;\r\n        _this._map = _map;\r\n        return _this;\r\n    }\r\n    GroupBy.prototype.next = function (value) {\r\n        var result = this._iterator.next();\r\n        if (result.done)\r\n            return this._done;\r\n        var iterable = this._map.get(result.value);\r\n        return { value: this._method(result.value, iterable), done: false };\r\n    };\r\n    return GroupBy;\r\n}(MethodIteratror));\r\nexports.GroupBy = GroupBy;\r\nvar GroupJoin = /** @class */ (function (_super) {\r\n    __extends(GroupJoin, _super);\r\n    function GroupJoin(iterator, oKeySelect, _transform, _map) {\r\n        var _this = _super.call(this, iterator, oKeySelect) || this;\r\n        _this._transform = _transform;\r\n        _this._map = _map;\r\n        return _this;\r\n    }\r\n    GroupJoin.prototype.next = function (value) {\r\n        var innerSet;\r\n        var result;\r\n        result = this._iterator.next();\r\n        if (result.done)\r\n            return this._done;\r\n        var key = this._method(result.value);\r\n        innerSet = this._map.get(key);\r\n        return { value: this._transform(result.value, innerSet), done: false };\r\n    };\r\n    return GroupJoin;\r\n}(MethodIteratror));\r\nexports.GroupJoin = GroupJoin;\r\n//# sourceMappingURL=iterators.js.map\n\n//# sourceURL=webpack://gomoku/./node_modules/linq-es5/lib/iterators.js?");

/***/ }),

/***/ "./node_modules/linq-es5/lib/linq.js":
/*!*******************************************!*\
  !*** ./node_modules/linq-es5/lib/linq.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\n///////////////////////////////////////////////////////////////////////////////\r\n/** Copyright (c) ENikS.  All rights reserved.                               */\r\n//\r\n// Licensed under the Apache License, Version 2.0  ( the  \"License\" );  you may \r\n// not use this file except in compliance with the License.  You may  obtain  a \r\n// copy of the License at\r\n//\r\n//   http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required  by  applicable  law  or  agreed  to  in  writing,  software \r\n// distributed under the License is distributed on an \"AS  IS\"  BASIS,  WITHOUT\r\n// WARRANTIES OR CONDITIONS  OF  ANY  KIND, either express or implied.  See the \r\n// License for the specific  language  governing  permissions  and  limitations \r\n// under the License.\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__webpack_require__(/*! es6-shim */ \"./node_modules/es6-shim/es6-shim.js\");\r\nvar Iterator = __webpack_require__(/*! ./iterators */ \"./node_modules/linq-es5/lib/iterators.js\");\r\nvar Constant = __webpack_require__(/*! ./utilities */ \"./node_modules/linq-es5/lib/utilities.js\");\r\n/**\r\n* Converts any Iterable<T> object into LINQ-able object\r\n* @param TSource An Array, Map, Set, String or other Iterable object.\r\n* @example\r\n*     import {asEnumerable} from \"linq-ts\";\r\n*\r\n*     var enumerable = asEnumerable([0, 1, 2, 3, 4, 5, 6, 7]).Take(3);\r\n*     var sum = enumerable.Sum();\r\n*\r\n*/\r\nfunction getEnumerable(TSource) {\r\n    if (TSource === void 0) { TSource = null; }\r\n    return new EnumerableImpl(TSource);\r\n}\r\nexports[\"default\"] = getEnumerable;\r\nexports.AsEnumerable = getEnumerable;\r\nexports.asEnumerable = getEnumerable;\r\nexports.From = getEnumerable;\r\nexports.from = getEnumerable;\r\n/**\r\n* Generates <count> of <T> elements starting with <start>. T is any\r\n* type which could be cast to number: number, enum, etc.\r\n* @param start First value in sequence.\r\n* @param count Number of elements to iteratel.\r\n* @example\r\n*     var sum = Range(0, 7).Sum();\r\n*/\r\nfunction getRange(start, count) {\r\n    return new EnumerableImpl(null, function () { return new Iterator.Generator(start, count, true); });\r\n}\r\nexports.Range = getRange;\r\nexports.range = getRange;\r\n/**\r\n* Repeat element <start> of type T <count> of times.\r\n* @param start First value in sequence.\r\n* @param count Number of elements to iteratel.\r\n* @example\r\n*     var sum = Repeat(\"v\", 7);\r\n*/\r\nfunction getRepeat(start, count) {\r\n    return new EnumerableImpl(null, function () { return new Iterator.Generator(start, count); });\r\n}\r\nexports.Repeat = getRepeat;\r\nexports.repeat = getRepeat;\r\n//-----------------------------------------------------------------------------\r\n//  Enumerable Implementation\r\n//-----------------------------------------------------------------------------\r\nvar EnumerableImpl = /** @class */ (function () {\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    function EnumerableImpl(target, factory, arg) {\r\n        this._target = target;\r\n        this._factory = factory;\r\n        this._factoryArg = arg;\r\n        // JavaScript naming convention\r\n        this['aggregate'] = this.Aggregate;\r\n        this['all'] = this.All;\r\n        this['any'] = this.Any;\r\n        this['average'] = this.Average;\r\n        this['contains'] = this.Contains;\r\n        this['count'] = this.Count;\r\n        this['max'] = this.Max;\r\n        this['min'] = this.Min;\r\n        this['elementAt'] = this.ElementAt;\r\n        this['elementAtOrDefault'] = this.ElementAtOrDefault;\r\n        this['first'] = this.First;\r\n        this['firstOrDefault'] = this.FirstOrDefault;\r\n        this['last'] = this.Last;\r\n        this['lastOrDefault'] = this.LastOrDefault;\r\n        this['sequenceEqual'] = this.SequenceEqual;\r\n        this['single'] = this.Single;\r\n        this['singleOrDefault'] = this.SingleOrDefault;\r\n        this['sum'] = this.Sum;\r\n        this['toArray'] = this.ToArray;\r\n        this['toMap'] = this.ToMap;\r\n        this['toDictionary'] = this.ToDictionary;\r\n        this['defaultIfEmpty'] = this.DefaultIfEmpty;\r\n        this['concat'] = this.Concat;\r\n        this['distinct'] = this.Distinct;\r\n        this['except'] = this.Except;\r\n        this['groupBy'] = this.GroupBy;\r\n        this['groupJoin'] = this.GroupJoin;\r\n        this['intersect'] = this.Intersect;\r\n        this['ofType'] = this.OfType;\r\n        this['join'] = this.Join;\r\n        this['orderBy'] = this.OrderBy;\r\n        this['orderByDescend'] = this.OrderByDescending;\r\n        this['range'] = this.Range;\r\n        this['repeat'] = this.Repeat;\r\n        this['reverse'] = this.Reverse;\r\n        this['select'] = this.Select;\r\n        this['selectMany'] = this.SelectMany;\r\n        this['skip'] = this.Skip;\r\n        this['skipWhile'] = this.SkipWhile;\r\n        this['take'] = this.Take;\r\n        this['takeWhile'] = this.TakeWhile;\r\n        this['union'] = this.Union;\r\n        this['where'] = this.Where;\r\n        this['zip'] = this.Zip;\r\n    }\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    /** Returns JavaScript iterator */\r\n    EnumerableImpl.prototype[Symbol.iterator] = function () {\r\n        return (this._factory) ? this._factory(this._factoryArg)\r\n            : (null != this._target) ? this._target[Symbol.iterator]()\r\n                : { next: function () { return { done: true, value: undefined }; } };\r\n    };\r\n    /** Returns C# style enumerator */\r\n    EnumerableImpl.prototype.GetEnumerator = function () {\r\n        return new Iterator.CSharpEnumerator(this[Symbol.iterator]());\r\n    };\r\n    EnumerableImpl.prototype.Aggregate = function (alpha, beta, gamma) {\r\n        if (beta === void 0) { beta = Constant.selfFn; }\r\n        if (gamma === void 0) { gamma = Constant.selfFn; }\r\n        var zero;\r\n        var method;\r\n        var selector;\r\n        if (\"function\" === typeof alpha) {\r\n            method = alpha;\r\n            selector = beta;\r\n        }\r\n        else {\r\n            zero = alpha;\r\n            method = beta;\r\n            selector = gamma;\r\n        }\r\n        var result = zero;\r\n        var res, iterator = this[Symbol.iterator]();\r\n        while (!(res = iterator.next()).done) {\r\n            if (!result)\r\n                result = Constant.getDefaultVal(typeof (res.value));\r\n            result = method(result, res.value);\r\n        }\r\n        return selector(result);\r\n    };\r\n    EnumerableImpl.prototype.All = function (predicate) {\r\n        if (predicate === void 0) { predicate = Constant.trueFn; }\r\n        var result, iterator = this[Symbol.iterator]();\r\n        while (!(result = iterator.next()).done) {\r\n            if (!predicate(result.value)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    EnumerableImpl.prototype.Any = function (predicate) {\r\n        var result, iterator = this[Symbol.iterator]();\r\n        // Check if at least one exist\r\n        if (null == predicate) {\r\n            return !iterator.next().done;\r\n        }\r\n        // Check if any satisfy the criteria\r\n        while (!(result = iterator.next()).done) {\r\n            if (predicate(result.value)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    EnumerableImpl.prototype.Average = function (func) {\r\n        if (func === void 0) { func = Constant.selfFn; }\r\n        var result, sum = 0, count = 0;\r\n        var iterator = this[Symbol.iterator]();\r\n        while (!(result = iterator.next()).done) {\r\n            sum += func(result.value);\r\n            count++;\r\n        }\r\n        return sum / count;\r\n    };\r\n    EnumerableImpl.prototype.Contains = function (value, equal) {\r\n        if (equal === void 0) { equal = function (a, b) { return a === b; }; }\r\n        var result, iterator = this[Symbol.iterator]();\r\n        while (!(result = iterator.next()).done) {\r\n            if (equal(value, result.value)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    EnumerableImpl.prototype.Count = function (predicate) {\r\n        if (predicate === void 0) { predicate = Constant.trueFn; }\r\n        var result, count = 0;\r\n        var iterator = this[Symbol.iterator]();\r\n        while (!(result = iterator.next()).done) {\r\n            if (predicate(result.value)) {\r\n                count++;\r\n            }\r\n        }\r\n        return count;\r\n    };\r\n    EnumerableImpl.prototype.Max = function (transform) {\r\n        if (transform === void 0) { transform = Constant.selfFn; }\r\n        var result, value, max, hasValue = false;\r\n        var iterator = this[Symbol.iterator]();\r\n        while (!(result = iterator.next()).done) {\r\n            value = transform(result.value);\r\n            if (hasValue) {\r\n                if (max < value)\r\n                    max = value;\r\n            }\r\n            else {\r\n                max = value;\r\n                hasValue = true;\r\n            }\r\n        }\r\n        if (!hasValue)\r\n            throw Constant.CONST_NO_ELEMENTS;\r\n        return max;\r\n    };\r\n    EnumerableImpl.prototype.Min = function (transform) {\r\n        if (transform === void 0) { transform = Constant.selfFn; }\r\n        var result, value, min, hasValue = false;\r\n        var iterator = this[Symbol.iterator]();\r\n        while (!(result = iterator.next()).done) {\r\n            value = transform(result.value);\r\n            if (hasValue) {\r\n                if (min > value)\r\n                    min = value;\r\n            }\r\n            else {\r\n                min = value;\r\n                hasValue = true;\r\n            }\r\n        }\r\n        if (!hasValue)\r\n            throw Constant.CONST_NO_ELEMENTS;\r\n        return min;\r\n    };\r\n    EnumerableImpl.prototype.ElementAt = function (index) {\r\n        var result, count = 0;\r\n        var iterator = this[Symbol.iterator]();\r\n        while (!(result = iterator.next()).done) {\r\n            if (index === count++) {\r\n                return result.value;\r\n            }\r\n        }\r\n        throw \"Argument Out Of Range\";\r\n    };\r\n    EnumerableImpl.prototype.ElementAtOrDefault = function (index) {\r\n        var result, value, count = 0;\r\n        var iterator = this[Symbol.iterator]();\r\n        while (!(result = iterator.next()).done) {\r\n            if (index === count++) {\r\n                return result.value;\r\n            }\r\n            value = result.value;\r\n        }\r\n        return Constant.getDefaultVal(typeof value, value); // Last good value\r\n    };\r\n    EnumerableImpl.prototype.First = function (predicate) {\r\n        if (predicate === void 0) { predicate = Constant.trueFn; }\r\n        var result;\r\n        var iterator = this[Symbol.iterator]();\r\n        while (!(result = iterator.next()).done) {\r\n            if (predicate(result.value)) {\r\n                return result.value;\r\n            }\r\n        }\r\n        throw Constant.CONST_NOTHING_FOUND;\r\n    };\r\n    EnumerableImpl.prototype.FirstOrDefault = function (predicate) {\r\n        if (predicate === void 0) { predicate = Constant.trueFn; }\r\n        var result, value;\r\n        var iterator = this[Symbol.iterator]();\r\n        while (!(result = iterator.next()).done) {\r\n            value = result.value;\r\n            if (predicate(value)) {\r\n                return result.value;\r\n            }\r\n        }\r\n        return Constant.getDefaultVal(typeof value); // Last good value\r\n    };\r\n    EnumerableImpl.prototype.Last = function (predicate) {\r\n        if (predicate === void 0) { predicate = Constant.trueFn; }\r\n        var result, value, found = false;\r\n        var iterator = this[Symbol.iterator]();\r\n        while (!(result = iterator.next()).done) {\r\n            if (predicate(result.value)) {\r\n                value = result.value;\r\n                found = true;\r\n            }\r\n        }\r\n        if (!found) {\r\n            throw Constant.CONST_NOTHING_FOUND;\r\n        }\r\n        return value;\r\n    };\r\n    EnumerableImpl.prototype.LastOrDefault = function (predicate) {\r\n        if (predicate === void 0) { predicate = Constant.trueFn; }\r\n        var result, value, lastKnown, found = false;\r\n        var iterator = this[Symbol.iterator]();\r\n        while (!(result = iterator.next()).done) {\r\n            if (predicate(result.value)) {\r\n                value = result.value;\r\n                found = true;\r\n            }\r\n            lastKnown = result.value;\r\n        }\r\n        return (found) ? value : Constant.getDefaultVal(typeof lastKnown);\r\n    };\r\n    EnumerableImpl.prototype.SequenceEqual = function (other, equal) {\r\n        if (equal === void 0) { equal = function (a, b) { return a === b; }; }\r\n        var res1, res2;\r\n        var it1 = this[Symbol.iterator]();\r\n        var it2 = other[Symbol.iterator]();\r\n        do {\r\n            res1 = it1.next();\r\n            res2 = it2.next();\r\n            if (res1.done && res2.done)\r\n                return true;\r\n            if ((res1.done != res2.done) || !equal(res1.value, res2.value)) {\r\n                return false;\r\n            }\r\n        } while (true);\r\n    };\r\n    EnumerableImpl.prototype.Single = function (predicate) {\r\n        if (predicate === void 0) { predicate = Constant.trueFn; }\r\n        var value, hasValue = false;\r\n        var result, iterator = this[Symbol.iterator]();\r\n        while (!(result = iterator.next()).done) {\r\n            if (predicate(result.value)) {\r\n                if (!hasValue) {\r\n                    value = result.value;\r\n                    hasValue = true;\r\n                }\r\n                else {\r\n                    throw Constant.CONST_TOO_MANY;\r\n                }\r\n            }\r\n        }\r\n        if (hasValue)\r\n            return value;\r\n        throw Constant.CONST_NOTHING_FOUND;\r\n    };\r\n    EnumerableImpl.prototype.SingleOrDefault = function (predicate) {\r\n        if (predicate === void 0) { predicate = Constant.trueFn; }\r\n        var value, lastKnown, hasValue = false;\r\n        var result, iterator = this[Symbol.iterator]();\r\n        while (!(result = iterator.next()).done) {\r\n            if (predicate(result.value)) {\r\n                if (!hasValue) {\r\n                    value = result.value;\r\n                    hasValue = true;\r\n                }\r\n                else {\r\n                    throw Constant.CONST_TOO_MANY;\r\n                }\r\n            }\r\n            lastKnown = result.value;\r\n        }\r\n        return (hasValue) ? value : Constant.getDefaultVal(typeof lastKnown);\r\n    };\r\n    EnumerableImpl.prototype.Sum = function (transform) {\r\n        if (transform === void 0) { transform = Constant.selfFn; }\r\n        var result, sum = 0;\r\n        var iterator = this[Symbol.iterator]();\r\n        while (!(result = iterator.next()).done) {\r\n            sum += transform(result.value);\r\n        }\r\n        return sum;\r\n    };\r\n    EnumerableImpl.prototype.ToArray = function () {\r\n        var result, array = [];\r\n        var iterator = this[Symbol.iterator]();\r\n        while (!(result = iterator.next()).done) {\r\n            array.push(result.value);\r\n        }\r\n        return array;\r\n    };\r\n    EnumerableImpl.prototype.ToMap = function (keySelector, elementSelector) {\r\n        if (elementSelector === void 0) { elementSelector = Constant.selfFn; }\r\n        var dictionary = new Map();\r\n        var result, iterator = this[Symbol.iterator]();\r\n        while (!(result = iterator.next()).done) {\r\n            dictionary.set(keySelector(result.value), elementSelector(result.value));\r\n        }\r\n        return dictionary;\r\n    };\r\n    EnumerableImpl.prototype.ToDictionary = function (keySelector, elementSelector) {\r\n        if (elementSelector === void 0) { elementSelector = Constant.selfFn; }\r\n        var dictionary = new Map();\r\n        var result, iterator = this[Symbol.iterator]();\r\n        while (!(result = iterator.next()).done) {\r\n            dictionary.set(keySelector(result.value), elementSelector(result.value));\r\n        }\r\n        return dictionary;\r\n    };\r\n    //-------------------------------------------------------------------------\r\n    //  Deferred execution methods\r\n    //-------------------------------------------------------------------------\r\n    EnumerableImpl.prototype.DefaultIfEmpty = function (defaultValue) {\r\n        var _this = this;\r\n        if (defaultValue === void 0) { defaultValue = undefined; }\r\n        return new EnumerableImpl(this, function () { return new Iterator.DefaultIfEmpty(_this[Symbol.iterator](), defaultValue); });\r\n    };\r\n    EnumerableImpl.prototype.Cast = function () {\r\n        return this; // TODO: Remove any once TypeScript 2.0 out\r\n    };\r\n    EnumerableImpl.prototype.Concat = function (second) {\r\n        var aggregate = [this, second];\r\n        return new EnumerableImpl(this, function () { return new Iterator.SelectMany(aggregate[Symbol.iterator](), Constant.selfFn); });\r\n    };\r\n    EnumerableImpl.prototype.ChunkBy = function (keySelect, elementSelector, resultSelector) {\r\n        var _this = this;\r\n        if (elementSelector === void 0) { elementSelector = Constant.selfFn; }\r\n        if (resultSelector === void 0) { resultSelector = function (a, b) { return b; }; }\r\n        return new EnumerableImpl(this, function () { return new Iterator.ChunkBy(_this[Symbol.iterator](), keySelect, elementSelector, resultSelector); });\r\n    };\r\n    EnumerableImpl.prototype.Distinct = function (keySelector) {\r\n        var _this = this;\r\n        if (keySelector === void 0) { keySelector = Constant.selfFn; }\r\n        return new EnumerableImpl(this, function () { return new Iterator.Distinct(_this[Symbol.iterator](), keySelector); });\r\n    };\r\n    EnumerableImpl.prototype.Except = function (other, keySelector) {\r\n        var _this = this;\r\n        return new EnumerableImpl(this, function () { return new Iterator.Intersect(_this[Symbol.iterator](), Constant.getKeys(other, keySelector), true, keySelector); });\r\n    };\r\n    EnumerableImpl.prototype.GroupBy = function (selKey, selElement, selResult) {\r\n        if (selElement === void 0) { selElement = Constant.selfFn; }\r\n        if (selResult === void 0) { selResult = Constant.defGrouping; }\r\n        var result;\r\n        var iterator = this[Symbol.iterator]();\r\n        var _map = new Map();\r\n        while (!(result = iterator.next()).done) {\r\n            var key = selKey(result.value);\r\n            var group = _map.get(key);\r\n            if ('undefined' === typeof group) {\r\n                group = [];\r\n                _map.set(key, group);\r\n            }\r\n            group.push(selElement(result.value));\r\n        }\r\n        var factory = function () { return new Iterator.GroupBy(_map.keys(), selResult, _map); };\r\n        var tst = factory();\r\n        return new EnumerableImpl(this, function () { return new Iterator.GroupBy(_map.keys(), selResult, _map); });\r\n    };\r\n    EnumerableImpl.prototype.GroupJoin = function (inner, oKeySelect, iKeySelect, resultSelector) {\r\n        var _this = this;\r\n        if (resultSelector === void 0) { resultSelector = Constant.defGrouping; }\r\n        var _map = new Map();\r\n        var _inner = inner[Symbol.iterator]();\r\n        var result;\r\n        while (!(result = _inner.next()).done) {\r\n            var key = iKeySelect(result.value);\r\n            if ('undefined' === typeof key)\r\n                throw \"Inner Key selector returned undefined Key\";\r\n            var group = _map.get(key);\r\n            if ('undefined' === typeof group) {\r\n                group = [];\r\n                _map.set(key, group);\r\n            }\r\n            group.push(result.value);\r\n        }\r\n        return new EnumerableImpl(this, function () { return new Iterator.GroupJoin(_this[Symbol.iterator](), oKeySelect, resultSelector, _map); });\r\n    };\r\n    EnumerableImpl.prototype.Intersect = function (other, kesSelector) {\r\n        var _this = this;\r\n        return new EnumerableImpl(this, function () { return new Iterator.Intersect(_this[Symbol.iterator](), Constant.getKeys(other, kesSelector), false, kesSelector); });\r\n    };\r\n    EnumerableImpl.prototype.Join = function (inner, oSelector, iSelector, transform) {\r\n        var _this = this;\r\n        return new EnumerableImpl(this, function () { return new Iterator.Join(_this[Symbol.iterator](), inner[Symbol.iterator](), oSelector, iSelector, transform); });\r\n    };\r\n    EnumerableImpl.prototype.OfType = function (obj) {\r\n        var _this = this;\r\n        var typeName;\r\n        switch (obj) {\r\n            case Number:\r\n                return new EnumerableImpl(this, function () { return new Iterator.OfValueType(_this[Symbol.iterator](), obj, Constant.CONST_NUMBER); });\r\n            case Boolean:\r\n                return new EnumerableImpl(this, function () { return new Iterator.OfValueType(_this[Symbol.iterator](), obj, Constant.CONST_BOOLEAN); });\r\n            case String:\r\n                return new EnumerableImpl(this, function () { return new Iterator.OfValueType(_this[Symbol.iterator](), obj, Constant.CONST_STRING); });\r\n            case Symbol:\r\n                return new EnumerableImpl(this, function () { return new Iterator.OfValueType(_this[Symbol.iterator](), obj, Constant.CONST_SYMBOL); });\r\n        }\r\n        return new EnumerableImpl(this, function () { return new Iterator.OfType(_this[Symbol.iterator](), obj); });\r\n    };\r\n    EnumerableImpl.prototype.OrderBy = function (keySelect, equal) {\r\n        var comparer = equal ? equal : Constant.defCompare;\r\n        var compare = !keySelect && !equal ? undefined\r\n            : keySelect ? function (a, b) { return comparer(keySelect(a), keySelect(b)); } : function (a, b) { return comparer(a, b); };\r\n        return new OrderedLinq(this, function (array) { return new Iterator.ArrayIterator(array, 0, function (i) { return i >= array.length; }); }, compare);\r\n    };\r\n    EnumerableImpl.prototype.OrderByDescending = function (keySelect, equal) {\r\n        var comparer = equal ? equal : Constant.defCompare;\r\n        var compare = !keySelect && !equal ? undefined\r\n            : keySelect ? function (a, b) { return comparer(keySelect(a), keySelect(b)); } : function (a, b) { return comparer(a, b); };\r\n        return new OrderedLinq(this, function (array) { return new Iterator.ArrayIterator(array, array.length - 1, function (i) { return 0 > i; }, -1); }, compare, true);\r\n    };\r\n    EnumerableImpl.prototype.Range = function (start, count) {\r\n        return new EnumerableImpl(null, function () { return new Iterator.Generator(start, count, true); });\r\n    };\r\n    EnumerableImpl.prototype.Repeat = function (element, count) {\r\n        return new EnumerableImpl(null, function () { return new Iterator.Repeat(element, count); });\r\n    };\r\n    EnumerableImpl.prototype.Reverse = function () {\r\n        var array = Array.isArray(this._target) ? this._target : this.ToArray();\r\n        return new EnumerableImpl(null, function () { return new Iterator.ArrayIterator(array, array.length - 1, function (i) { return 0 > i; }, -1); });\r\n    };\r\n    EnumerableImpl.prototype.Select = function (transform) {\r\n        var _this = this;\r\n        return new EnumerableImpl(this, function () { return new Iterator.Select(_this[Symbol.iterator](), transform); });\r\n    };\r\n    EnumerableImpl.prototype.SelectMany = function (selector, result) {\r\n        var _this = this;\r\n        if (selector === void 0) { selector = Constant.selfFn; }\r\n        if (result === void 0) { result = function (x, s) { return s; }; }\r\n        return new EnumerableImpl(this, function () { return new Iterator.SelectMany(_this[Symbol.iterator](), selector, result); });\r\n    };\r\n    EnumerableImpl.prototype.Skip = function (skip) {\r\n        var _this = this;\r\n        return new EnumerableImpl(this, function () {\r\n            var iterator = _this[Symbol.iterator]();\r\n            var i = 0;\r\n            while (i < skip && !(iterator.next().done)) {\r\n                i++;\r\n            }\r\n            return new Iterator.Where(iterator, Constant.trueFn);\r\n        });\r\n    };\r\n    EnumerableImpl.prototype.SkipWhile = function (predicate) {\r\n        var _this = this;\r\n        return new EnumerableImpl(this, function () { return new Iterator.Skip(_this[Symbol.iterator](), predicate); });\r\n    };\r\n    EnumerableImpl.prototype.Take = function (take) {\r\n        var _this = this;\r\n        return new EnumerableImpl(this, function () { return new Iterator.Take(_this[Symbol.iterator](), function (a, n) { return take > n; }); });\r\n    };\r\n    EnumerableImpl.prototype.TakeWhile = function (predicate) {\r\n        var _this = this;\r\n        return new EnumerableImpl(this, function () { return new Iterator.Take(_this[Symbol.iterator](), predicate); });\r\n    };\r\n    EnumerableImpl.prototype.Union = function (second, keySelector) {\r\n        if (keySelector === void 0) { keySelector = Constant.selfFn; }\r\n        var aggregate = [this, second];\r\n        return new EnumerableImpl(this, function () { return new Iterator.Union(aggregate[Symbol.iterator](), keySelector); });\r\n    };\r\n    EnumerableImpl.prototype.Where = function (predicate) {\r\n        var _this = this;\r\n        if (predicate === void 0) { predicate = Constant.trueFn; }\r\n        return new EnumerableImpl(this, function () { return new Iterator.Where(_this[Symbol.iterator](), predicate); });\r\n    };\r\n    EnumerableImpl.prototype.Zip = function (second, func) {\r\n        var _this = this;\r\n        return new EnumerableImpl(this, function () { return new Iterator.Zip(_this[Symbol.iterator](), second[Symbol.iterator](), func); });\r\n    };\r\n    return EnumerableImpl;\r\n}());\r\nvar OrderedLinq = /** @class */ (function (_super) {\r\n    __extends(OrderedLinq, _super);\r\n    function OrderedLinq(target, factory, equal, reversed) {\r\n        if (reversed === void 0) { reversed = false; }\r\n        var _this = _super.call(this, target, factory) || this;\r\n        _this.equal = equal;\r\n        _this.reversed = reversed;\r\n        _this['thenBy'] = _this.ThenBy;\r\n        _this['thenByDescending'] = _this.ThenByDescending;\r\n        return _this;\r\n    }\r\n    OrderedLinq.prototype[Symbol.iterator] = function () {\r\n        if (!this._factoryArg) {\r\n            this._factoryArg = this._target.ToArray();\r\n            if (this.equal) {\r\n                this._factoryArg.sort(this.equal);\r\n            }\r\n            else {\r\n                this._factoryArg.sort();\r\n            }\r\n        }\r\n        return this._factory(this._factoryArg);\r\n    };\r\n    OrderedLinq.prototype.ThenBy = function (keySelect, equal) {\r\n        var _this = this;\r\n        var comparer = equal ? equal : Constant.defCompare;\r\n        var compare = !keySelect && !equal ? undefined\r\n            : keySelect ? function (a, b) { return comparer(keySelect(a), keySelect(b)); } : function (a, b) { return comparer(a, b); };\r\n        if (this instanceof OrderedLinq) {\r\n            if (!compare)\r\n                return this;\r\n            if (!this.equal) {\r\n                this.equal = compare;\r\n            }\r\n            else {\r\n                var superEqual_1 = this.equal;\r\n                this.equal = function (a, b) {\r\n                    var result = superEqual_1(a, b);\r\n                    return (0 != result) ? result : _this.reversed ? -compare(a, b) : compare(a, b);\r\n                };\r\n            }\r\n            return this;\r\n        }\r\n        else {\r\n            return new OrderedLinq(this, function (array) { return new Iterator.ArrayIterator(array, 0, function (i) { return i >= array.length; }); }, function (a, b) { return equal(keySelect(a), keySelect(b)); });\r\n        }\r\n    };\r\n    OrderedLinq.prototype.ThenByDescending = function (keySelect, equal) {\r\n        var _this = this;\r\n        var comparer = equal ? equal : Constant.defCompareRev;\r\n        var compare = !keySelect && !equal ? undefined\r\n            : keySelect ? function (a, b) { return comparer(keySelect(a), keySelect(b)); } : function (a, b) { return comparer(a, b); };\r\n        if (this instanceof OrderedLinq) {\r\n            if (!compare)\r\n                return this;\r\n            if (!this.equal) {\r\n                this.equal = compare;\r\n            }\r\n            else {\r\n                var superEqual_2 = this.equal;\r\n                this.equal = function (a, b) {\r\n                    var result = superEqual_2(a, b);\r\n                    return (0 != result) ? result : _this.reversed ? -compare(a, b) : compare(a, b);\r\n                };\r\n            }\r\n            return this;\r\n        }\r\n        else {\r\n            return new OrderedLinq(this, function (array) { return new Iterator.ArrayIterator(array, array.length - 1, function (i) { return 0 > i; }, -1); }, function (a, b) { return equal(keySelect(a), keySelect(b)); });\r\n        }\r\n    };\r\n    return OrderedLinq;\r\n}(EnumerableImpl));\r\n//# sourceMappingURL=linq.js.map\n\n//# sourceURL=webpack://gomoku/./node_modules/linq-es5/lib/linq.js?");

/***/ }),

/***/ "./node_modules/linq-es5/lib/utilities.js":
/*!************************************************!*\
  !*** ./node_modules/linq-es5/lib/utilities.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\n///////////////////////////////////////////////////////////////////////////////\r\n/** Copyright (c) ENikS.  All rights reserved.                               */\r\n//\r\n// Licensed under the Apache License, Version 2.0  ( the  \"License\" );  you may \r\n// not use this file except in compliance with the License.  You may  obtain  a \r\n// copy of the License at\r\n//\r\n//   http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required  by  applicable  law  or  agreed  to  in  writing,  software \r\n// distributed under the License is distributed on an \"AS  IS\"  BASIS,  WITHOUT\r\n// WARRANTIES OR CONDITIONS  OF  ANY  KIND, either express or implied.  See the \r\n// License for the specific  language  governing  permissions  and  limitations \r\n// under the License.\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//-----------------------------------------------------------------------------\r\n// Utility Functions\r\n//-----------------------------------------------------------------------------\r\n/** Default predicate, always true */\r\nexports.trueFn = function () { return true; };\r\n/** Default transformer, returns self */\r\nexports.selfFn = function (o) { return o; };\r\n/** Default Grouping */\r\nexports.defGrouping = function (a, b) {\r\n    if (!b[exports.CONST_KEY]) {\r\n        b[exports.CONST_KEY] = a;\r\n    }\r\n    return b;\r\n};\r\nexports.defCompare = function (a, b) {\r\n    return a == b ? 0 : a > b ? 1 : -1;\r\n};\r\nexports.defCompareRev = function (a, b) {\r\n    return -exports.defCompare(a, b);\r\n};\r\n/** Returns default value for the type */\r\nfunction getDefaultVal(type, value) {\r\n    if (value === void 0) { value = undefined; }\r\n    if (typeof type !== exports.CONST_STRING)\r\n        throw new TypeError(exports.CONST_NO_STRING);\r\n    // Handle simple types (primitives and plain function/object)\r\n    switch (type) {\r\n        case exports.CONST_BOOLEAN: return false;\r\n        case exports.CONST_NUMBER: return 0;\r\n        case exports.CONST_OBJECT: return null === value ? null : undefined;\r\n        case exports.CONST_STRING: return exports.CONST_EMPTY_STRING;\r\n        case exports.CONST_FUNCTION: return (\"Symbol\" === value['name']) ? Symbol() : void 0;\r\n    }\r\n    return undefined;\r\n}\r\nexports.getDefaultVal = getDefaultVal;\r\n/** Returns a map of element bsed on extracted keys  **/\r\nfunction getKeyedMap(iterable, keySelector, selElement) {\r\n    if (selElement === void 0) { selElement = exports.selfFn; }\r\n    var map = new Map();\r\n    var result, iterator = iterable[Symbol.iterator]();\r\n    while (!(result = iterator.next()).done) {\r\n        var key = keySelector(result.value);\r\n        if (!key)\r\n            continue;\r\n        var group = map.get(key);\r\n        if (!group) {\r\n            group = [];\r\n            map.set(key, group);\r\n        }\r\n        group.push(selElement(result.value));\r\n    }\r\n    return map;\r\n}\r\nexports.getKeyedMap = getKeyedMap;\r\nfunction getKeyedMapFast(iterable, keySelector) {\r\n    var map = new Map();\r\n    var result, iterator = iterable[Symbol.iterator]();\r\n    while (!(result = iterator.next()).done) {\r\n        var key = keySelector(result.value);\r\n        if (!key)\r\n            continue;\r\n        var group = map.get(key);\r\n        if (!group) {\r\n            group = [];\r\n            map.set(key, group);\r\n        }\r\n        group.push(result.value);\r\n    }\r\n    return map;\r\n}\r\nexports.getKeyedMapFast = getKeyedMapFast;\r\nfunction getKeys(iterable, keySelector) {\r\n    var set = new Set();\r\n    var otherIterator = iterable[Symbol.iterator]();\r\n    var result;\r\n    if (keySelector) {\r\n        while (!(result = otherIterator.next()).done) {\r\n            var key = keySelector(result.value);\r\n            if (key)\r\n                set.add(key);\r\n        }\r\n    }\r\n    else {\r\n        while (!(result = otherIterator.next()).done) {\r\n            if (result.value)\r\n                set.add(result.value);\r\n        }\r\n    }\r\n    return set;\r\n}\r\nexports.getKeys = getKeys;\r\n//-----------------------------------------------------------------------------\r\n//  Constants\r\n//-----------------------------------------------------------------------------\r\nexports.CONST_INVALID_KEY = \"Key selector returned undefined Key\";\r\nexports.CONST_NO_STRING = \"Type must be a string.\";\r\nexports.CONST_DUPLICATE = \"Object already has property [key]\";\r\nexports.CONST_NOTHING_FOUND = \"No element satisfies the condition in predicate\";\r\nexports.CONST_NO_ELEMENTS = \"The source sequence is empty.\";\r\nexports.CONST_TOO_MANY = \"More than one element satisfies the condition in predicate.\";\r\nexports.CONST_OUTOFRANGE = \"Argument Out Of Range\";\r\nexports.CONST_KEY = \"key\";\r\nexports.CONST_UNDEFINED = \"undefined\";\r\nexports.CONST_LENGTH = \"length\";\r\nexports.CONST_FUNCTION = \"function\";\r\nexports.CONST_BOOLEAN = \"boolean\";\r\nexports.CONST_NUMBER = \"number\";\r\nexports.CONST_OBJECT = \"object\";\r\nexports.CONST_STRING = \"string\";\r\nexports.CONST_SYMBOL = \"symbol\";\r\nexports.CONST_EMPTY_STRING = \"\";\r\n//# sourceMappingURL=utilities.js.map\n\n//# sourceURL=webpack://gomoku/./node_modules/linq-es5/lib/utilities.js?");

/***/ }),

/***/ "./ts/AI/AI.ts":
/*!*********************!*\
  !*** ./ts/AI/AI.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AI = void 0;\nvar common_1 = __webpack_require__(/*! ../common */ \"./ts/common.ts\");\nvar stoneType_1 = __webpack_require__(/*! ../stoneType */ \"./ts/stoneType.ts\");\nvar AI = /** @class */ (function () {\n    function AI(agent, board) {\n        this.agent = agent;\n        this.board = board;\n    }\n    /**\n     * AIが次の手を実行する\n     */\n    AI.prototype.execute = function () {\n        if (!common_1.Common.placeable) {\n            return;\n        }\n        common_1.Common.disPlaceable();\n        this.putStone();\n    };\n    /**\n     * 実際に石を置く操作\n     */\n    AI.prototype.putStone = function () {\n        var stoneType = common_1.Common.getNextStoneType();\n        var targetCell = this.getNextPutCell();\n        targetCell.putStone(stoneType);\n        common_1.Common.activePlaceable();\n    };\n    /**\n     * 強化学習Agentから次おくセルを取得\n     * @returns\n     */\n    AI.prototype.getNextPutCell = function () {\n        var action = this.agent.getAction(this.board.getState());\n        if (action < 0) {\n            return this.getNextPutCell();\n        }\n        var actionArr = common_1.Common.convertActionToArray(action);\n        var x = actionArr[0];\n        var y = actionArr[1];\n        var row = this.board.rowList[y];\n        var cell = row.cellList[x];\n        if (cell.stoneType === stoneType_1.StoneType.NONE) {\n            return cell;\n        }\n        return this.getNextPutCell();\n    };\n    return AI;\n}());\nexports.AI = AI;\n\n\n//# sourceURL=webpack://gomoku/./ts/AI/AI.ts?");

/***/ }),

/***/ "./ts/AI/Trainer.ts":
/*!**************************!*\
  !*** ./ts/AI/Trainer.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Trainer = void 0;\nvar judgment_1 = __webpack_require__(/*! ../judgment/judgment */ \"./ts/judgment/judgment.ts\");\nvar stoneType_1 = __webpack_require__(/*! ../stoneType */ \"./ts/stoneType.ts\");\nvar Trainer = /** @class */ (function () {\n    function Trainer(agent, game) {\n        this.agent = agent;\n        this.game = game;\n    }\n    /**\n     * 学習\n     * @param numEpisodes\n     */\n    Trainer.prototype.train = function (numEpisodes) {\n        for (var i = 0; i < numEpisodes; i++) {\n            this.game.resetTraining();\n            var state = Object.assign([], this.game.getStateForAI());\n            var stone = stoneType_1.StoneType.WHITE;\n            var rewardSum = 0;\n            var done = false;\n            while (!done) {\n                var action = this.agent.getAction(state);\n                var isPut = this.game.step(action, stone);\n                var reward = 0;\n                if (!isPut) {\n                    rewardSum--;\n                    this.agent.update(state, action, state, -1);\n                    continue;\n                }\n                var judgement = new judgment_1.Judgment();\n                var result = judgement.judge(this.game.trainingList);\n                if (result === stoneType_1.StoneType.NONE) {\n                    reward = 0;\n                }\n                else if (result === stoneType_1.StoneType.BLACK) {\n                    rewardSum++;\n                    reward = 1;\n                    done = true;\n                    console.log('勝利');\n                }\n                else {\n                    rewardSum--;\n                    reward = -1;\n                    done = true;\n                    console.log('敗北');\n                }\n                var nextState = Object.assign([], this.game.getStateForAI());\n                this.agent.update(state, action, nextState, reward);\n                state = this.game.getStateForAI();\n                stone = stone === stoneType_1.StoneType.WHITE ? stoneType_1.StoneType.BLACK : stoneType_1.StoneType.WHITE;\n            }\n            console.log(\"Episode \".concat(i + 1, \" finished. Score: \").concat(rewardSum));\n        }\n        console.log(JSON.stringify(this.agent.qTable));\n        console.log(\"Training finished.\");\n    };\n    return Trainer;\n}());\nexports.Trainer = Trainer;\n\n\n//# sourceURL=webpack://gomoku/./ts/AI/Trainer.ts?");

/***/ }),

/***/ "./ts/AI/qLearningAgent.ts":
/*!*********************************!*\
  !*** ./ts/AI/qLearningAgent.ts ***!
  \*********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.QLearningAgent = void 0;\nvar const_1 = __webpack_require__(/*! ../const */ \"./ts/const.ts\");\nvar stoneType_1 = __webpack_require__(/*! ../stoneType */ \"./ts/stoneType.ts\");\nvar qtable_json_1 = __importDefault(__webpack_require__(/*! ./qtable.json */ \"./ts/AI/qtable.json\"));\nvar QLearningAgent = /** @class */ (function () {\n    /**\n     * Constructor\n     * @param {number} epsilon ε-greedy法のε (0=1 デフォルト0.1)\n     * @param {number} alpha 学習率 (0~1、デフォルト0.5)\n     * @param {number} gamma 割引率 (0~1, デフォルト0.9)\n     */\n    function QLearningAgent(epsilon, alpha, gamma) {\n        if (epsilon === void 0) { epsilon = 0.1; }\n        if (alpha === void 0) { alpha = 0.5; }\n        if (gamma === void 0) { gamma = 0.9; }\n        this.numActions = Math.pow(const_1.Const.BOARD_SIZE, 2);\n        this.epsilon = epsilon;\n        this.alpha = alpha;\n        this.gamma = gamma;\n        this.qTable = qtable_json_1.default; // jsonファイルから持ってくる\n    }\n    /**\n     * 行動の選択\n     * @param state\n     * @returns\n     */\n    QLearningAgent.prototype.getAction = function (state) {\n        if (Math.random() < this.epsilon) {\n            console.log('ε-greedy法によるランダムな行動');\n            // ε-greedy法によるランダムな行動\n            console.log(this.getLegalActions(state));\n            return this.getLegalActions(state)[Math.floor(Math.random() * this.getLegalActions(state).length)];\n        }\n        console.log('最適な行動を選ぶ');\n        // 最適な行動を選ぶ\n        var bestAction = -1;\n        var bestValue = -Infinity;\n        for (var _i = 0, _a = this.getLegalActions(state); _i < _a.length; _i++) {\n            var action = _a[_i];\n            var value = this.getQValue(state, action);\n            if (value > bestValue) {\n                bestAction = action;\n                bestValue = value;\n            }\n        }\n        return bestAction;\n    };\n    /**\n     * Q値の取得\n     * @param {number[]} state\n     * @param {number} action\n     * @returns\n     */\n    QLearningAgent.prototype.getQValue = function (state, action) {\n        var stateString = state.toString();\n        if (!this.qTable.hasOwnProperty(stateString)) {\n            this.qTable[stateString] = {};\n        }\n        if (!this.qTable[stateString].hasOwnProperty(action)) {\n            this.qTable[stateString][action] = 0;\n        }\n        return this.qTable[stateString][action];\n    };\n    /**\n     * Q値の更新\n     * @param {number[]} state 現在の状態\n     * @param {number} action 行動\n     * @param {number[]} nextState 次の状態\n     * @param {number} reward 報酬(勝ち:1, 引き分け:0, 負け:-1, まだ終わっていない:0, 既に置いてるところに置いた:-1)\n     */\n    QLearningAgent.prototype.update = function (state, action, nextState, reward) {\n        var oldValue = this.getQValue(state, action);\n        var nextStateActions = this.getLegalActions(nextState);\n        if (nextStateActions.length === 0) {\n            this.qTable[state.toString()][action] = (1 - this.alpha) * oldValue + this.alpha * reward;\n        }\n        else {\n            var maxNextStateActionValue = -Infinity;\n            for (var _i = 0, nextStateActions_1 = nextStateActions; _i < nextStateActions_1.length; _i++) {\n                var nextStateAction = nextStateActions_1[_i];\n                var nextStateActionValue = this.getQValue(nextState, nextStateAction);\n                if (nextStateActionValue > maxNextStateActionValue) {\n                    maxNextStateActionValue = nextStateActionValue;\n                }\n            }\n            this.qTable[state.toString()][action] = (1 - this.alpha) * oldValue + this.alpha * (reward + this.gamma * maxNextStateActionValue);\n        }\n    };\n    /**\n     * 行動の取得関数\n     * @param {number[]} state 現在の状態\n     */\n    QLearningAgent.prototype.getLegalActions = function (state) {\n        var actions = [];\n        for (var i = 0; i < this.numActions; i++) {\n            if (state[i] === stoneType_1.StoneType.NONE) {\n                actions.push(i);\n            }\n        }\n        return actions;\n    };\n    return QLearningAgent;\n}());\nexports.QLearningAgent = QLearningAgent;\n\n\n//# sourceURL=webpack://gomoku/./ts/AI/qLearningAgent.ts?");

/***/ }),

/***/ "./ts/board/board.ts":
/*!***************************!*\
  !*** ./ts/board/board.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Board = void 0;\nvar common_1 = __webpack_require__(/*! ../common */ \"./ts/common.ts\");\nvar div_1 = __webpack_require__(/*! ../component/div */ \"./ts/component/div.ts\");\nvar const_1 = __webpack_require__(/*! ../const */ \"./ts/const.ts\");\nvar stoneType_1 = __webpack_require__(/*! ../stoneType */ \"./ts/stoneType.ts\");\nvar row_1 = __webpack_require__(/*! ./row */ \"./ts/board/row.ts\");\nvar Board = /** @class */ (function () {\n    function Board(containerElement) {\n        this.rowList = [];\n        this.trainingList = []; // 強化学習用データ(画面にレンダリングしたくないので)\n        this.boardElement = new div_1.Div('board', 'board').generate();\n        this.containerElement = containerElement;\n    }\n    Board.prototype.render = function () {\n        this.containerElement.appendChild(this.boardElement);\n        for (var i = 0; i < const_1.Const.BOARD_SIZE; i++) {\n            var row = new row_1.Row(this.boardElement, i);\n            this.rowList.push(row);\n        }\n    };\n    Board.prototype.getBoardInfo = function () {\n        var boardInfo = [];\n        this.rowList.forEach(function (row) {\n            boardInfo.push(row.getRowInfo());\n        });\n        return boardInfo;\n    };\n    Board.prototype.getState = function () {\n        return this.getBoardInfo().flat();\n    };\n    /**\n     * 強化学習用リセット\n     */\n    Board.prototype.resetTraining = function () {\n        this.trainingList = Object.assign([], new Array(const_1.Const.BOARD_SIZE).fill(Object.assign(new Array(const_1.Const.BOARD_SIZE).fill(stoneType_1.StoneType.NONE))));\n    };\n    Board.prototype.getStateForAI = function () {\n        return this.trainingList.flat();\n    };\n    Board.prototype.step = function (action, stoneType) {\n        var actionArr = common_1.Common.convertActionToArray(action);\n        var x = actionArr[0];\n        var y = actionArr[1];\n        if (this.trainingList[y][x] !== stoneType_1.StoneType.NONE) {\n            return false;\n        }\n        this.trainingList[y][x] = stoneType;\n        return true;\n    };\n    return Board;\n}());\nexports.Board = Board;\n\n\n//# sourceURL=webpack://gomoku/./ts/board/board.ts?");

/***/ }),

/***/ "./ts/board/cell.ts":
/*!**************************!*\
  !*** ./ts/board/cell.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Cell = void 0;\nvar common_1 = __webpack_require__(/*! ../common */ \"./ts/common.ts\");\nvar div_1 = __webpack_require__(/*! ../component/div */ \"./ts/component/div.ts\");\nvar const_1 = __webpack_require__(/*! ../const */ \"./ts/const.ts\");\nvar blackStone_1 = __webpack_require__(/*! ../stone/blackStone */ \"./ts/stone/blackStone.ts\");\nvar whiteStone_1 = __webpack_require__(/*! ../stone/whiteStone */ \"./ts/stone/whiteStone.ts\");\nvar stoneType_1 = __webpack_require__(/*! ../stoneType */ \"./ts/stoneType.ts\");\nvar Cell = /** @class */ (function () {\n    function Cell(containerElement, x, y) {\n        this.stoneType = stoneType_1.StoneType.NONE;\n        this.containerElement = containerElement;\n        this.x = x;\n        this.y = y;\n        this.cellElement = new div_1.Div(\"\".concat(y, \"_\").concat(x), 'cell').generate();\n        this.render();\n        this.setClickEvent();\n    }\n    Cell.prototype.render = function () {\n        this.containerElement.appendChild(this.cellElement);\n    };\n    Cell.prototype.getStone = function (stoneType) {\n        switch (stoneType) {\n            case stoneType_1.StoneType.WHITE:\n                return new whiteStone_1.WhiteStone();\n            case stoneType_1.StoneType.BLACK:\n                return new blackStone_1.BlackStone();\n        }\n        throw Error('Bad Request Exception!');\n    };\n    Cell.prototype.setClickEvent = function () {\n        var _this = this;\n        this.cellElement.addEventListener('click', function () { _this.clickEvent(); });\n    };\n    ;\n    Cell.prototype.clickEvent = function () {\n        if (!common_1.Common.placeable) {\n            return;\n        }\n        if (this.stoneType !== stoneType_1.StoneType.NONE) {\n            return;\n        }\n        this.putStone(common_1.Common.getNextStoneType());\n        setTimeout(function () {\n            // 勝敗判定実行\n            document.querySelector(\"#\".concat(const_1.Const.JUDGEMENT_ID)).click();\n        }, 100);\n    };\n    Cell.prototype.putStone = function (stoneType) {\n        this.stoneType = stoneType;\n        var stone = this.getStone(stoneType);\n        this.cellElement.appendChild(stone.generate());\n        // 次の順番を予約\n        common_1.Common.setNextStoneType();\n    };\n    return Cell;\n}());\nexports.Cell = Cell;\n\n\n//# sourceURL=webpack://gomoku/./ts/board/cell.ts?");

/***/ }),

/***/ "./ts/board/row.ts":
/*!*************************!*\
  !*** ./ts/board/row.ts ***!
  \*************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Row = void 0;\nvar div_1 = __webpack_require__(/*! ../component/div */ \"./ts/component/div.ts\");\nvar const_1 = __webpack_require__(/*! ../const */ \"./ts/const.ts\");\nvar cell_1 = __webpack_require__(/*! ./cell */ \"./ts/board/cell.ts\");\nvar linq_es5_1 = __importDefault(__webpack_require__(/*! linq-es5 */ \"./node_modules/linq-es5/lib/linq.js\"));\nvar Row = /** @class */ (function () {\n    function Row(containerElement, y) {\n        this.cellList = [];\n        this.y = y;\n        this.containerElement = containerElement;\n        this.rowElement = new div_1.Div(\"board_row_\".concat(y), 'board-row').generate();\n        this.render();\n    }\n    Row.prototype.render = function () {\n        this.containerElement.appendChild(this.rowElement);\n        for (var i = 0; i < const_1.Const.BOARD_SIZE; i++) {\n            var cell = new cell_1.Cell(this.rowElement, i, this.y);\n            this.cellList.push(cell);\n        }\n    };\n    Row.prototype.getRowInfo = function () {\n        var rowInfo = (0, linq_es5_1.default)(this.cellList).Select(function (cell) { return cell.stoneType; }).ToArray();\n        return rowInfo;\n    };\n    return Row;\n}());\nexports.Row = Row;\n\n\n//# sourceURL=webpack://gomoku/./ts/board/row.ts?");

/***/ }),

/***/ "./ts/common.ts":
/*!**********************!*\
  !*** ./ts/common.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Common = void 0;\nvar const_1 = __webpack_require__(/*! ./const */ \"./ts/const.ts\");\nvar stoneType_1 = __webpack_require__(/*! ./stoneType */ \"./ts/stoneType.ts\");\nvar Common = /** @class */ (function () {\n    function Common() {\n    }\n    Common.disPlaceable = function () {\n        localStorage.setItem(const_1.Const.PLACEABLE, '0');\n    };\n    Common.activePlaceable = function () {\n        localStorage.setItem(const_1.Const.PLACEABLE, '1');\n    };\n    Common.getNextStoneType = function () {\n        var _a;\n        var stoneTypeNumber = Number((_a = localStorage.getItem(const_1.Const.NEXT_STONE_TYPE)) !== null && _a !== void 0 ? _a : stoneType_1.StoneType.WHITE);\n        return stoneTypeNumber === stoneType_1.StoneType.WHITE ? stoneType_1.StoneType.WHITE : stoneType_1.StoneType.BLACK;\n    };\n    Common.setNextStoneType = function () {\n        localStorage.setItem(const_1.Const.NEXT_STONE_TYPE, (this.getNextStoneType() === stoneType_1.StoneType.WHITE ? stoneType_1.StoneType.BLACK : stoneType_1.StoneType.WHITE).toString());\n    };\n    Common.removeChildrenElement = function (targetElement) {\n        while (targetElement.firstChild) {\n            targetElement.removeChild(targetElement.firstChild);\n        }\n    };\n    Common.convertActionToArray = function (action) {\n        var x = Math.floor(action % const_1.Const.BOARD_SIZE);\n        var y = Math.floor(action / const_1.Const.BOARD_SIZE);\n        return [x, y];\n    };\n    var _a;\n    Common.placeable = ((_a = localStorage.getItem(const_1.Const.PLACEABLE)) !== null && _a !== void 0 ? _a : \"1\") === \"1\";\n    return Common;\n}());\nexports.Common = Common;\n\n\n//# sourceURL=webpack://gomoku/./ts/common.ts?");

/***/ }),

/***/ "./ts/component/button.ts":
/*!********************************!*\
  !*** ./ts/component/button.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Button = void 0;\nvar Button = /** @class */ (function () {\n    function Button(id, className, label) {\n        this.id = id;\n        this.className = className;\n        this.label = label;\n    }\n    Button.prototype.generate = function () {\n        var button = document.createElement('button');\n        button.type = 'button';\n        button.id = this.id;\n        button.innerHTML = this.label;\n        button.className = this.className;\n        return button;\n    };\n    return Button;\n}());\nexports.Button = Button;\n\n\n//# sourceURL=webpack://gomoku/./ts/component/button.ts?");

/***/ }),

/***/ "./ts/component/div.ts":
/*!*****************************!*\
  !*** ./ts/component/div.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Div = void 0;\nvar Div = /** @class */ (function () {\n    function Div(id, className, label) {\n        if (id === void 0) { id = \"\"; }\n        if (className === void 0) { className = \"\"; }\n        if (label === void 0) { label = \"\"; }\n        this.id = id;\n        this.className = className;\n        this.label = label;\n    }\n    Div.prototype.generate = function () {\n        var div = document.createElement('div');\n        div.id = this.id;\n        div.className = this.className;\n        div.innerText = this.label;\n        return div;\n    };\n    return Div;\n}());\nexports.Div = Div;\n\n\n//# sourceURL=webpack://gomoku/./ts/component/div.ts?");

/***/ }),

/***/ "./ts/const.ts":
/*!*********************!*\
  !*** ./ts/const.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Const = void 0;\nvar Const = /** @class */ (function () {\n    function Const() {\n    }\n    Const.BOARD_SIZE = 10;\n    Const.NEXT_STONE_TYPE = 'next_stone_type';\n    Const.PLACEABLE = 'placeable';\n    Const.JUDGEMENT_ID = 'judgement_id';\n    // 上、下、左、右、左上、左下、右上、右下\n    Const.dx = [0, 0, -1, 1, -1, -1, 1, 1];\n    Const.dy = [-1, 1, 0, 0, -1, 1, -1, 1];\n    return Const;\n}());\nexports.Const = Const;\n\n\n//# sourceURL=webpack://gomoku/./ts/const.ts?");

/***/ }),

/***/ "./ts/index.ts":
/*!*********************!*\
  !*** ./ts/index.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar AI_1 = __webpack_require__(/*! ./AI/AI */ \"./ts/AI/AI.ts\");\nvar qLearningAgent_1 = __webpack_require__(/*! ./AI/qLearningAgent */ \"./ts/AI/qLearningAgent.ts\");\nvar Trainer_1 = __webpack_require__(/*! ./AI/Trainer */ \"./ts/AI/Trainer.ts\");\nvar board_1 = __webpack_require__(/*! ./board/board */ \"./ts/board/board.ts\");\nvar common_1 = __webpack_require__(/*! ./common */ \"./ts/common.ts\");\nvar button_1 = __webpack_require__(/*! ./component/button */ \"./ts/component/button.ts\");\nvar const_1 = __webpack_require__(/*! ./const */ \"./ts/const.ts\");\nvar judgment_1 = __webpack_require__(/*! ./judgment/judgment */ \"./ts/judgment/judgment.ts\");\nvar stoneType_1 = __webpack_require__(/*! ./stoneType */ \"./ts/stoneType.ts\");\nvar board;\nvar judgement;\nvar ai;\nvar agent;\nwindow.addEventListener('DOMContentLoaded', function () {\n    var _a;\n    var app = (_a = document.querySelector('#app')) !== null && _a !== void 0 ? _a : new HTMLElement();\n    selector(app);\n});\nvar selector = function (container) {\n    var gameSelect = new button_1.Button('', '', 'ゲーム実行').generate();\n    gameSelect.addEventListener('click', function () { gameStart(); });\n    container.appendChild(gameSelect);\n    var aiSelect = new button_1.Button('', '', '教科学習').generate();\n    aiSelect.addEventListener('click', function () { train(); });\n    container.appendChild(aiSelect);\n};\nvar gameStart = function () {\n    var _a;\n    var agent = new qLearningAgent_1.QLearningAgent();\n    localStorage.removeItem(const_1.Const.NEXT_STONE_TYPE);\n    common_1.Common.activePlaceable();\n    var app = (_a = document.querySelector('#app')) !== null && _a !== void 0 ? _a : new HTMLElement();\n    common_1.Common.removeChildrenElement(app);\n    board = new board_1.Board(app);\n    board.render();\n    judgement = new judgment_1.Judgment();\n    ai = new AI_1.AI(agent, board);\n    generateJudgementButton();\n};\nvar train = function () {\n    var _a;\n    var agent = new qLearningAgent_1.QLearningAgent();\n    var app = (_a = document.querySelector('#app')) !== null && _a !== void 0 ? _a : new HTMLElement();\n    var trainer = new Trainer_1.Trainer(agent, new board_1.Board(app));\n    trainer.train(100000);\n};\nvar generateJudgementButton = function () {\n    var judgementButton = new button_1.Button(const_1.Const.JUDGEMENT_ID, '', '').generate();\n    judgementButton.style.display = 'none';\n    judgementButton.addEventListener('click', function () {\n        var winStone = judgement.judge(board.getBoardInfo());\n        if (winStone !== stoneType_1.StoneType.NONE) {\n            alert(\"\".concat(stoneType_1.StoneType[winStone], \"\\u306E\\u52DD\\u3061\"));\n            return;\n        }\n        // AIモードの時\n        if (true) {\n            ai.execute();\n        }\n    });\n    document.body.appendChild(judgementButton);\n};\n\n\n//# sourceURL=webpack://gomoku/./ts/index.ts?");

/***/ }),

/***/ "./ts/judgment/derectionType.ts":
/*!**************************************!*\
  !*** ./ts/judgment/derectionType.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DerectionType = void 0;\nvar DerectionType;\n(function (DerectionType) {\n    DerectionType[DerectionType[\"VERTICAL\"] = 1] = \"VERTICAL\";\n    DerectionType[DerectionType[\"BESIDE\"] = 2] = \"BESIDE\";\n    DerectionType[DerectionType[\"BOTTOMRIGHT\"] = 3] = \"BOTTOMRIGHT\";\n    DerectionType[DerectionType[\"BOTTOMLEFT\"] = 4] = \"BOTTOMLEFT\";\n})(DerectionType = exports.DerectionType || (exports.DerectionType = {}));\n\n\n//# sourceURL=webpack://gomoku/./ts/judgment/derectionType.ts?");

/***/ }),

/***/ "./ts/judgment/judgment.ts":
/*!*********************************!*\
  !*** ./ts/judgment/judgment.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Judgment = void 0;\nvar common_1 = __webpack_require__(/*! ../common */ \"./ts/common.ts\");\nvar const_1 = __webpack_require__(/*! ../const */ \"./ts/const.ts\");\nvar stoneType_1 = __webpack_require__(/*! ../stoneType */ \"./ts/stoneType.ts\");\nvar derectionType_1 = __webpack_require__(/*! ./derectionType */ \"./ts/judgment/derectionType.ts\");\nvar Judgment = /** @class */ (function () {\n    function Judgment() {\n        this.dx = const_1.Const.dx;\n        this.dy = const_1.Const.dy;\n    }\n    Judgment.prototype.judge = function (boardInfo) {\n        // 白勝敗判定\n        if (this.searchSerise5(boardInfo, stoneType_1.StoneType.WHITE)) {\n            common_1.Common.disPlaceable();\n            return stoneType_1.StoneType.WHITE;\n        }\n        // 黒勝敗判定\n        if (this.searchSerise5(boardInfo, stoneType_1.StoneType.BLACK)) {\n            common_1.Common.disPlaceable();\n            return stoneType_1.StoneType.BLACK;\n        }\n        return stoneType_1.StoneType.NONE;\n    };\n    Judgment.prototype.searchSerise5 = function (boardInfo, stoneType) {\n        var _this = this;\n        var isSerise5 = false;\n        this.getTargetDirectionTypeList().forEach(function (d) {\n            var derectionId = _this.getTargetDirectionIdx(d);\n            if (_this.searchMaxSeries(boardInfo, stoneType, _this.dx[derectionId], _this.dy[derectionId]) >= 5) {\n                isSerise5 = true;\n                return isSerise5;\n            }\n        });\n        return isSerise5;\n    };\n    Judgment.prototype.searchMaxSeries = function (boardInfo, stoneType, dx, dy) {\n        var maxSeries = 0;\n        var searchedList = this.generateSearchedList();\n        for (var i = 0; i < const_1.Const.BOARD_SIZE; i++) {\n            for (var j = 0; j < const_1.Const.BOARD_SIZE; j++) {\n                if (searchedList[j][i]) {\n                    continue;\n                }\n                var serise = this.searchTargetPosMaxSeries(boardInfo, stoneType, i, j, dx, dy, searchedList);\n                maxSeries = serise > maxSeries ? serise : maxSeries;\n            }\n        }\n        return maxSeries;\n    };\n    Judgment.prototype.searchTargetPosMaxSeries = function (boardInfo, stoneType, x, y, dx, dy, searchedList, series) {\n        if (series === void 0) { series = 1; }\n        if (boardInfo[y][x] !== stoneType) {\n            return 0;\n        }\n        searchedList[y][x] = true;\n        var nx = x + dx;\n        var ny = y + dy;\n        if (nx < 0 || nx >= const_1.Const.BOARD_SIZE) {\n            return series;\n        }\n        if (ny < 0 || ny >= const_1.Const.BOARD_SIZE) {\n            return series;\n        }\n        if (boardInfo[ny][nx] !== stoneType) {\n            return series;\n        }\n        searchedList[nx][ny] = true;\n        return this.searchTargetPosMaxSeries(boardInfo, stoneType, nx, ny, dx, dy, searchedList, series + 1);\n    };\n    Judgment.prototype.generateSearchedList = function () {\n        return Object.assign([], new Array(const_1.Const.BOARD_SIZE).fill(Object.assign([], new Array(const_1.Const.BOARD_SIZE).fill(false))));\n    };\n    ;\n    Judgment.prototype.getTargetDirectionIdx = function (derectionType) {\n        switch (derectionType) {\n            case derectionType_1.DerectionType.VERTICAL:\n                return 1;\n            case derectionType_1.DerectionType.BESIDE:\n                return 3;\n            case derectionType_1.DerectionType.BOTTOMLEFT:\n                return 5;\n            case derectionType_1.DerectionType.BOTTOMRIGHT:\n                return 7;\n        }\n    };\n    Judgment.prototype.getTargetDirectionTypeList = function () {\n        return [derectionType_1.DerectionType.VERTICAL, derectionType_1.DerectionType.BESIDE, derectionType_1.DerectionType.BOTTOMRIGHT, derectionType_1.DerectionType.BOTTOMLEFT];\n    };\n    return Judgment;\n}());\nexports.Judgment = Judgment;\n\n\n//# sourceURL=webpack://gomoku/./ts/judgment/judgment.ts?");

/***/ }),

/***/ "./ts/stone/Stone.ts":
/*!***************************!*\
  !*** ./ts/stone/Stone.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Stone = void 0;\nvar div_1 = __webpack_require__(/*! ../component/div */ \"./ts/component/div.ts\");\nvar stoneType_1 = __webpack_require__(/*! ../stoneType */ \"./ts/stoneType.ts\");\nvar Stone = /** @class */ (function () {\n    function Stone() {\n        this.stoneType = stoneType_1.StoneType.NONE;\n    }\n    Stone.prototype.generate = function () {\n        var stone = new div_1.Div('', \"stone \".concat(stoneType_1.StoneType[this.stoneType], \"_stone\")).generate();\n        return stone;\n    };\n    return Stone;\n}());\nexports.Stone = Stone;\n\n\n//# sourceURL=webpack://gomoku/./ts/stone/Stone.ts?");

/***/ }),

/***/ "./ts/stone/blackStone.ts":
/*!********************************!*\
  !*** ./ts/stone/blackStone.ts ***!
  \********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BlackStone = void 0;\nvar stoneType_1 = __webpack_require__(/*! ../stoneType */ \"./ts/stoneType.ts\");\nvar Stone_1 = __webpack_require__(/*! ./Stone */ \"./ts/stone/Stone.ts\");\nvar BlackStone = /** @class */ (function (_super) {\n    __extends(BlackStone, _super);\n    function BlackStone() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.stoneType = stoneType_1.StoneType.BLACK;\n        return _this;\n    }\n    return BlackStone;\n}(Stone_1.Stone));\nexports.BlackStone = BlackStone;\n\n\n//# sourceURL=webpack://gomoku/./ts/stone/blackStone.ts?");

/***/ }),

/***/ "./ts/stone/whiteStone.ts":
/*!********************************!*\
  !*** ./ts/stone/whiteStone.ts ***!
  \********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WhiteStone = void 0;\nvar stoneType_1 = __webpack_require__(/*! ../stoneType */ \"./ts/stoneType.ts\");\nvar Stone_1 = __webpack_require__(/*! ./Stone */ \"./ts/stone/Stone.ts\");\nvar WhiteStone = /** @class */ (function (_super) {\n    __extends(WhiteStone, _super);\n    function WhiteStone() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.stoneType = stoneType_1.StoneType.WHITE;\n        return _this;\n    }\n    return WhiteStone;\n}(Stone_1.Stone));\nexports.WhiteStone = WhiteStone;\n\n\n//# sourceURL=webpack://gomoku/./ts/stone/whiteStone.ts?");

/***/ }),

/***/ "./ts/stoneType.ts":
/*!*************************!*\
  !*** ./ts/stoneType.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.StoneType = void 0;\nvar StoneType;\n(function (StoneType) {\n    StoneType[StoneType[\"NONE\"] = -1] = \"NONE\";\n    StoneType[StoneType[\"WHITE\"] = 0] = \"WHITE\";\n    StoneType[StoneType[\"BLACK\"] = 1] = \"BLACK\";\n})(StoneType = exports.StoneType || (exports.StoneType = {}));\n\n\n//# sourceURL=webpack://gomoku/./ts/stoneType.ts?");

/***/ }),

/***/ "./ts/AI/qtable.json":
/*!***************************!*\
  !*** ./ts/AI/qtable.json ***!
  \***************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\":{\"0\":-1,\"1\":-1,\"2\":-1,\"3\":-1,\"4\":-1,\"5\":-1,\"6\":-1,\"7\":-1,\"8\":-1,\"9\":-1,\"10\":-1,\"11\":-1,\"12\":-1,\"13\":-1,\"14\":-1,\"15\":-1,\"16\":-1,\"17\":-1,\"18\":-1,\"19\":-1,\"20\":-1,\"21\":-1,\"22\":-1,\"23\":-1,\"24\":-1,\"25\":-1,\"26\":-1,\"27\":-1,\"28\":-1,\"29\":-1,\"30\":-1,\"31\":-1,\"32\":-1,\"33\":-1,\"34\":-1,\"35\":-1,\"36\":-1,\"37\":-1,\"38\":-1,\"39\":-1,\"40\":-1,\"41\":-1,\"42\":-1,\"43\":-1,\"44\":-1,\"45\":-1,\"46\":-1,\"47\":-1,\"48\":-1,\"49\":-1,\"50\":-1,\"51\":-1,\"52\":-1,\"53\":-1,\"54\":-1,\"55\":-1,\"56\":-1,\"57\":-1,\"58\":-1,\"59\":-1,\"60\":-1,\"61\":-1,\"62\":-1,\"63\":-1,\"64\":-1,\"65\":-1,\"66\":-1,\"67\":-1,\"68\":-1,\"69\":-1,\"70\":-1,\"71\":-1,\"72\":-1,\"73\":-1,\"74\":-1,\"75\":-1,\"76\":-1,\"77\":-1,\"78\":-1,\"79\":-1,\"80\":-1,\"81\":-1,\"82\":-1,\"83\":-1,\"84\":-1,\"85\":-1,\"86\":-1,\"87\":-1,\"88\":-1,\"89\":-1,\"90\":-1,\"91\":-1,\"92\":-1,\"93\":-1,\"94\":-1,\"95\":-1,\"96\":-1,\"97\":-1,\"98\":-1,\"99\":-1},\"0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0,\"28\":0,\"29\":0,\"31\":0,\"32\":0,\"33\":0,\"34\":0,\"35\":0,\"36\":0,\"37\":0,\"38\":0,\"39\":0,\"41\":0,\"42\":0,\"43\":0,\"44\":0,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0,\"65\":0,\"66\":0,\"67\":0,\"68\":0,\"69\":0,\"71\":0,\"72\":0,\"73\":0,\"74\":0,\"75\":0,\"76\":0,\"77\":0,\"78\":0,\"79\":0,\"81\":0,\"82\":0,\"83\":0,\"84\":0,\"85\":0,\"86\":0,\"87\":0,\"88\":0,\"89\":0,\"91\":0,\"92\":0,\"93\":0,\"94\":0,\"95\":0,\"96\":0,\"97\":0,\"98\":0,\"99\":0},\"-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1\":{\"0\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0,\"28\":0,\"29\":0,\"30\":0,\"32\":0,\"33\":0,\"34\":0,\"35\":0,\"36\":0,\"37\":0,\"38\":0,\"39\":0,\"40\":0,\"42\":0,\"43\":0,\"44\":0,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"62\":0,\"63\":0,\"64\":0,\"65\":0,\"66\":0,\"67\":0,\"68\":0,\"69\":0,\"70\":0,\"72\":0,\"73\":0,\"74\":0,\"75\":0,\"76\":0,\"77\":0,\"78\":0,\"79\":0,\"80\":0,\"82\":0,\"83\":0,\"84\":0,\"85\":0,\"86\":0,\"87\":0,\"88\":0,\"89\":0,\"90\":0,\"92\":0,\"93\":0,\"94\":0,\"95\":0,\"96\":0,\"97\":0,\"98\":0,\"99\":0},\"-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1\":{\"0\":0,\"1\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0,\"28\":0,\"29\":0,\"30\":0,\"31\":0,\"33\":0,\"34\":0,\"35\":0,\"36\":0,\"37\":0,\"38\":0,\"39\":0,\"40\":0,\"41\":0,\"43\":0,\"44\":0,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"63\":0,\"64\":0,\"65\":0,\"66\":0,\"67\":0,\"68\":0,\"69\":0,\"70\":0,\"71\":0,\"73\":0,\"74\":0,\"75\":0,\"76\":0,\"77\":0,\"78\":0,\"79\":0,\"80\":0,\"81\":0,\"83\":0,\"84\":0,\"85\":0,\"86\":0,\"87\":0,\"88\":0,\"89\":0,\"90\":0,\"91\":0,\"93\":0,\"94\":0,\"95\":0,\"96\":0,\"97\":0,\"98\":0,\"99\":0},\"-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1\":{\"0\":0,\"1\":0,\"2\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0,\"28\":0,\"29\":0,\"30\":0,\"31\":0,\"32\":0,\"34\":0,\"35\":0,\"36\":0,\"37\":0,\"38\":0,\"39\":0,\"40\":0,\"41\":0,\"42\":0,\"44\":0,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"64\":0,\"65\":0,\"66\":0,\"67\":0,\"68\":0,\"69\":0,\"70\":0,\"71\":0,\"72\":0,\"74\":0,\"75\":0,\"76\":0,\"77\":0,\"78\":0,\"79\":0,\"80\":0,\"81\":0,\"82\":0,\"84\":0,\"85\":0,\"86\":0,\"87\":0,\"88\":0,\"89\":0,\"90\":0,\"91\":0,\"92\":0,\"94\":0,\"95\":0,\"96\":0,\"97\":0,\"98\":0,\"99\":0},\"-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1\":{\"0\":0,\"1\":0,\"2\":0,\"3\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"25\":0,\"26\":0,\"27\":0,\"28\":0,\"29\":0,\"30\":0,\"31\":0,\"32\":0,\"33\":0,\"35\":0,\"36\":0,\"37\":0,\"38\":0,\"39\":0,\"40\":0,\"41\":0,\"42\":0,\"43\":0,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"65\":0,\"66\":0,\"67\":0,\"68\":0,\"69\":0,\"70\":0,\"71\":0,\"72\":0,\"73\":0,\"75\":0,\"76\":0,\"77\":0,\"78\":0,\"79\":0,\"80\":0,\"81\":0,\"82\":0,\"83\":0,\"85\":0,\"86\":0,\"87\":0,\"88\":0,\"89\":0,\"90\":0,\"91\":0,\"92\":0,\"93\":0,\"95\":0,\"96\":0,\"97\":0,\"98\":0,\"99\":0},\"-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1\":{\"0\":0,\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"26\":0,\"27\":0,\"28\":0,\"29\":0,\"30\":0,\"31\":0,\"32\":0,\"33\":0,\"34\":0,\"36\":0,\"37\":0,\"38\":0,\"39\":0,\"40\":0,\"41\":0,\"42\":0,\"43\":0,\"44\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0,\"66\":0,\"67\":0,\"68\":0,\"69\":0,\"70\":0,\"71\":0,\"72\":0,\"73\":0,\"74\":0,\"76\":0,\"77\":0,\"78\":0,\"79\":0,\"80\":0,\"81\":0,\"82\":0,\"83\":0,\"84\":0,\"86\":0,\"87\":0,\"88\":0,\"89\":0,\"90\":0,\"91\":0,\"92\":0,\"93\":0,\"94\":0,\"96\":0,\"97\":0,\"98\":0,\"99\":0},\"-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1\":{\"0\":0,\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"27\":0,\"28\":0,\"29\":0,\"30\":0,\"31\":0,\"32\":0,\"33\":0,\"34\":0,\"35\":0,\"37\":0,\"38\":0,\"39\":0,\"40\":0,\"41\":0,\"42\":0,\"43\":0,\"44\":0,\"45\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0,\"65\":0,\"67\":0,\"68\":0,\"69\":0,\"70\":0,\"71\":0,\"72\":0,\"73\":0,\"74\":0,\"75\":0,\"77\":0,\"78\":0,\"79\":0,\"80\":0,\"81\":0,\"82\":0,\"83\":0,\"84\":0,\"85\":0,\"87\":0,\"88\":0,\"89\":0,\"90\":0,\"91\":0,\"92\":0,\"93\":0,\"94\":0,\"95\":0,\"97\":0,\"98\":0,\"99\":0},\"-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1\":{\"0\":0,\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"28\":0,\"29\":0,\"30\":0,\"31\":0,\"32\":0,\"33\":0,\"34\":0,\"35\":0,\"36\":0,\"38\":0,\"39\":0,\"40\":0,\"41\":0,\"42\":0,\"43\":0,\"44\":0,\"45\":0,\"46\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0,\"65\":0,\"66\":0,\"68\":0,\"69\":0,\"70\":0,\"71\":0,\"72\":0,\"73\":0,\"74\":0,\"75\":0,\"76\":0,\"78\":0,\"79\":0,\"80\":0,\"81\":0,\"82\":0,\"83\":0,\"84\":0,\"85\":0,\"86\":0,\"88\":0,\"89\":0,\"90\":0,\"91\":0,\"92\":0,\"93\":0,\"94\":0,\"95\":0,\"96\":0,\"98\":0,\"99\":0},\"-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1\":{\"0\":0,\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0,\"29\":0,\"30\":0,\"31\":0,\"32\":0,\"33\":0,\"34\":0,\"35\":0,\"36\":0,\"37\":0,\"39\":0,\"40\":0,\"41\":0,\"42\":0,\"43\":0,\"44\":0,\"45\":0,\"46\":0,\"47\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0,\"65\":0,\"66\":0,\"67\":0,\"69\":0,\"70\":0,\"71\":0,\"72\":0,\"73\":0,\"74\":0,\"75\":0,\"76\":0,\"77\":0,\"79\":0,\"80\":0,\"81\":0,\"82\":0,\"83\":0,\"84\":0,\"85\":0,\"86\":0,\"87\":0,\"89\":0,\"90\":0,\"91\":0,\"92\":0,\"93\":0,\"94\":0,\"95\":0,\"96\":0,\"97\":0,\"99\":0},\"-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0\":{\"0\":0,\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0,\"28\":0,\"30\":0,\"31\":0,\"32\":0,\"33\":0,\"34\":0,\"35\":0,\"36\":0,\"37\":0,\"38\":0,\"40\":0,\"41\":0,\"42\":0,\"43\":0,\"44\":0,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0,\"65\":0,\"66\":0,\"67\":0,\"68\":0,\"70\":0,\"71\":0,\"72\":0,\"73\":0,\"74\":0,\"75\":0,\"76\":0,\"77\":0,\"78\":0,\"80\":0,\"81\":0,\"82\":0,\"83\":0,\"84\":0,\"85\":0,\"86\":0,\"87\":0,\"88\":0,\"90\":0,\"91\":0,\"92\":0,\"93\":0,\"94\":0,\"95\":0,\"96\":0,\"97\":0,\"98\":0}}');\n\n//# sourceURL=webpack://gomoku/./ts/AI/qtable.json?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./ts/index.ts");
/******/ 	
/******/ })()
;